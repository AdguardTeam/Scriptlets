{
    "version": "1.1.10",
    "scriptlets": [
        {
            "names": [
                "abort-on-property-read",
                "abort-on-property-read.js",
                "ubo-abort-on-property-read.js",
                "aopr.js",
                "ubo-aopr.js",
                "abp-abort-on-property-read"
            ],
            "scriptlet": "function(source, args){function abortOnPropertyRead(source, property) {if (!property) {return;}var rid = randomId();var abort = function abort() {hit(source);throw new ReferenceError(rid);};var setChainPropAccess = function setChainPropAccess(owner, property) {var chainInfo = getPropertyInChain(owner, property);var base = chainInfo.base;var prop = chainInfo.prop,chain = chainInfo.chain;if (chain) {var setter = function setter(a) {base = a;if (a instanceof Object) {setChainPropAccess(a, chain);}};Object.defineProperty(owner, prop, {get: function get() {return base;},set: setter});return;}setPropertyAccess(base, prop, {get: abort,set: function set() {}});};setChainPropAccess(window, property);window.onerror = createOnErrorHandler(rid).bind();}function randomId() {return Math.random().toString(36).substr(2, 9);}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};}function createOnErrorHandler(rid) {var nativeOnError = window.onerror;return function onError(error) {if (typeof error === 'string' && error.indexOf(rid) !== -1) {return true;}if (nativeOnError instanceof Function) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOnError.apply(this, [error].concat(args));}return false;};}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];abortOnPropertyRead.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "abort-on-property-write",
                "abort-on-property-write.js",
                "ubo-abort-on-property-write.js",
                "aopw.js",
                "ubo-aopw.js",
                "abp-abort-on-property-write"
            ],
            "scriptlet": "function(source, args){function abortOnPropertyWrite(source, property) {if (!property) {return;}var rid = randomId();var abort = function abort() {hit(source);throw new ReferenceError(rid);};var setChainPropAccess = function setChainPropAccess(owner, property) {var chainInfo = getPropertyInChain(owner, property);var base = chainInfo.base;var prop = chainInfo.prop,chain = chainInfo.chain;if (chain) {var setter = function setter(a) {base = a;if (a instanceof Object) {setChainPropAccess(a, chain);}};Object.defineProperty(owner, prop, {get: function get() {return base;},set: setter});return;}setPropertyAccess(base, prop, {set: abort});};setChainPropAccess(window, property);window.onerror = createOnErrorHandler(rid).bind();}function randomId() {return Math.random().toString(36).substr(2, 9);}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};}function createOnErrorHandler(rid) {var nativeOnError = window.onerror;return function onError(error) {if (typeof error === 'string' && error.indexOf(rid) !== -1) {return true;}if (nativeOnError instanceof Function) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOnError.apply(this, [error].concat(args));}return false;};}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];abortOnPropertyWrite.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-setTimeout",
                "no-setTimeout-if.js",
                "ubo-no-setTimeout-if.js",
                "setTimeout-defuser.js",
                "ubo-setTimeout-defuser.js",
                "nostif.js",
                "ubo-nostif.js",
                "std.js",
                "ubo-std.js"
            ],
            "scriptlet": "function(source, args){function preventSetTimeout(source, match, delay) {var nativeTimeout = window.setTimeout;var nativeIsNaN = Number.isNaN || window.isNaN;var log = console.log.bind(console);var shouldLog = typeof match === 'undefined' && typeof delay === 'undefined';var INVERT_MARKER = '!';var isNotMatch = startsWith(match, INVERT_MARKER);if (isNotMatch) {match = match.slice(1);}var isNotDelay = startsWith(delay, INVERT_MARKER);if (isNotDelay) {delay = delay.slice(1);}delay = parseInt(delay, 10);delay = nativeIsNaN(delay) ? null : delay;match = match ? toRegExp(match) : toRegExp('/.?/');var timeoutWrapper = function timeoutWrapper(callback, timeout) {var shouldPrevent = false;if (shouldLog) {hit(source);log(\"setTimeout(\\\"\".concat(callback.toString(), \"\\\", \").concat(timeout, \")\"));} else if (!delay) {shouldPrevent = match.test(callback.toString()) !== isNotMatch;} else if (match === '/.?/') {shouldPrevent = timeout === delay !== isNotDelay;} else {shouldPrevent = match.test(callback.toString()) !== isNotMatch && timeout === delay !== isNotDelay;}if (shouldPrevent) {hit(source);return nativeTimeout(function () {}, timeout);}for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}return nativeTimeout.apply(window, [callback, timeout].concat(args));};window.setTimeout = timeoutWrapper;}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function startsWith(str, prefix) {return str && str.indexOf(prefix) === 0;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventSetTimeout.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-setInterval",
                "no-setInterval-if.js",
                "ubo-no-setInterval-if.js",
                "setInterval-defuser.js",
                "ubo-setInterval-defuser.js",
                "nosiif.js",
                "ubo-nosiif.js",
                "sid.js",
                "ubo-sid.js"
            ],
            "scriptlet": "function(source, args){function preventSetInterval(source, match, delay) {var nativeInterval = window.setInterval;var nativeIsNaN = Number.isNaN || window.isNaN;var log = console.log.bind(console);var shouldLog = typeof match === 'undefined' && typeof delay === 'undefined';var INVERT_MARKER = '!';var isNotMatch = startsWith(match, INVERT_MARKER);if (isNotMatch) {match = match.slice(1);}var isNotDelay = startsWith(delay, INVERT_MARKER);if (isNotDelay) {delay = delay.slice(1);}delay = parseInt(delay, 10);delay = nativeIsNaN(delay) ? null : delay;match = match ? toRegExp(match) : toRegExp('/.?/');var intervalWrapper = function intervalWrapper(callback, interval) {var shouldPrevent = false;if (shouldLog) {hit(source);log(\"setInterval(\\\"\".concat(callback.toString(), \"\\\", \").concat(interval, \")\"));} else if (!delay) {shouldPrevent = match.test(callback.toString()) !== isNotMatch;} else if (match === '/.?/') {shouldPrevent = interval === delay !== isNotDelay;} else {shouldPrevent = match.test(callback.toString()) !== isNotMatch && interval === delay !== isNotDelay;}if (shouldPrevent) {hit(source);return nativeInterval(function () {}, interval);}for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}return nativeInterval.apply(window, [callback, interval].concat(args));};window.setInterval = intervalWrapper;}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function startsWith(str, prefix) {return str && str.indexOf(prefix) === 0;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventSetInterval.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-window-open",
                "window.open-defuser.js",
                "ubo-window.open-defuser.js"
            ],
            "scriptlet": "function(source, args){function preventWindowOpen(source, inverse, match) {var nativeOpen = window.open;inverse = inverse ? !+inverse : !!inverse;match = match ? toRegExp(match) : toRegExp('/.?/');var openWrapper = function openWrapper(str) {if (inverse === match.test(str)) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOpen.apply(window, [str].concat(args));}hit(source);};window.open = openWrapper;}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventWindowOpen.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "abort-current-inline-script",
                "abort-current-inline-script.js",
                "ubo-abort-current-inline-script.js",
                "acis.js",
                "ubo-acis.js",
                "abp-abort-current-inline-script"
            ],
            "scriptlet": "function(source, args){function abortCurrentInlineScript(source, property) {var search = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;var regex = search ? toRegExp(search) : null;var rid = randomId();var getCurrentScript = function getCurrentScript() {if (!document.currentScript) {var scripts = document.getElementsByTagName('script');return scripts[scripts.length - 1];}return document.currentScript;};var ourScript = getCurrentScript();var abort = function abort() {var scriptEl = getCurrentScript();var content = scriptEl.textContent;try {var textContentGetter = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent').get;content = textContentGetter.call(scriptEl);} catch (e) {}if (scriptEl instanceof HTMLScriptElement && content.length > 0 && scriptEl !== ourScript && (!regex || regex.test(scriptEl.textContent))) {hit(source);throw new ReferenceError(rid);}};var setChainPropAccess = function setChainPropAccess(owner, property) {var chainInfo = getPropertyInChain(owner, property);var base = chainInfo.base;if (base !== null) {var prop = chainInfo.prop,chain = chainInfo.chain;if (chain) {var setter = function setter(a) {base = a;if (a instanceof Object) {setChainPropAccess(a, chain);}};Object.defineProperty(owner, prop, {get: function get() {return base;},set: setter});return;}var currentValue;var descriptor = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent');if (descriptor instanceof Object === false || descriptor.get instanceof Function === false) {currentValue = owner[prop];}setPropertyAccess(base, prop, {set: function set(value) {abort();currentValue = value;},get: function get() {abort();return currentValue;}});}};setChainPropAccess(window, property);window.onerror = createOnErrorHandler(rid).bind();}function randomId() {return Math.random().toString(36).substr(2, 9);}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function createOnErrorHandler(rid) {var nativeOnError = window.onerror;return function onError(error) {if (typeof error === 'string' && error.indexOf(rid) !== -1) {return true;}if (nativeOnError instanceof Function) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOnError.apply(this, [error].concat(args));}return false;};}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];abortCurrentInlineScript.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "set-constant",
                "set-constant.js",
                "ubo-set-constant.js",
                "set.js",
                "ubo-set.js"
            ],
            "scriptlet": "function(source, args){function setConstant(source, property, value) {if (!property) {return;}var nativeIsNaN = Number.isNaN || window.isNaN;var constantValue;if (value === 'undefined') {constantValue = undefined;} else if (value === 'false') {constantValue = false;} else if (value === 'true') {constantValue = true;} else if (value === 'null') {constantValue = null;} else if (value === 'noopFunc') {constantValue = function constantValue() {};} else if (value === 'trueFunc') {constantValue = function constantValue() {return true;};} else if (value === 'falseFunc') {constantValue = function constantValue() {return false;};} else if (/^\\d+$/.test(value)) {constantValue = parseFloat(value);if (nativeIsNaN(constantValue)) {return;}if (Math.abs(constantValue) > 0x7FFF) {return;}} else if (value === '-1') {constantValue = -1;} else if (value === '') {constantValue = '';} else {return;}var canceled = false;var mustCancel = function mustCancel(value) {if (canceled) {return canceled;}canceled = value !== undefined && constantValue !== undefined && typeof value !== typeof constantValue;return canceled;};var setChainPropAccess = function setChainPropAccess(owner, property) {var chainInfo = getPropertyInChain(owner, property);var base = chainInfo.base;var prop = chainInfo.prop,chain = chainInfo.chain;if (chain) {var setter = function setter(a) {base = a;if (a instanceof Object) {setChainPropAccess(a, chain);}};Object.defineProperty(owner, prop, {get: function get() {return base;},set: setter});return;}if (mustCancel(base[prop])) {return;}hit(source);setPropertyAccess(base, prop, {get: function get() {return constantValue;},set: function set(a) {if (mustCancel(a)) {constantValue = a;}}});};setChainPropAccess(window, property);}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];setConstant.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "remove-cookie",
                "cookie-remover.js",
                "ubo-cookie-remover.js"
            ],
            "scriptlet": "function(source, args){function removeCookie(source, match) {var regex = match ? toRegExp(match) : toRegExp('/.?/');var removeCookieFromHost = function removeCookieFromHost(cookieName, hostName) {var cookieSpec = \"\".concat(cookieName, \"=\");var domain1 = \"; domain=\".concat(hostName);var domain2 = \"; domain=.\".concat(hostName);var path = '; path=/';var expiration = '; expires=Thu, 01 Jan 1970 00:00:00 GMT';document.cookie = cookieSpec + expiration;document.cookie = cookieSpec + domain1 + expiration;document.cookie = cookieSpec + domain2 + expiration;document.cookie = cookieSpec + path + expiration;document.cookie = cookieSpec + domain1 + path + expiration;document.cookie = cookieSpec + domain2 + path + expiration;hit(source);};var rmCookie = function rmCookie() {document.cookie.split(';').forEach(function (cookieStr) {var pos = cookieStr.indexOf('=');if (pos === -1) {return;}var cookieName = cookieStr.slice(0, pos).trim();if (!regex.test(cookieName)) {return;}var hostParts = document.location.hostname.split('.');for (var i = 0; i <= hostParts.length - 1; i += 1) {var hostName = hostParts.slice(i).join('.');if (hostName) {removeCookieFromHost(cookieName, hostName);}}});};rmCookie();window.addEventListener('beforeunload', rmCookie);}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];removeCookie.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-addEventListener",
                "addEventListener-defuser.js",
                "ubo-addEventListener-defuser.js",
                "aeld.js",
                "ubo-aeld.js"
            ],
            "scriptlet": "function(source, args){function preventAddEventListener(source, event, funcStr) {event = event ? toRegExp(event) : toRegExp('/.?/');funcStr = funcStr ? toRegExp(funcStr) : toRegExp('/.?/');var nativeAddEventListener = window.EventTarget.prototype.addEventListener;function addEventListenerWrapper(eventName, callback) {if (event.test(eventName.toString()) && funcStr.test(callback.toString())) {hit(source);return undefined;}for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}return nativeAddEventListener.apply(this, [eventName, callback].concat(args));}window.EventTarget.prototype.addEventListener = addEventListenerWrapper;}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventAddEventListener.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-bab",
                "bab-defuser.js",
                "ubo-bab-defuser.js",
                "nobab.js",
                "ubo-nobab.js"
            ],
            "scriptlet": "function(source, args){function preventBab(source) {var _this = this;var nativeSetTimeout = window.setTimeout;var babRegex = /\\.bab_elementid.$/;window.setTimeout = function (callback) {if (typeof callback !== 'string' || !babRegex.test(callback)) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeSetTimeout.call.apply(nativeSetTimeout, [_this, callback].concat(args));}hit(source);};var signatures = [['blockadblock'], ['babasbm'], [/getItem\\('babn'\\)/], ['getElementById', 'String.fromCharCode', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', 'charAt', 'DOMContentLoaded', 'AdBlock', 'addEventListener', 'doScroll', 'fromCharCode', '<<2|r>>4', 'sessionStorage', 'clientWidth', 'localStorage', 'Math', 'random']];var check = function check(str) {for (var i = 0; i < signatures.length; i += 1) {var tokens = signatures[i];var match = 0;for (var j = 0; j < tokens.length; j += 1) {var token = tokens[j];var found = token instanceof RegExp ? token.test(str) : str.indexOf(token) > -1;if (found) {match += 1;}}if (match / tokens.length >= 0.8) {return true;}}return false;};var nativeEval = window.eval;window.eval = function (str) {if (!check(str)) {return nativeEval(str);}hit(source);var bodyEl = document.body;if (bodyEl) {bodyEl.style.removeProperty('visibility');}var el = document.getElementById('babasbmsgx');if (el) {el.parentNode.removeChild(el);}};}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventBab.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "nowebrtc",
                "nowebrtc.js",
                "ubo-nowebrtc.js"
            ],
            "scriptlet": "function(source, args){function nowebrtc(source) {var propertyName = '';if (window.RTCPeerConnection) {propertyName = 'RTCPeerConnection';} else if (window.webkitRTCPeerConnection) {propertyName = 'webkitRTCPeerConnection';}if (propertyName === '') {return;}var rtcReplacement = function rtcReplacement(config) {hit(source, \"Document tried to create an RTCPeerConnection: \".concat(config));};var noop = function noop() {};rtcReplacement.prototype = {close: noop,createDataChannel: noop,createOffer: noop,setRemoteDescription: noop};var rtc = window[propertyName];window[propertyName] = rtcReplacement;if (rtc.prototype) {rtc.prototype.createDataChannel = function (a, b) {return {close: noop,send: noop};}.bind(null);}}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];nowebrtc.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "log-addEventListener",
                "addEventListener-logger.js",
                "ubo-addEventListener-logger.js",
                "aell.js",
                "ubo-aell.js"
            ],
            "scriptlet": "function(source, args){function logAddEventListener(source) {var log = console.log.bind(console);var nativeAddEventListener = window.EventTarget.prototype.addEventListener;function addEventListenerWrapper(eventName, callback) {hit(source);log(\"addEventListener(\\\"\".concat(eventName, \"\\\", \").concat(callback.toString(), \")\"));for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}return nativeAddEventListener.apply(this, [eventName, callback].concat(args));}window.EventTarget.prototype.addEventListener = addEventListenerWrapper;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];logAddEventListener.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "log-eval"
            ],
            "scriptlet": "function(source, args){function logEval(source) {var log = console.log.bind(console);var nativeEval = window.eval;function evalWrapper(str) {hit(source);log(\"eval(\\\"\".concat(str, \"\\\")\"));return nativeEval(str);}window.eval = evalWrapper;var nativeFunction = window.Function;function FunctionWrapper() {hit(source);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}log(\"new Function(\".concat(args.join(', '), \")\"));return nativeFunction.apply(this, [].concat(args));}FunctionWrapper.prototype = Object.create(nativeFunction.prototype);FunctionWrapper.prototype.constructor = FunctionWrapper;window.Function = FunctionWrapper;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];logEval.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "log"
            ],
            "scriptlet": "function(source, args){function log() {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}console.log(args);};const updatedArgs = args ? [].concat(source).concat(args) : [source];log.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "noeval",
                "noeval.js",
                "silent-noeval.js",
                "ubo-noeval.js",
                "ubo-silent-noeval.js"
            ],
            "scriptlet": "function(source, args){function noeval(source) {window.eval = function evalWrapper(s) {hit(source, \"AdGuard has prevented eval:\\n\".concat(s));}.bind();}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];noeval.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-eval-if",
                "noeval-if.js",
                "ubo-noeval-if.js"
            ],
            "scriptlet": "function(source, args){function preventEvalIf(source, search) {search = search ? toRegExp(search) : toRegExp('/.?/');var nativeEval = window.eval;window.eval = function (payload) {if (!search.test(payload.toString())) {return nativeEval.call(window, payload);}hit(source, payload);return undefined;}.bind(window);}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventEvalIf.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-fab-3.2.0",
                "fuckadblock.js-3.2.0",
                "ubo-fuckadblock.js-3.2.0",
                "nofab.js",
                "ubo-nofab.js"
            ],
            "scriptlet": "function(source, args){function preventFab(source) {hit(source);var Fab = function Fab() {};Fab.prototype.check = noop;Fab.prototype.clearEvent = noop;Fab.prototype.emitEvent = noop;Fab.prototype.on = function (a, b) {if (!a) {b();}return this;};Fab.prototype.onDetected = function () {return this;};Fab.prototype.onNotDetected = function (a) {a();return this;};Fab.prototype.setOption = noop;window.FuckAdBlock = window.BlockAdBlock = Fab;window.fuckAdBlock = window.blockAdBlock = new Fab();}function noop() {}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventFab.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "set-popads-dummy",
                "popads-dummy.js",
                "ubo-popads-dummy.js"
            ],
            "scriptlet": "function(source, args){function setPopadsDummy(source) {delete window.PopAds;delete window.popns;Object.defineProperties(window, {PopAds: {get: function get() {hit(source);return {};}},popns: {get: function get() {hit(source);return {};}}});}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];setPopadsDummy.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-popads-net",
                "popads.net.js",
                "ubo-popads.net.js"
            ],
            "scriptlet": "function(source, args){function preventPopadsNet(source) {var rid = randomId();var throwError = function throwError() {throw new ReferenceError(rid);};delete window.PopAds;delete window.popns;Object.defineProperties(window, {PopAds: {set: throwError},popns: {set: throwError}});window.onerror = createOnErrorHandler(rid).bind();hit(source);}function createOnErrorHandler(rid) {var nativeOnError = window.onerror;return function onError(error) {if (typeof error === 'string' && error.indexOf(rid) !== -1) {return true;}if (nativeOnError instanceof Function) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOnError.apply(this, [error].concat(args));}return false;};}function randomId() {return Math.random().toString(36).substr(2, 9);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventPopadsNet.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "prevent-adfly",
                "adfly-defuser.js",
                "ubo-adfly-defuser.js"
            ],
            "scriptlet": "function(source, args){function preventAdfly(source) {var isDigit = function isDigit(data) {return /^\\d$/.test(data);};var handler = function handler(encodedURL) {var evenChars = '';var oddChars = '';for (var i = 0; i < encodedURL.length; i += 1) {if (i % 2 === 0) {evenChars += encodedURL.charAt(i);} else {oddChars = encodedURL.charAt(i) + oddChars;}}var data = (evenChars + oddChars).split('');for (var _i = 0; _i < data.length; _i += 1) {if (isDigit(data[_i])) {for (var ii = _i + 1; ii < data.length; ii += 1) {if (isDigit(data[ii])) {var temp = parseInt(data[_i], 10) ^ parseInt(data[ii], 10);if (temp < 10) {data[_i] = temp.toString();}_i = ii;break;}}}}data = data.join('');var decodedURL = window.atob(data).slice(16, -16);if (window.stop) {window.stop();}window.onbeforeunload = null;window.location.href = decodedURL;};var val;var applyHandler = true;var result = setPropertyAccess(window, 'ysmm', {configurable: false,set: function set(value) {if (applyHandler) {applyHandler = false;try {if (typeof value === 'string') {handler(value);}} catch (err) {}}val = value;},get: function get() {return val;}});if (result) {hit(source);} else {window.console.error('Failed to set up prevent-adfly scriptlet');}}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];preventAdfly.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "debug-on-property-read"
            ],
            "scriptlet": "function(source, args){function debugOnPropertyRead(source, property) {if (!property) {return;}var rid = randomId();var abort = function abort() {hit(source);debugger;};var setChainPropAccess = function setChainPropAccess(owner, property) {var chainInfo = getPropertyInChain(owner, property);var base = chainInfo.base;var prop = chainInfo.prop,chain = chainInfo.chain;if (chain) {var setter = function setter(a) {base = a;if (a instanceof Object) {setChainPropAccess(a, chain);}};Object.defineProperty(owner, prop, {get: function get() {return base;},set: setter});return;}setPropertyAccess(base, prop, {get: abort,set: function set() {}});};setChainPropAccess(window, property);window.onerror = createOnErrorHandler(rid).bind();}function randomId() {return Math.random().toString(36).substr(2, 9);}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};}function createOnErrorHandler(rid) {var nativeOnError = window.onerror;return function onError(error) {if (typeof error === 'string' && error.indexOf(rid) !== -1) {return true;}if (nativeOnError instanceof Function) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOnError.apply(this, [error].concat(args));}return false;};}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];debugOnPropertyRead.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "debug-on-property-write"
            ],
            "scriptlet": "function(source, args){function debugOnPropertyWrite(source, property) {if (!property) {return;}var rid = randomId();var abort = function abort() {hit(source);debugger;};var setChainPropAccess = function setChainPropAccess(owner, property) {var chainInfo = getPropertyInChain(owner, property);var base = chainInfo.base;var prop = chainInfo.prop,chain = chainInfo.chain;if (chain) {var setter = function setter(a) {base = a;if (a instanceof Object) {setChainPropAccess(a, chain);}};Object.defineProperty(owner, prop, {get: function get() {return base;},set: setter});return;}setPropertyAccess(base, prop, {set: abort});};setChainPropAccess(window, property);window.onerror = createOnErrorHandler(rid).bind();}function randomId() {return Math.random().toString(36).substr(2, 9);}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};}function createOnErrorHandler(rid) {var nativeOnError = window.onerror;return function onError(error) {if (typeof error === 'string' && error.indexOf(rid) !== -1) {return true;}if (nativeOnError instanceof Function) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOnError.apply(this, [error].concat(args));}return false;};}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];debugOnPropertyWrite.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "debug-current-inline-script"
            ],
            "scriptlet": "function(source, args){function debugCurrentInlineScript(source, property) {var search = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;var regex = search ? toRegExp(search) : null;var rid = randomId();var getCurrentScript = function getCurrentScript() {if (!document.currentScript) {var scripts = document.getElementsByTagName('script');return scripts[scripts.length - 1];}return document.currentScript;};var ourScript = getCurrentScript();var abort = function abort() {var scriptEl = getCurrentScript();if (scriptEl instanceof HTMLScriptElement && scriptEl.textContent.length > 0 && scriptEl !== ourScript && (!regex || regex.test(scriptEl.textContent))) {hit(source);debugger;}};var setChainPropAccess = function setChainPropAccess(owner, property) {var chainInfo = getPropertyInChain(owner, property);var base = chainInfo.base;var prop = chainInfo.prop,chain = chainInfo.chain;if (chain) {var setter = function setter(a) {base = a;if (a instanceof Object) {setChainPropAccess(a, chain);}};Object.defineProperty(owner, prop, {get: function get() {return base;},set: setter});return;}var currentValue = base[prop];setPropertyAccess(base, prop, {set: function set(value) {abort();currentValue = value;},get: function get() {abort();return currentValue;}});};setChainPropAccess(window, property);window.onerror = createOnErrorHandler(rid).bind();}function randomId() {return Math.random().toString(36).substr(2, 9);}function setPropertyAccess(object, property, descriptor) {var currentDescriptor = Object.getOwnPropertyDescriptor(object, property);if (currentDescriptor && !currentDescriptor.configurable) {return false;}Object.defineProperty(object, property, descriptor);return true;}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function createOnErrorHandler(rid) {var nativeOnError = window.onerror;return function onError(error) {if (typeof error === 'string' && error.indexOf(rid) !== -1) {return true;}if (nativeOnError instanceof Function) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return nativeOnError.apply(this, [error].concat(args));}return false;};}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];debugCurrentInlineScript.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "remove-attr",
                "remove-attr.js",
                "ubo-remove-attr.js",
                "ra.js",
                "ubo-ra.js"
            ],
            "scriptlet": "function(source, args){function removeAttr(source, attrs, selector) {if (!attrs) {return;}attrs = attrs.split(/\\s*\\|\\s*/);if (!selector) {selector = \"[\".concat(attrs.join('],['), \"]\");}var rmattr = function rmattr() {var nodes = [].slice.call(document.querySelectorAll(selector));var removed = false;nodes.forEach(function (node) {attrs.forEach(function (attr) {node.removeAttribute(attr);removed = true;});});if (removed) {hit(source);}};rmattr();observeDOMChanges(rmattr, true);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}}function observeDOMChanges(callback) {var observeAttrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var attrsToObserv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var throttle = function throttle(method, delay) {var wait = false;var savedArgs;var wrapper = function wrapper() {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}if (wait) {savedArgs = args;return;}method.apply(void 0, args);wait = true;setTimeout(function () {wait = false;if (savedArgs) {wrapper(savedArgs);savedArgs = null;}}, delay);};return wrapper;};var THROTTLE_DELAY_MS = 20;var observer = new MutationObserver(throttle(callbackWrapper, THROTTLE_DELAY_MS));var connect = function connect() {if (attrsToObserv.length > 0) {observer.observe(document.documentElement, {childList: true,subtree: true,attributes: observeAttrs,attributeFilter: attrsToObserv});} else {observer.observe(document.documentElement, {childList: true,subtree: true,attributes: observeAttrs});}};var disconnect = function disconnect() {observer.disconnect();};function callbackWrapper() {disconnect();callback();connect();}connect();};const updatedArgs = args ? [].concat(source).concat(args) : [source];removeAttr.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "remove-class"
            ],
            "scriptlet": "function(source, args){function removeClass(source, classNames, selector) {if (!classNames) {return;}classNames = classNames.split(/\\s*\\|\\s*/);var selectors = [];if (!selector) {selectors = classNames.map(function (className) {return \".\".concat(className);});}var removeClassHandler = function removeClassHandler() {var nodes = new Set();if (selector) {var foundedNodes = [].slice.call(document.querySelectorAll(selector));foundedNodes.forEach(function (n) {return nodes.add(n);});} else if (selectors.length > 0) {selectors.forEach(function (s) {var elements = document.querySelectorAll(s);for (var i = 0; i < elements.length; i += 1) {var element = elements[i];nodes.add(element);}});}var removed = false;nodes.forEach(function (node) {classNames.forEach(function (className) {if (node.classList.contains(className)) {node.classList.remove(className);removed = true;}});});if (removed) {hit(source);}};removeClassHandler();var CLASS_ATTR_NAME = ['class'];observeDOMChanges(removeClassHandler, true, CLASS_ATTR_NAME);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}}function observeDOMChanges(callback) {var observeAttrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var attrsToObserv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var throttle = function throttle(method, delay) {var wait = false;var savedArgs;var wrapper = function wrapper() {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}if (wait) {savedArgs = args;return;}method.apply(void 0, args);wait = true;setTimeout(function () {wait = false;if (savedArgs) {wrapper(savedArgs);savedArgs = null;}}, delay);};return wrapper;};var THROTTLE_DELAY_MS = 20;var observer = new MutationObserver(throttle(callbackWrapper, THROTTLE_DELAY_MS));var connect = function connect() {if (attrsToObserv.length > 0) {observer.observe(document.documentElement, {childList: true,subtree: true,attributes: observeAttrs,attributeFilter: attrsToObserv});} else {observer.observe(document.documentElement, {childList: true,subtree: true,attributes: observeAttrs});}};var disconnect = function disconnect() {observer.disconnect();};function callbackWrapper() {disconnect();callback();connect();}connect();};const updatedArgs = args ? [].concat(source).concat(args) : [source];removeClass.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "disable-newtab-links",
                "disable-newtab-links.js",
                "ubo-disable-newtab-links.js"
            ],
            "scriptlet": "function(source, args){function disableNewtabLinks(source) {document.addEventListener('click', function (ev) {var target = ev.target;while (target !== null) {if (target.localName === 'a' && target.hasAttribute('target')) {ev.stopPropagation();ev.preventDefault();hit(source);break;}target = target.parentNode;}});}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];disableNewtabLinks.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "adjust-setInterval",
                "nano-setInterval-booster.js",
                "ubo-nano-setInterval-booster.js",
                "nano-sib.js",
                "ubo-nano-sib.js"
            ],
            "scriptlet": "function(source, args){function adjustSetInterval(source, match, interval, boost) {var nativeInterval = window.setInterval;var nativeIsNaN = Number.isNaN || window.isNaN;var nativeIsFinite = Number.isFinite || window.isFinite;interval = parseInt(interval, 10);interval = nativeIsNaN(interval) ? 1000 : interval;boost = parseInt(boost, 10);boost = nativeIsNaN(interval) || !nativeIsFinite(boost) ? 0.05 : boost;match = match ? toRegExp(match) : toRegExp('/.?/');if (boost < 0.02) {boost = 0.02;}if (boost > 50) {boost = 50;}var intervalWrapper = function intervalWrapper(cb, d) {if (d === interval && match.test(cb.toString())) {d *= boost;hit(source);}for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}return nativeInterval.apply(window, [cb, d].concat(args));};window.setInterval = intervalWrapper;}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];adjustSetInterval.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "adjust-setTimeout",
                "nano-setTimeout-booster.js",
                "ubo-nano-setTimeout-booster.js",
                "nano-stb.js",
                "ubo-nano-stb.js"
            ],
            "scriptlet": "function(source, args){function adjustSetTimeout(source, match, timeout, boost) {var nativeTimeout = window.setTimeout;var nativeIsNaN = Number.isNaN || window.isNaN;var nativeIsFinite = Number.isFinite || window.isFinite;timeout = parseInt(timeout, 10);timeout = nativeIsNaN(timeout) ? 1000 : timeout;boost = parseInt(boost, 10);boost = nativeIsNaN(timeout) || !nativeIsFinite(boost) ? 0.05 : boost;match = match ? toRegExp(match) : toRegExp('/.?/');if (boost < 0.02) {boost = 0.02;}if (boost > 50) {boost = 50;}var timeoutWrapper = function timeoutWrapper(cb, d) {if (d === timeout && match.test(cb.toString())) {d *= boost;hit(source);}for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}return nativeTimeout.apply(window, [cb, d].concat(args));};window.setTimeout = timeoutWrapper;}function toRegExp(str) {if (str[0] === '/' && str[str.length - 1] === '/') {return new RegExp(str.slice(1, -1));}var escaped = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');return new RegExp(escaped);}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];adjustSetTimeout.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "dir-string",
                "abp-dir-string"
            ],
            "scriptlet": "function(source, args){function dirString(source, times) {var _console = console,dir = _console.dir;times = parseInt(times, 10);function dirWrapper(object) {var temp;for (var i = 0; i < times; i += 1) {temp = \"\".concat(object);}if (typeof dir === 'function') {dir.call(this, object);}hit(source, temp);}console.dir = dirWrapper;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}};const updatedArgs = args ? [].concat(source).concat(args) : [source];dirString.apply(this, updatedArgs);}"
        },
        {
            "names": [
                "json-prune",
                "json-prune.js",
                "ubo-json-prune.js"
            ],
            "scriptlet": "function(source, args){function jsonPrune(source, propsToRemove, requiredInitialProps) {var log = console.log.bind(console);var prunePaths = propsToRemove !== undefined && propsToRemove !== '' ? propsToRemove.split(/ +/) : [];var needlePaths = requiredInitialProps !== undefined && requiredInitialProps !== '' ? requiredInitialProps.split(/ +/) : [];function isPruningNeeded(root) {if (!root) {return false;}for (var i = 0; i < needlePaths.length; i += 1) {var needlePath = needlePaths[i];var details = getPropertyInChain(root, needlePath, false);var nestedPropName = needlePath.split('.').pop();if (details && details.base[nestedPropName] === undefined) {return false;}}return true;}var nativeParse = JSON.parse;var parseWrapper = function parseWrapper() {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}var r = nativeParse.apply(window, args);if (prunePaths.length === 0) {log(window.location.hostname, r);return r;}if (isPruningNeeded(r) === false) {return r;}prunePaths.forEach(function (path) {var ownerObj = getPropertyInChain(r, path, false);if (ownerObj !== undefined && ownerObj.base) {delete ownerObj.base[ownerObj.prop];}});hit(source);return r;};JSON.parse = parseWrapper;}function hit(source, message) {if (source.verbose !== true) {return;}try {var log = console.log.bind(console);var trace = console.trace.bind(console);var prefix = source.ruleText || '';if (message) {log(\"\".concat(prefix, \" message:\\n\").concat(message));}log(\"\".concat(prefix, \" trace start\"));if (trace) {trace();}log(\"\".concat(prefix, \" trace end\"));} catch (e) {}if (typeof window.__debugScriptlets === 'function') {window.__debugScriptlets(source);}}function getPropertyInChain(base, chain) {var addProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var pos = chain.indexOf('.');if (pos === -1) {return {base: base,prop: chain};}var prop = chain.slice(0, pos);var own = base[prop];chain = chain.slice(pos + 1);if (own !== undefined) {return getPropertyInChain(own, chain, addProp);}if (!addProp) {return false;}Object.defineProperty(base, prop, {configurable: true});return {base: own,prop: prop,chain: chain};};const updatedArgs = args ? [].concat(source).concat(args) : [source];jsonPrune.apply(this, updatedArgs);}"
        }
    ]
}