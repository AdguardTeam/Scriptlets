[
    {
        "title": "1x1-transparent.gif",
        "aliases": [
            "1x1.gif",
            "1x1-transparent-gif"
        ],
        "isBlocking": false,
        "contentType": "image/gif;base64",
        "content": "R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw=="
    },
    {
        "title": "2x2-transparent.png",
        "aliases": [
            "2x2.png",
            "2x2-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAAAIAAAACCAYAAABytg0kAAAAC0lEQVQI12NgQAcAABIAAe+JVKQAAAAASUVORK5CYII="
    },
    {
        "title": "3x2-transparent.png",
        "aliases": [
            "3x2.png",
            "3x2-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAAAMAAAACCAYAAACddGYaAAAAC0lEQVQI12NgwAUAABoAASRETuUAAAAASUVORK5CYII="
    },
    {
        "title": "32x32-transparent.png",
        "aliases": [
            "32x32.png",
            "32x32-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGklEQVRYw+3BAQEAAACCIP+vbkhAAQAAAO8GECAAAZf3V9cAAAAASUVORK5CYII="
    },
    {
        "title": "noopframe",
        "aliases": [
            "noop.html",
            "blank-html"
        ],
        "isBlocking": false,
        "contentType": "text/html;base64",
        "content": "PCFET0NUWVBFIGh0bWw+CjxodG1sPgogICAgPGhlYWQ+PHRpdGxlPjwvdGl0bGU+PC9oZWFkPgogICAgPGJvZHk+PC9ib2R5Pgo8L2h0bWw+"
    },
    {
        "title": "noopcss",
        "aliases": [
            "blank-css"
        ],
        "isBlocking": false,
        "contentType": "text/css;base64",
        "content": ""
    },
    {
        "title": "noopjs",
        "aliases": [
            "noop.js",
            "blank-js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKCkge30pKCk="
    },
    {
        "title": "nooptext",
        "aliases": [
            "noop.txt",
            "blank-text"
        ],
        "isBlocking": false,
        "contentType": "text/plain;base64",
        "content": ""
    },
    {
        "title": "empty",
        "aliases": [
            "empty"
        ],
        "isBlocking": false,
        "contentType": "text/plain;base64",
        "content": ""
    },
    {
        "title": "noopvmap-1.0",
        "aliases": [
            "noop-vmap1.0.xml"
        ],
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PHZtYXA6Vk1BUCB4bWxuczp2bWFwPSJodHRwOi8vd3d3LmlhYi5uZXQvdmlkZW9zdWl0ZS92bWFwIiB2ZXJzaW9uPSIxLjAiPjwvdm1hcDpWTUFQPg=="
    },
    {
        "title": "noopvast-2.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iMi4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopvast-3.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iMy4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopvast-4.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iNC4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopmp3-0.1s",
        "aliases": [
            "noopmp3-0.1s",
            "blank-mp3"
        ],
        "isBlocking": false,
        "contentType": "audio/mp3;base64",
        "content": "SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU2LjQwLjEwMQAAAAAAAAAAAAAA//tUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAGAAADAABgYGBgYGBgYGBgYGBgYGBggICAgICAgICAgICAgICAgICgoKCgoKCgoKCgoKCgoKCgwMDAwMDAwMDAwMDAwMDAwMDg4ODg4ODg4ODg4ODg4ODg4P////////////////////8AAAAATGF2YzU2LjYwAAAAAAAAAAAAAAAAJAAAAAAAAAAAAwDNZKlY//sUZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZB4P8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZDwP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZFoP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZHgP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZJYP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV"
    },
    {
        "title": "noopmp4-1s",
        "aliases": [
            "noop-1s.mp4",
            "blank-mp4"
        ],
        "isBlocking": false,
        "contentType": "video/mp4;base64",
        "content": "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"
    },
    {
        "title": "click2load.html",
        "aliases": [
            "click2load.html",
            "ubo-click2load.html"
        ],
        "isBlocking": true,
        "contentType": "text/html;base64",
        "content": ""
    },
    {
        "title": "amazon-apstag",
        "aliases": [
            "ubo-amazon_apstag.js",
            "amazon_apstag.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEFtYXpvbkFwc3RhZyhzb3VyY2UpIHsKICAgIHZhciBhcHN0YWdXcmFwcGVyID0gewogICAgICBmZXRjaEJpZHM6IGZ1bmN0aW9uIGZldGNoQmlkcyhhLCBiKSB7CiAgICAgICAgaWYgKHR5cGVvZiBiID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICBiKFtdKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGluaXQ6IG5vb3BGdW5jLAogICAgICBzZXREaXNwbGF5Qmlkczogbm9vcEZ1bmMsCiAgICAgIHRhcmdldGluZ0tleXM6IG5vb3BGdW5jCiAgICB9OwogICAgd2luZG93LmFwc3RhZyA9IGFwc3RhZ1dyYXBwZXI7CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBBbWF6b25BcHN0YWcuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6ImFtYXpvbi1hcHN0YWciLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "ati-smarttag",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEFUSW50ZXJuZXRTbWFydFRhZyhzb3VyY2UpIHsKICAgIHZhciBzZXROb29wRnVuY1dyYXBwZXIgPSB7CiAgICAgIHNldDogbm9vcEZ1bmMKICAgIH07CiAgICB2YXIgc2VuZE5vb3BGdW5jV3JhcHBlciA9IHsKICAgICAgc2VuZDogbm9vcEZ1bmMKICAgIH07CiAgICB2YXIgZWNvbW1lcmNlV3JhcHBlciA9IHsKICAgICAgZGlzcGxheUNhcnQ6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyLAogICAgICAgIGNhcnQ6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgICB9LAogICAgICB1cGRhdGVDYXJ0OiB7CiAgICAgICAgY2FydDogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0sCiAgICAgIGRpc3BsYXlQcm9kdWN0OiB7CiAgICAgICAgcHJvZHVjdHM6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgICB9LAogICAgICBkaXNwbGF5UGFnZVByb2R1Y3Q6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0sCiAgICAgIGFkZFByb2R1Y3Q6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0sCiAgICAgIHJlbW92ZVByb2R1Y3Q6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0KICAgIH07CgogICAgdmFyIHRhZyA9IGZ1bmN0aW9uIHRhZygpIHt9OwoKICAgIHRhZy5wcm90b3R5cGUgPSB7CiAgICAgIHNldENvbmZpZzogbm9vcEZ1bmMsCiAgICAgIHNldFBhcmFtOiBub29wRnVuYywKICAgICAgZGlzcGF0Y2g6IG5vb3BGdW5jLAogICAgICBjdXN0b21WYXJzOiBzZXROb29wRnVuY1dyYXBwZXIsCiAgICAgIHB1Ymxpc2hlcjogc2V0Tm9vcEZ1bmNXcmFwcGVyLAogICAgICBvcmRlcjogc2V0Tm9vcEZ1bmNXcmFwcGVyLAogICAgICBjbGljazogc2VuZE5vb3BGdW5jV3JhcHBlciwKICAgICAgY2xpY2tMaXN0ZW5lcjogc2VuZE5vb3BGdW5jV3JhcHBlciwKICAgICAgaW50ZXJuYWxTZWFyY2g6IHNlbmROb29wRnVuY1dyYXBwZXIsCiAgICAgIGVjb21tZXJjZTogZWNvbW1lcmNlV3JhcHBlciwKICAgICAgaWRlbnRpZmllZFZpc2l0b3I6IHsKICAgICAgICB1bnNldDogbm9vcEZ1bmMKICAgICAgfSwKICAgICAgcGFnZTogewogICAgICAgIHNldDogbm9vcEZ1bmMsCiAgICAgICAgc2VuZDogbm9vcEZ1bmMKICAgICAgfSwKICAgICAgc2VsZlByb21vdGlvbjogewogICAgICAgIGFkZDogbm9vcEZ1bmMsCiAgICAgICAgc2VuZDogbm9vcEZ1bmMKICAgICAgfSwKICAgICAgcHJpdmFjeTogewogICAgICAgIHNldFZpc2l0b3JNb2RlOiBub29wRnVuYywKICAgICAgICBnZXRWaXNpdG9yTW9kZTogbm9vcEZ1bmMsCiAgICAgICAgaGl0OiBub29wRnVuYwogICAgICB9LAogICAgICByaWNoTWVkaWE6IHsKICAgICAgICBhZGQ6IG5vb3BGdW5jLAogICAgICAgIHNlbmQ6IG5vb3BGdW5jLAogICAgICAgIHJlbW92ZTogbm9vcEZ1bmMsCiAgICAgICAgcmVtb3ZlQWxsOiBub29wRnVuYwogICAgICB9CiAgICB9OwogICAgdmFyIHNtYXJ0VGFnV3JhcHBlciA9IHsKICAgICAgVHJhY2tlcjogewogICAgICAgIFRhZzogZnVuY3Rpb24gVGFnKCkgewogICAgICAgICAgcmV0dXJuIG5ldyB0YWcoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgICB3aW5kb3cuQVRJbnRlcm5ldCA9IHNtYXJ0VGFnV3JhcHBlcjsKICAgIGhpdChzb3VyY2UpOwogIH0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogICAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICB2YXIgbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9CgogICAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7CiAgICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgICB9CgogICAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgICAgaWYgKHRyYWNlKSB7CiAgICAgICAgdHJhY2UoKTsKICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogICAgfSBjYXRjaCAoZSkge30KCiAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEFUSW50ZXJuZXRTbWFydFRhZy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiYXRpLXNtYXJ0dGFnIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "fingerprintjs",
        "aliases": [
            "ubo-fingerprint2.js",
            "fingerprintjs.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEZpbmdlcnByaW50anMoc291cmNlKSB7CiAgICB2YXIgYnJvd3NlcklkID0gJyc7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4OyBpICs9IDEpIHsKICAgICAgYnJvd3NlcklkICs9IChNYXRoLnJhbmRvbSgpICogMHgxMDAwMCArIDB4MTAwMCkudG9TdHJpbmcoMTYpLnNsaWNlKC00KTsKICAgIH0KCiAgICB2YXIgRmluZ2VycHJpbnQgPSBmdW5jdGlvbiBGaW5nZXJwcmludCgpIHt9OwoKICAgIEZpbmdlcnByaW50LmdldCA9IGZ1bmN0aW9uIChvcHRpb25zLCBjYWxsYmFjaykgewogICAgICBpZiAoIWNhbGxiYWNrKSB7CiAgICAgICAgY2FsbGJhY2sgPSBvcHRpb25zOwogICAgICB9CgogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoY2FsbGJhY2spIHsKICAgICAgICAgIGNhbGxiYWNrKGJyb3dzZXJJZCwgW10pOwogICAgICAgIH0KICAgICAgfSwgMSk7CiAgICB9OwoKICAgIEZpbmdlcnByaW50LnByb3RvdHlwZSA9IHsKICAgICAgZ2V0OiBGaW5nZXJwcmludC5nZXQKICAgIH07CiAgICB3aW5kb3cuRmluZ2VycHJpbnQyID0gRmluZ2VycHJpbnQ7CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgRmluZ2VycHJpbnRqcy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiZmluZ2VycHJpbnRqcyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "gemius",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdlbWl1cyhzb3VyY2UpIHsKICAgIHZhciBHZW1pdXNQbGF5ZXIgPSBmdW5jdGlvbiBHZW1pdXNQbGF5ZXIoKSB7fTsKCiAgICBHZW1pdXNQbGF5ZXIucHJvdG90eXBlID0gewogICAgICBzZXRWaWRlb09iamVjdDogbm9vcEZ1bmMsCiAgICAgIG5ld1Byb2dyYW06IG5vb3BGdW5jLAogICAgICBwcm9ncmFtRXZlbnQ6IG5vb3BGdW5jLAogICAgICBuZXdBZDogbm9vcEZ1bmMsCiAgICAgIGFkRXZlbnQ6IG5vb3BGdW5jCiAgICB9OwogICAgd2luZG93LkdlbWl1c1BsYXllciA9IEdlbWl1c1BsYXllcjsKICAgIGhpdChzb3VyY2UpOwogIH0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogICAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICB2YXIgbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9CgogICAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7CiAgICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgICB9CgogICAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgICAgaWYgKHRyYWNlKSB7CiAgICAgICAgdHJhY2UoKTsKICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogICAgfSBjYXRjaCAoZSkge30KCiAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEdlbWl1cy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiZ2VtaXVzIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "google-analytics-ga",
        "aliases": [
            "ubo-google-analytics_ga.js",
            "google-analytics_ga.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUFuYWx5dGljc0dhKHNvdXJjZSkgewogICAgZnVuY3Rpb24gR2FxKCkge30KCiAgICBHYXEucHJvdG90eXBlLk5hID0gbm9vcEZ1bmM7CiAgICBHYXEucHJvdG90eXBlLk8gPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuU2EgPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuVGEgPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuVmEgPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuX2NyZWF0ZUFzeW5jVHJhY2tlciA9IG5vb3BGdW5jOwogICAgR2FxLnByb3RvdHlwZS5fZ2V0QXN5bmNUcmFja2VyID0gbm9vcEZ1bmM7CiAgICBHYXEucHJvdG90eXBlLl9nZXRQbHVnaW4gPSBub29wRnVuYzsKCiAgICBHYXEucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoZGF0YSkgewogICAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBkYXRhKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSA9PT0gZmFsc2UpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2YgZGF0YVswXSA9PT0gJ3N0cmluZycgJiYgLyhefFwuKV9saW5rJC8udGVzdChkYXRhWzBdKSAmJiB0eXBlb2YgZGF0YVsxXSA9PT0gJ3N0cmluZycpIHsKICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKGRhdGFbMV0pOwogICAgICB9CgogICAgICBpZiAoZGF0YVswXSA9PT0gJ19zZXQnICYmIGRhdGFbMV0gPT09ICdoaXRDYWxsYmFjaycgJiYgdHlwZW9mIGRhdGFbMl0gPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBkYXRhWzJdKCk7CiAgICAgIH0KICAgIH07CgogICAgdmFyIGdhcSA9IG5ldyBHYXEoKTsKICAgIHZhciBhc3luY1RyYWNrZXJzID0gd2luZG93Ll9nYXEgfHwgW107CgogICAgaWYgKEFycmF5LmlzQXJyYXkoYXN5bmNUcmFja2VycykpIHsKICAgICAgd2hpbGUgKGFzeW5jVHJhY2tlcnNbMF0pIHsKICAgICAgICBnYXEucHVzaChhc3luY1RyYWNrZXJzLnNoaWZ0KCkpOwogICAgICB9CiAgICB9CgogICAgd2luZG93Ll9nYXEgPSBnYXEucWYgPSBnYXE7CgogICAgZnVuY3Rpb24gR2F0KCkge30KCiAgICB2YXIgYXBpID0gWydfYWRkSWdub3JlZE9yZ2FuaWMnLCAnX2FkZElnbm9yZWRSZWYnLCAnX2FkZEl0ZW0nLCAnX2FkZE9yZ2FuaWMnLCAnX2FkZFRyYW5zJywgJ19jbGVhcklnbm9yZWRPcmdhbmljJywgJ19jbGVhcklnbm9yZWRSZWYnLCAnX2NsZWFyT3JnYW5pYycsICdfY29va2llUGF0aENvcHknLCAnX2RlbGV0ZUN1c3RvbVZhcicsICdfZ2V0TmFtZScsICdfc2V0QWNjb3VudCcsICdfZ2V0QWNjb3VudCcsICdfZ2V0Q2xpZW50SW5mbycsICdfZ2V0RGV0ZWN0Rmxhc2gnLCAnX2dldERldGVjdFRpdGxlJywgJ19nZXRMaW5rZXJVcmwnLCAnX2dldExvY2FsR2lmUGF0aCcsICdfZ2V0U2VydmljZU1vZGUnLCAnX2dldFZlcnNpb24nLCAnX2dldFZpc2l0b3JDdXN0b21WYXInLCAnX2luaXREYXRhJywgJ19saW5rJywgJ19saW5rQnlQb3N0JywgJ19zZXRBbGxvd0FuY2hvcicsICdfc2V0QWxsb3dIYXNoJywgJ19zZXRBbGxvd0xpbmtlcicsICdfc2V0Q2FtcENvbnRlbnRLZXknLCAnX3NldENhbXBNZWRpdW1LZXknLCAnX3NldENhbXBOYW1lS2V5JywgJ19zZXRDYW1wTk9LZXknLCAnX3NldENhbXBTb3VyY2VLZXknLCAnX3NldENhbXBUZXJtS2V5JywgJ19zZXRDYW1wYWlnbkNvb2tpZVRpbWVvdXQnLCAnX3NldENhbXBhaWduVHJhY2snLCAnX3NldENsaWVudEluZm8nLCAnX3NldENvb2tpZVBhdGgnLCAnX3NldENvb2tpZVBlcnNpc3RlbmNlJywgJ19zZXRDb29raWVUaW1lb3V0JywgJ19zZXRDdXN0b21WYXInLCAnX3NldERldGVjdEZsYXNoJywgJ19zZXREZXRlY3RUaXRsZScsICdfc2V0RG9tYWluTmFtZScsICdfc2V0TG9jYWxHaWZQYXRoJywgJ19zZXRMb2NhbFJlbW90ZVNlcnZlck1vZGUnLCAnX3NldExvY2FsU2VydmVyTW9kZScsICdfc2V0UmVmZXJyZXJPdmVycmlkZScsICdfc2V0UmVtb3RlU2VydmVyTW9kZScsICdfc2V0U2FtcGxlUmF0ZScsICdfc2V0U2Vzc2lvblRpbWVvdXQnLCAnX3NldFNpdGVTcGVlZFNhbXBsZVJhdGUnLCAnX3NldFNlc3Npb25Db29raWVUaW1lb3V0JywgJ19zZXRWYXInLCAnX3NldFZpc2l0b3JDb29raWVUaW1lb3V0JywgJ190cmFja0V2ZW50JywgJ190cmFja1BhZ2VMb2FkVGltZScsICdfdHJhY2tQYWdldmlldycsICdfdHJhY2tTb2NpYWwnLCAnX3RyYWNrVGltaW5nJywgJ190cmFja1RyYW5zJywgJ192aXNpdENvZGUnXTsKICAgIHZhciB0cmFja2VyID0gYXBpLnJlZHVjZShmdW5jdGlvbiAocmVzLCBmdW5jTmFtZSkgewogICAgICByZXNbZnVuY05hbWVdID0gbm9vcEZ1bmM7CiAgICAgIHJldHVybiByZXM7CiAgICB9LCB7fSk7CgogICAgdHJhY2tlci5fZ2V0TGlua2VyVXJsID0gZnVuY3Rpb24gKGEpIHsKICAgICAgcmV0dXJuIGE7CiAgICB9OwoKICAgIHRyYWNrZXIuX2xpbmsgPSBmdW5jdGlvbiAodXJsKSB7CiAgICAgIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdHJ5IHsKICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBpZiAoc291cmNlLnZlcmJvc2UpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgICAgfQogICAgfTsKCiAgICBHYXQucHJvdG90eXBlLl9hbm9ueW1pemVJUCA9IG5vb3BGdW5jOwogICAgR2F0LnByb3RvdHlwZS5fY3JlYXRlVHJhY2tlciA9IG5vb3BGdW5jOwogICAgR2F0LnByb3RvdHlwZS5fZm9yY2VTU0wgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuX2dldFBsdWdpbiA9IG5vb3BGdW5jOwoKICAgIEdhdC5wcm90b3R5cGUuX2dldFRyYWNrZXIgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0cmFja2VyOwogICAgfTsKCiAgICBHYXQucHJvdG90eXBlLl9nZXRUcmFja2VyQnlOYW1lID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdHJhY2tlcjsKICAgIH07CgogICAgR2F0LnByb3RvdHlwZS5fZ2V0VHJhY2tlcnMgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuYWEgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuYWIgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuaGIgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUubGEgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUub2EgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUucGEgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUudSA9IG5vb3BGdW5jOwogICAgdmFyIGdhdCA9IG5ldyBHYXQoKTsKICAgIHdpbmRvdy5fZ2F0ID0gZ2F0OwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge307CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgR29vZ2xlQW5hbHl0aWNzR2EuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Imdvb2dsZS1hbmFseXRpY3MtZ2EiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "google-analytics",
        "aliases": [
            "ubo-google-analytics_analytics.js",
            "google-analytics_analytics.js",
            "googletagmanager-gtm",
            "ubo-googletagmanager_gtm.js",
            "googletagmanager_gtm.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUFuYWx5dGljcyhzb3VyY2UpIHsKICAgIHZhciBUcmFja2VyID0gZnVuY3Rpb24gVHJhY2tlcigpIHt9OwoKICAgIHZhciBwcm90byA9IFRyYWNrZXIucHJvdG90eXBlOwogICAgcHJvdG8uZ2V0ID0gbm9vcEZ1bmM7CiAgICBwcm90by5zZXQgPSBub29wRnVuYzsKICAgIHByb3RvLnNlbmQgPSBub29wRnVuYzsKICAgIHZhciBnb29nbGVBbmFseXRpY3NOYW1lID0gd2luZG93Lkdvb2dsZUFuYWx5dGljc09iamVjdCB8fCAnZ2EnOwoKICAgIGZ1bmN0aW9uIGdhKGEpIHsKICAgICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7CgogICAgICBpZiAobGVuID09PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgbGFzdEFyZyA9IGFyZ3VtZW50c1tsZW4gLSAxXTsKICAgICAgdmFyIHJlcGxhY2VyOwoKICAgICAgaWYgKGxhc3RBcmcgaW5zdGFuY2VvZiBPYmplY3QgJiYgbGFzdEFyZyAhPT0gbnVsbCAmJiB0eXBlb2YgbGFzdEFyZy5oaXRDYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHJlcGxhY2VyID0gbGFzdEFyZy5oaXRDYWxsYmFjazsKICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbGFzdEFyZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHJlcGxhY2VyID0gZnVuY3Rpb24gcmVwbGFjZXIoKSB7CiAgICAgICAgICBsYXN0QXJnKGdhLmNyZWF0ZSgpKTsKICAgICAgICB9OwogICAgICB9CgogICAgICB0cnkgewogICAgICAgIHNldFRpbWVvdXQocmVwbGFjZXIsIDEpOwogICAgICB9IGNhdGNoIChleCkge30KICAgIH0KCiAgICBnYS5jcmVhdGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBuZXcgVHJhY2tlcigpOwogICAgfTsKCiAgICBnYS5nZXRCeU5hbWUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBuZXcgVHJhY2tlcigpOwogICAgfTsKCiAgICBnYS5nZXRBbGwgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbbmV3IFRyYWNrZXIoKV07CiAgICB9OwoKICAgIGdhLnJlbW92ZSA9IG5vb3BGdW5jOwogICAgZ2EubG9hZGVkID0gdHJ1ZTsKICAgIHdpbmRvd1tnb29nbGVBbmFseXRpY3NOYW1lXSA9IGdhOwogICAgdmFyIF93aW5kb3cgPSB3aW5kb3csCiAgICAgICAgZGF0YUxheWVyID0gX3dpbmRvdy5kYXRhTGF5ZXIsCiAgICAgICAgZ29vZ2xlX29wdGltaXplID0gX3dpbmRvdy5nb29nbGVfb3B0aW1pemU7CgogICAgaWYgKGRhdGFMYXllciBpbnN0YW5jZW9mIE9iamVjdCA9PT0gZmFsc2UpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChkYXRhTGF5ZXIuaGlkZSBpbnN0YW5jZW9mIE9iamVjdCAmJiB0eXBlb2YgZGF0YUxheWVyLmhpZGUuZW5kID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIGRhdGFMYXllci5oaWRlLmVuZCgpOwogICAgfQoKICAgIHZhciBoYW5kbGVDYWxsYmFjayA9IGZ1bmN0aW9uIGhhbmRsZUNhbGxiYWNrKGRhdGFPYmosIGZ1bmNOYW1lKSB7CiAgICAgIGlmIChkYXRhT2JqICYmIHR5cGVvZiBkYXRhT2JqW2Z1bmNOYW1lXSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHNldFRpbWVvdXQoZGF0YU9ialtmdW5jTmFtZV0pOwogICAgICB9CiAgICB9OwoKICAgIGlmICh0eXBlb2YgZGF0YUxheWVyLnB1c2ggPT09ICdmdW5jdGlvbicpIHsKICAgICAgZGF0YUxheWVyLnB1c2ggPSBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmIChkYXRhIGluc3RhbmNlb2YgT2JqZWN0KSB7CiAgICAgICAgICBoYW5kbGVDYWxsYmFjayhkYXRhLCAnZXZlbnRDYWxsYmFjaycpOwoKICAgICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7CiAgICAgICAgICAgIGhhbmRsZUNhbGxiYWNrKGRhdGFba2V5XSwgJ2V2ZW50X2NhbGxiYWNrJyk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkgewogICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChhcmcpIHsKICAgICAgICAgICAgaGFuZGxlQ2FsbGJhY2soYXJnLCAnY2FsbGJhY2snKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG5vb3BGdW5jOwogICAgICB9OwogICAgfQoKICAgIGlmIChnb29nbGVfb3B0aW1pemUgaW5zdGFuY2VvZiBPYmplY3QgJiYgdHlwZW9mIGdvb2dsZV9vcHRpbWl6ZS5nZXQgPT09ICdmdW5jdGlvbicpIHsKICAgICAgdmFyIGdvb2dsZU9wdGltaXplV3JhcHBlciA9IHsKICAgICAgICBnZXQ6IG5vb3BGdW5jCiAgICAgIH07CiAgICAgIHdpbmRvdy5nb29nbGVfb3B0aW1pemUgPSBnb29nbGVPcHRpbWl6ZVdyYXBwZXI7CiAgICB9CgogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge30KZnVuY3Rpb24gbm9vcE51bGwoKSB7CiAgICByZXR1cm4gbnVsbDsKICB9CmZ1bmN0aW9uIG5vb3BBcnJheSgpIHsKICAgIHJldHVybiBbXTsKICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEdvb2dsZUFuYWx5dGljcy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiZ29vZ2xlLWFuYWx5dGljcyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "google-ima3",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUltYTMoc291cmNlKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBWRVJTSU9OID0gJzMuNDUzLjAnOwogICAgdmFyIGltYSA9IHt9OwoKICAgIHZhciBBZERpc3BsYXlDb250YWluZXIgPSBmdW5jdGlvbiBBZERpc3BsYXlDb250YWluZXIoKSB7fTsKCiAgICBBZERpc3BsYXlDb250YWluZXIucHJvdG90eXBlLmRlc3Ryb3kgPSBub29wRnVuYzsKICAgIEFkRGlzcGxheUNvbnRhaW5lci5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IG5vb3BGdW5jOwoKICAgIHZhciBJbWFTZGtTZXR0aW5ncyA9IGZ1bmN0aW9uIEltYVNka1NldHRpbmdzKCkge307CgogICAgSW1hU2RrU2V0dGluZ3MucHJvdG90eXBlID0gewogICAgICBjOiB0cnVlLAogICAgICBmOiB7fSwKICAgICAgaTogZmFsc2UsCiAgICAgIGw6ICcnLAogICAgICBwOiAnJywKICAgICAgcjogMCwKICAgICAgdDogJycsCiAgICAgIHY6ICcnLAogICAgICBnZXRDb21wYW5pb25CYWNrZmlsbDogbm9vcEZ1bmMsCiAgICAgIGdldERpc2FibGVDdXN0b21QbGF5YmFja0ZvcklPUzEwUGx1czogZnVuY3Rpb24gZ2V0RGlzYWJsZUN1c3RvbVBsYXliYWNrRm9ySU9TMTBQbHVzKCkgewogICAgICAgIHJldHVybiBfdGhpcy5pOwogICAgICB9LAogICAgICBnZXRGZWF0dXJlRmxhZ3M6IGZ1bmN0aW9uIGdldEZlYXR1cmVGbGFncygpIHsKICAgICAgICByZXR1cm4gX3RoaXMuZjsKICAgICAgfSwKICAgICAgZ2V0TG9jYWxlOiBmdW5jdGlvbiBnZXRMb2NhbGUoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLmw7CiAgICAgIH0sCiAgICAgIGdldE51bVJlZGlyZWN0czogZnVuY3Rpb24gZ2V0TnVtUmVkaXJlY3RzKCkgewogICAgICAgIHJldHVybiBfdGhpcy5yOwogICAgICB9LAogICAgICBnZXRQbGF5ZXJUeXBlOiBmdW5jdGlvbiBnZXRQbGF5ZXJUeXBlKCkgewogICAgICAgIHJldHVybiBfdGhpcy50OwogICAgICB9LAogICAgICBnZXRQbGF5ZXJWZXJzaW9uOiBmdW5jdGlvbiBnZXRQbGF5ZXJWZXJzaW9uKCkgewogICAgICAgIHJldHVybiBfdGhpcy52OwogICAgICB9LAogICAgICBnZXRQcGlkOiBmdW5jdGlvbiBnZXRQcGlkKCkgewogICAgICAgIHJldHVybiBfdGhpcy5wOwogICAgICB9LAogICAgICBpc0Nvb2tpZXNFbmFibGVkOiBmdW5jdGlvbiBpc0Nvb2tpZXNFbmFibGVkKCkgewogICAgICAgIHJldHVybiBfdGhpcy5jOwogICAgICB9LAogICAgICBzZXRBdXRvUGxheUFkQnJlYWtzOiBub29wRnVuYywKICAgICAgc2V0Q29tcGFuaW9uQmFja2ZpbGw6IG5vb3BGdW5jLAogICAgICBzZXRDb29raWVzRW5hYmxlZDogZnVuY3Rpb24gc2V0Q29va2llc0VuYWJsZWQoYykgewogICAgICAgIF90aGlzLmMgPSAhIWM7CiAgICAgIH0sCiAgICAgIHNldERpc2FibGVDdXN0b21QbGF5YmFja0ZvcklPUzEwUGx1czogZnVuY3Rpb24gc2V0RGlzYWJsZUN1c3RvbVBsYXliYWNrRm9ySU9TMTBQbHVzKGkpIHsKICAgICAgICBfdGhpcy5pID0gISFpOwogICAgICB9LAogICAgICBzZXRGZWF0dXJlRmxhZ3M6IGZ1bmN0aW9uIHNldEZlYXR1cmVGbGFncyhmKSB7CiAgICAgICAgX3RoaXMuZiA9ICEhZjsKICAgICAgfSwKICAgICAgc2V0TG9jYWxlOiBmdW5jdGlvbiBzZXRMb2NhbGUobCkgewogICAgICAgIF90aGlzLmwgPSAhIWw7CiAgICAgIH0sCiAgICAgIHNldE51bVJlZGlyZWN0czogZnVuY3Rpb24gc2V0TnVtUmVkaXJlY3RzKHIpIHsKICAgICAgICBfdGhpcy5yID0gISFyOwogICAgICB9LAogICAgICBzZXRQbGF5ZXJUeXBlOiBmdW5jdGlvbiBzZXRQbGF5ZXJUeXBlKHQpIHsKICAgICAgICBfdGhpcy50ID0gISF0OwogICAgICB9LAogICAgICBzZXRQbGF5ZXJWZXJzaW9uOiBmdW5jdGlvbiBzZXRQbGF5ZXJWZXJzaW9uKHYpIHsKICAgICAgICBfdGhpcy52ID0gISF2OwogICAgICB9LAogICAgICBzZXRQcGlkOiBmdW5jdGlvbiBzZXRQcGlkKHApIHsKICAgICAgICBfdGhpcy5wID0gISFwOwogICAgICB9LAogICAgICBzZXRTZXNzaW9uSWQ6IG5vb3BGdW5jLAogICAgICBzZXRWcGFpZEFsbG93ZWQ6IG5vb3BGdW5jLAogICAgICBzZXRWcGFpZE1vZGU6IG5vb3BGdW5jLAogICAgICBDb21wYW5pb25CYWNrZmlsbE1vZGU6IHsKICAgICAgICBBTFdBWVM6ICdhbHdheXMnLAogICAgICAgIE9OX01BU1RFUl9BRDogJ29uX21hc3Rlcl9hZCcKICAgICAgfSwKICAgICAgVnBhaWRNb2RlOiB7CiAgICAgICAgRElTQUJMRUQ6IDAsCiAgICAgICAgRU5BQkxFRDogMSwKICAgICAgICBJTlNFQ1VSRTogMgogICAgICB9CiAgICB9OwogICAgdmFyIG1hbmFnZXJMb2FkZWQgPSBmYWxzZTsKCiAgICB2YXIgRXZlbnRIYW5kbGVyID0gZnVuY3Rpb24gRXZlbnRIYW5kbGVyKCkge307CgogICAgRXZlbnRIYW5kbGVyLnByb3RvdHlwZSA9IHsKICAgICAgbGlzdGVuZXJzOiBuZXcgTWFwKCksCiAgICAgIF9kaXNwYXRjaDogZnVuY3Rpb24gX2Rpc3BhdGNoKGUpIHsKICAgICAgICB2YXIgbGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnMuZ2V0KGUudHlwZSkgfHwgW107CgogICAgICAgIGZvciAodmFyIF9pID0gMCwgX0FycmF5JGZyb20gPSBBcnJheS5mcm9tKGxpc3RlbmVycyk7IF9pIDwgX0FycmF5JGZyb20ubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICB2YXIgbGlzdGVuZXIgPSBfQXJyYXkkZnJvbVtfaV07CgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbGlzdGVuZXIoZSk7CiAgICAgICAgICB9IGNhdGNoIChyKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3Iocik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBhZGRFdmVudExpc3RlbmVyOiBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKHQsIGMpIHsKICAgICAgICBpZiAoIXRoaXMubGlzdGVuZXJzLmhhcyh0KSkgewogICAgICAgICAgdGhpcy5saXN0ZW5lcnMuc2V0KHQsIG5ldyBTZXQoKSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLmxpc3RlbmVycy5nZXQodCkuYWRkKGMpOwogICAgICB9LAogICAgICByZW1vdmVFdmVudExpc3RlbmVyOiBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKHQsIGMpIHsKICAgICAgICB2YXIgX3RoaXMkbGlzdGVuZXJzJGdldDsKCiAgICAgICAgKF90aGlzJGxpc3RlbmVycyRnZXQgPSB0aGlzLmxpc3RlbmVycy5nZXQodCkpID09PSBudWxsIHx8IF90aGlzJGxpc3RlbmVycyRnZXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGxpc3RlbmVycyRnZXQuZGVsZXRlKGMpOwogICAgICB9CiAgICB9OwogICAgdmFyIEFkc01hbmFnZXIgPSBFdmVudEhhbmRsZXI7CiAgICBBZHNNYW5hZ2VyLnByb3RvdHlwZS52b2x1bWUgPSAxOwogICAgQWRzTWFuYWdlci5wcm90b3R5cGUuY29sbGFwc2UgPSBub29wRnVuYzsKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmNvbmZpZ3VyZUFkc01hbmFnZXIgPSBub29wRnVuYzsKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmRlc3Ryb3kgPSBub29wRnVuYzsKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmRpc2NhcmRBZEJyZWFrID0gbm9vcEZ1bmM7CiAgICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5leHBhbmQgPSBub29wRnVuYzsKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmZvY3VzID0gbm9vcEZ1bmM7CgogICAgQWRzTWFuYWdlci5wcm90b3R5cGUuZ2V0QWRTa2lwcGFibGVTdGF0ZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfTsKCiAgICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5nZXRDdWVQb2ludHMgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbMF07CiAgICB9OwoKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmdldEN1cnJlbnRBZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGN1cnJlbnRBZDsKICAgIH07CgogICAgQWRzTWFuYWdlci5wcm90b3R5cGUuZ2V0Q3VycmVudEFkQ3VlUG9pbnRzID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW107CiAgICB9OwoKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmdldFJlbWFpbmluZ1RpbWUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAwOwogICAgfTsKCiAgICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5nZXRWb2x1bWUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfdGhpcy52b2x1bWU7CiAgICB9OwoKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmluaXQgPSBub29wRnVuYzsKCiAgICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5pc0N1c3RvbUNsaWNrVHJhY2tpbmdVc2VkID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9OwoKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLmlzQ3VzdG9tUGxheWJhY2tVc2VkID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9OwoKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLnBhdXNlID0gbm9vcEZ1bmM7CiAgICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5yZXF1ZXN0TmV4dEFkQnJlYWsgPSBub29wRnVuYzsKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLnJlc2l6ZSA9IG5vb3BGdW5jOwogICAgQWRzTWFuYWdlci5wcm90b3R5cGUucmVzdW1lID0gbm9vcEZ1bmM7CgogICAgQWRzTWFuYWdlci5wcm90b3R5cGUuc2V0Vm9sdW1lID0gZnVuY3Rpb24gKHYpIHsKICAgICAgX3RoaXMudm9sdW1lID0gdjsKICAgIH07CgogICAgQWRzTWFuYWdlci5wcm90b3R5cGUuc2tpcCA9IG5vb3BGdW5jOwoKICAgIEFkc01hbmFnZXIucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkgewogICAgICBmb3IgKHZhciBfaTIgPSAwLCBfYXJyID0gW0FkRXZlbnQuVHlwZS5MT0FERUQsIEFkRXZlbnQuVHlwZS5TVEFSVEVELCBBZEV2ZW50LlR5cGUuQURfQlVGRkVSSU5HLCBBZEV2ZW50LlR5cGUuRklSU1RfUVVBUlRJTEUsIEFkRXZlbnQuVHlwZS5NSURQT0lOVCwgQWRFdmVudC5UeXBlLlRISVJEX1FVQVJUSUxFLCBBZEV2ZW50LlR5cGUuQ09NUExFVEUsIEFkRXZlbnQuVHlwZS5BTExfQURTX0NPTVBMRVRFRF07IF9pMiA8IF9hcnIubGVuZ3RoOyBfaTIrKykgewogICAgICAgIHZhciB0eXBlID0gX2FycltfaTJdOwoKICAgICAgICB0cnkgewogICAgICAgICAgX3RoaXMuX2Rpc3BhdGNoKG5ldyBpbWEuQWRFdmVudCh0eXBlKSk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgICAgICB9CiAgICAgIH0KICAgIH07CgogICAgQWRzTWFuYWdlci5wcm90b3R5cGUuc3RvcCA9IG5vb3BGdW5jOwogICAgQWRzTWFuYWdlci5wcm90b3R5cGUudXBkYXRlQWRzUmVuZGVyaW5nU2V0dGluZ3MgPSBub29wRnVuYzsKICAgIHZhciBtYW5hZ2VyID0gT2JqZWN0LmNyZWF0ZShBZHNNYW5hZ2VyKTsKCiAgICB2YXIgQWRzTWFuYWdlckxvYWRlZEV2ZW50ID0gZnVuY3Rpb24gQWRzTWFuYWdlckxvYWRlZEV2ZW50KCkge307CgogICAgQWRzTWFuYWdlckxvYWRlZEV2ZW50LnByb3RvdHlwZSA9IHsKICAgICAgY29uc3RydWN0b3I6IGZ1bmN0aW9uIGNvbnN0cnVjdG9yKHR5cGUpIHsKICAgICAgICBfdGhpcy50eXBlID0gdHlwZTsKICAgICAgfSwKICAgICAgZ2V0QWRzTWFuYWdlcjogZnVuY3Rpb24gZ2V0QWRzTWFuYWdlcigpIHsKICAgICAgICByZXR1cm4gbWFuYWdlcjsKICAgICAgfSwKICAgICAgZ2V0VXNlclJlcXVlc3RDb250ZXh0OiBub29wRnVuYwogICAgfTsKICAgIEFkc01hbmFnZXJMb2FkZWRFdmVudC5UeXBlID0gewogICAgICBBRFNfTUFOQUdFUl9MT0FERUQ6ICdhZHNNYW5hZ2VyTG9hZGVkJwogICAgfTsKICAgIHZhciBBZHNMb2FkZXIgPSBFdmVudEhhbmRsZXI7CiAgICBBZHNMb2FkZXIucHJvdG90eXBlLnNldHRpbmdzID0gbmV3IEltYVNka1NldHRpbmdzKCk7CiAgICBBZHNMb2FkZXIucHJvdG90eXBlLmNvbnRlbnRDb21wbGV0ZSA9IG5vb3BGdW5jOwogICAgQWRzTG9hZGVyLnByb3RvdHlwZS5kZXN0cm95ID0gbm9vcEZ1bmM7CgogICAgQWRzTG9hZGVyLnByb3RvdHlwZS5nZXRTZXR0aW5ncyA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2V0dGluZ3M7CiAgICB9OwoKICAgIEFkc0xvYWRlci5wcm90b3R5cGUuZ2V0VmVyc2lvbiA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFZFUlNJT047CiAgICB9OwoKICAgIEFkc0xvYWRlci5wcm90b3R5cGUucmVxdWVzdEFkcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAoIW1hbmFnZXJMb2FkZWQpIHsKICAgICAgICBtYW5hZ2VyTG9hZGVkID0gdHJ1ZTsKICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIEFEU19NQU5BR0VSX0xPQURFRCA9IEFkc01hbmFnZXJMb2FkZWRFdmVudC5UeXBlLkFEU19NQU5BR0VSX0xPQURFRDsKCiAgICAgICAgICBfdGhpczIuX2Rpc3BhdGNoKG5ldyBpbWEuQWRzTWFuYWdlckxvYWRlZEV2ZW50KEFEU19NQU5BR0VSX0xPQURFRCkpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9OwoKICAgIHZhciBBZHNSZW5kZXJpbmdTZXR0aW5ncyA9IG5vb3BGdW5jOwoKICAgIHZhciBBZHNSZXF1ZXN0ID0gZnVuY3Rpb24gQWRzUmVxdWVzdCgpIHt9OwoKICAgIEFkc1JlcXVlc3QucHJvdG90eXBlID0gewogICAgICBzZXRBZFdpbGxBdXRvUGxheTogbm9vcEZ1bmMsCiAgICAgIHNldEFkV2lsbFBsYXlNdXRlZDogbm9vcEZ1bmMsCiAgICAgIHNldENvbnRpbnVvdXNQbGF5YmFjazogbm9vcEZ1bmMKICAgIH07CgogICAgdmFyIEFkUG9kSW5mbyA9IGZ1bmN0aW9uIEFkUG9kSW5mbygpIHt9OwoKICAgIEFkUG9kSW5mby5wcm90b3R5cGUgPSB7CiAgICAgIGdldEFkUG9zaXRpb246IGZ1bmN0aW9uIGdldEFkUG9zaXRpb24oKSB7CiAgICAgICAgcmV0dXJuIDE7CiAgICAgIH0sCiAgICAgIGdldElzQnVtcGVyOiBmdW5jdGlvbiBnZXRJc0J1bXBlcigpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0sCiAgICAgIGdldE1heER1cmF0aW9uOiBmdW5jdGlvbiBnZXRNYXhEdXJhdGlvbigpIHsKICAgICAgICByZXR1cm4gLTE7CiAgICAgIH0sCiAgICAgIGdldFBvZEluZGV4OiBmdW5jdGlvbiBnZXRQb2RJbmRleCgpIHsKICAgICAgICByZXR1cm4gMTsKICAgICAgfSwKICAgICAgZ2V0VGltZU9mZnNldDogZnVuY3Rpb24gZ2V0VGltZU9mZnNldCgpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfSwKICAgICAgZ2V0VG90YWxBZHM6IGZ1bmN0aW9uIGdldFRvdGFsQWRzKCkgewogICAgICAgIHJldHVybiAxOwogICAgICB9CiAgICB9OwoKICAgIHZhciBBZCA9IGZ1bmN0aW9uIEFkKCkge307CgogICAgQWQucHJvdG90eXBlID0gewogICAgICBwaTogbmV3IEFkUG9kSW5mbygpLAogICAgICBnZXRBZElkOiBmdW5jdGlvbiBnZXRBZElkKCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfSwKICAgICAgZ2V0QWRQb2RJbmZvOiBmdW5jdGlvbiBnZXRBZFBvZEluZm8oKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLnBpOwogICAgICB9LAogICAgICBnZXRBZFN5c3RlbTogZnVuY3Rpb24gZ2V0QWRTeXN0ZW0oKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9LAogICAgICBnZXRBZHZlcnRpc2VyTmFtZTogZnVuY3Rpb24gZ2V0QWR2ZXJ0aXNlck5hbWUoKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9LAogICAgICBnZXRBcGlGcmFtZXdvcms6IGZ1bmN0aW9uIGdldEFwaUZyYW1ld29yaygpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfSwKICAgICAgZ2V0Q29tcGFuaW9uQWRzOiBmdW5jdGlvbiBnZXRDb21wYW5pb25BZHMoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9LAogICAgICBnZXRDb250ZW50VHlwZTogZnVuY3Rpb24gZ2V0Q29udGVudFR5cGUoKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9LAogICAgICBnZXRDcmVhdGl2ZUFkSWQ6IGZ1bmN0aW9uIGdldENyZWF0aXZlQWRJZCgpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0sCiAgICAgIGdldERlYWxJZDogZnVuY3Rpb24gZ2V0RGVhbElkKCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfSwKICAgICAgZ2V0RGVzY3JpcHRpb246IGZ1bmN0aW9uIGdldERlc2NyaXB0aW9uKCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfSwKICAgICAgZ2V0RHVyYXRpb246IGZ1bmN0aW9uIGdldER1cmF0aW9uKCkgewogICAgICAgIHJldHVybiA4LjU7CiAgICAgIH0sCiAgICAgIGdldEhlaWdodDogZnVuY3Rpb24gZ2V0SGVpZ2h0KCkgewogICAgICAgIHJldHVybiAwOwogICAgICB9LAogICAgICBnZXRNZWRpYVVybDogZnVuY3Rpb24gZ2V0TWVkaWFVcmwoKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0sCiAgICAgIGdldE1pblN1Z2dlc3RlZER1cmF0aW9uOiBmdW5jdGlvbiBnZXRNaW5TdWdnZXN0ZWREdXJhdGlvbigpIHsKICAgICAgICByZXR1cm4gLTI7CiAgICAgIH0sCiAgICAgIGdldFNraXBUaW1lT2Zmc2V0OiBmdW5jdGlvbiBnZXRTa2lwVGltZU9mZnNldCgpIHsKICAgICAgICByZXR1cm4gLTE7CiAgICAgIH0sCiAgICAgIGdldFN1cnZleVVybDogZnVuY3Rpb24gZ2V0U3VydmV5VXJsKCkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9LAogICAgICBnZXRUaXRsZTogZnVuY3Rpb24gZ2V0VGl0bGUoKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9LAogICAgICBnZXRUcmFmZmlja2luZ1BhcmFtZXRlcnNTdHJpbmc6IGZ1bmN0aW9uIGdldFRyYWZmaWNraW5nUGFyYW1ldGVyc1N0cmluZygpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0sCiAgICAgIGdldFVpRWxlbWVudHM6IGZ1bmN0aW9uIGdldFVpRWxlbWVudHMoKSB7CiAgICAgICAgcmV0dXJuIFsnJ107CiAgICAgIH0sCiAgICAgIGdldFVuaXZlcnNhbEFkSWRSZWdpc3RyeTogZnVuY3Rpb24gZ2V0VW5pdmVyc2FsQWRJZFJlZ2lzdHJ5KCkgewogICAgICAgIHJldHVybiAndW5rbm93bic7CiAgICAgIH0sCiAgICAgIGdldFVuaXZlcnNhbEFkSWRzOiBmdW5jdGlvbiBnZXRVbml2ZXJzYWxBZElkcygpIHsKICAgICAgICByZXR1cm4gWycnXTsKICAgICAgfSwKICAgICAgZ2V0VW5pdmVyc2FsQWRJZFZhbHVlOiBmdW5jdGlvbiBnZXRVbml2ZXJzYWxBZElkVmFsdWUoKSB7CiAgICAgICAgcmV0dXJuICd1bmtub3duJzsKICAgICAgfSwKICAgICAgZ2V0VmFzdE1lZGlhQml0cmF0ZTogZnVuY3Rpb24gZ2V0VmFzdE1lZGlhQml0cmF0ZSgpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfSwKICAgICAgZ2V0VmFzdE1lZGlhSGVpZ2h0OiBmdW5jdGlvbiBnZXRWYXN0TWVkaWFIZWlnaHQoKSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0sCiAgICAgIGdldFZhc3RNZWRpYVdpZHRoOiBmdW5jdGlvbiBnZXRWYXN0TWVkaWFXaWR0aCgpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfSwKICAgICAgZ2V0V2lkdGg6IGZ1bmN0aW9uIGdldFdpZHRoKCkgewogICAgICAgIHJldHVybiAwOwogICAgICB9LAogICAgICBnZXRXcmFwcGVyQWRJZHM6IGZ1bmN0aW9uIGdldFdyYXBwZXJBZElkcygpIHsKICAgICAgICByZXR1cm4gWycnXTsKICAgICAgfSwKICAgICAgZ2V0V3JhcHBlckFkU3lzdGVtczogZnVuY3Rpb24gZ2V0V3JhcHBlckFkU3lzdGVtcygpIHsKICAgICAgICByZXR1cm4gWycnXTsKICAgICAgfSwKICAgICAgZ2V0V3JhcHBlckNyZWF0aXZlSWRzOiBmdW5jdGlvbiBnZXRXcmFwcGVyQ3JlYXRpdmVJZHMoKSB7CiAgICAgICAgcmV0dXJuIFsnJ107CiAgICAgIH0sCiAgICAgIGlzTGluZWFyOiBmdW5jdGlvbiBpc0xpbmVhcigpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfTsKCiAgICB2YXIgQ29tcGFuaW9uQWQgPSBmdW5jdGlvbiBDb21wYW5pb25BZCgpIHt9OwoKICAgIENvbXBhbmlvbkFkLnByb3RvdHlwZSA9IHsKICAgICAgZ2V0QWRTbG90SWQ6IGZ1bmN0aW9uIGdldEFkU2xvdElkKCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfSwKICAgICAgZ2V0Q29udGVudDogZnVuY3Rpb24gZ2V0Q29udGVudCgpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0sCiAgICAgIGdldENvbnRlbnRUeXBlOiBmdW5jdGlvbiBnZXRDb250ZW50VHlwZSgpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0sCiAgICAgIGdldEhlaWdodDogZnVuY3Rpb24gZ2V0SGVpZ2h0KCkgewogICAgICAgIHJldHVybiAxOwogICAgICB9LAogICAgICBnZXRXaWR0aDogZnVuY3Rpb24gZ2V0V2lkdGgoKSB7CiAgICAgICAgcmV0dXJuIDE7CiAgICAgIH0KICAgIH07CgogICAgdmFyIEFkRXJyb3IgPSBmdW5jdGlvbiBBZEVycm9yKCkge307CgogICAgQWRFcnJvci5wcm90b3R5cGUgPSB7CiAgICAgIGdldEVycm9yQ29kZTogZnVuY3Rpb24gZ2V0RXJyb3JDb2RlKCkgewogICAgICAgIHJldHVybiAwOwogICAgICB9LAogICAgICBnZXRJbm5lckVycm9yOiBub29wRnVuYywKICAgICAgZ2V0TWVzc2FnZTogZnVuY3Rpb24gZ2V0TWVzc2FnZSgpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0sCiAgICAgIGdldFR5cGU6IGZ1bmN0aW9uIGdldFR5cGUoKSB7CiAgICAgICAgcmV0dXJuIDE7CiAgICAgIH0sCiAgICAgIGdldFZhc3RFcnJvckNvZGU6IGZ1bmN0aW9uIGdldFZhc3RFcnJvckNvZGUoKSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0sCiAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbiB0b1N0cmluZygpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KICAgIH07CiAgICBBZEVycm9yLkVycm9yQ29kZSA9IHt9OwogICAgQWRFcnJvci5UeXBlID0ge307CgogICAgdmFyIGlzRW5nYWRnZXQgPSBmdW5jdGlvbiBpc0VuZ2FkZ2V0KCkgewogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pMyA9IDAsIF9PYmplY3QkdmFsdWVzID0gT2JqZWN0LnZhbHVlcyh3aW5kb3cudmlkaWJsZS5fZ2V0Q29udGV4dHMoKSk7IF9pMyA8IF9PYmplY3QkdmFsdWVzLmxlbmd0aDsgX2kzKyspIHsKICAgICAgICAgIHZhciBfY3R4JGdldFBsYXllciwgX2N0eCRnZXRQbGF5ZXIkZGl2OwoKICAgICAgICAgIHZhciBjdHggPSBfT2JqZWN0JHZhbHVlc1tfaTNdOwoKICAgICAgICAgIGlmICgoX2N0eCRnZXRQbGF5ZXIgPSBjdHguZ2V0UGxheWVyKCkpICE9PSBudWxsICYmIF9jdHgkZ2V0UGxheWVyICE9PSB2b2lkIDAgJiYgKF9jdHgkZ2V0UGxheWVyJGRpdiA9IF9jdHgkZ2V0UGxheWVyLmRpdikgIT09IG51bGwgJiYgX2N0eCRnZXRQbGF5ZXIkZGl2ICE9PSB2b2lkIDAgJiYgX2N0eCRnZXRQbGF5ZXIkZGl2LmlubmVySFRNTC5pbmNsdWRlcygnd3d3LmVuZ2FkZ2V0LmNvbScpKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZSkge30KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH07CgogICAgdmFyIGN1cnJlbnRBZCA9IGlzRW5nYWRnZXQoKSA/IHVuZGVmaW5lZCA6IG5ldyBBZCgpOwoKICAgIHZhciBBZEV2ZW50ID0gZnVuY3Rpb24gQWRFdmVudCgpIHt9OwoKICAgIEFkRXZlbnQucHJvdG90eXBlID0gewogICAgICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24gY29uc3RydWN0b3IodHlwZSkgewogICAgICAgIF90aGlzLnR5cGUgPSB0eXBlOwogICAgICB9LAogICAgICBnZXRBZDogZnVuY3Rpb24gZ2V0QWQoKSB7CiAgICAgICAgcmV0dXJuIGN1cnJlbnRBZDsKICAgICAgfSwKICAgICAgZ2V0QWREYXRhOiBmdW5jdGlvbiBnZXRBZERhdGEoKSB7fQogICAgfTsKICAgIEFkRXZlbnQuVHlwZSA9IHsKICAgICAgQURfQlJFQUtfUkVBRFk6ICdhZEJyZWFrUmVhZHknLAogICAgICBBRF9CVUZGRVJJTkc6ICdhZEJ1ZmZlcmluZycsCiAgICAgIEFEX0NBTl9QTEFZOiAnYWRDYW5QbGF5JywKICAgICAgQURfTUVUQURBVEE6ICdhZE1ldGFkYXRhJywKICAgICAgQURfUFJPR1JFU1M6ICdhZFByb2dyZXNzJywKICAgICAgQUxMX0FEU19DT01QTEVURUQ6ICdhbGxBZHNDb21wbGV0ZWQnLAogICAgICBDTElDSzogJ2NsaWNrJywKICAgICAgQ09NUExFVEU6ICdjb21wbGV0ZScsCiAgICAgIENPTlRFTlRfUEFVU0VfUkVRVUVTVEVEOiAnY29udGVudFBhdXNlUmVxdWVzdGVkJywKICAgICAgQ09OVEVOVF9SRVNVTUVfUkVRVUVTVEVEOiAnY29udGVudFJlc3VtZVJlcXVlc3RlZCcsCiAgICAgIERVUkFUSU9OX0NIQU5HRTogJ2R1cmF0aW9uQ2hhbmdlJywKICAgICAgRVhQQU5ERURfQ0hBTkdFRDogJ2V4cGFuZGVkQ2hhbmdlZCcsCiAgICAgIEZJUlNUX1FVQVJUSUxFOiAnZmlyc3RRdWFydGlsZScsCiAgICAgIElNUFJFU1NJT046ICdpbXByZXNzaW9uJywKICAgICAgSU5URVJBQ1RJT046ICdpbnRlcmFjdGlvbicsCiAgICAgIExJTkVBUl9DSEFOR0U6ICdsaW5lYXJDaGFuZ2UnLAogICAgICBMSU5FQVJfQ0hBTkdFRDogJ2xpbmVhckNoYW5nZWQnLAogICAgICBMT0FERUQ6ICdsb2FkZWQnLAogICAgICBMT0c6ICdsb2cnLAogICAgICBNSURQT0lOVDogJ21pZHBvaW50JywKICAgICAgUEFVU0VEOiAncGF1c2UnLAogICAgICBSRVNVTUVEOiAncmVzdW1lJywKICAgICAgU0tJUFBBQkxFX1NUQVRFX0NIQU5HRUQ6ICdza2lwcGFibGVTdGF0ZUNoYW5nZWQnLAogICAgICBTS0lQUEVEOiAnc2tpcCcsCiAgICAgIFNUQVJURUQ6ICdzdGFydCcsCiAgICAgIFRISVJEX1FVQVJUSUxFOiAndGhpcmRRdWFydGlsZScsCiAgICAgIFVTRVJfQ0xPU0U6ICd1c2VyQ2xvc2UnLAogICAgICBWSURFT19DTElDS0VEOiAndmlkZW9DbGlja2VkJywKICAgICAgVklERU9fSUNPTl9DTElDS0VEOiAndmlkZW9JY29uQ2xpY2tlZCcsCiAgICAgIFZJRVdBQkxFX0lNUFJFU1NJT046ICd2aWV3YWJsZV9pbXByZXNzaW9uJywKICAgICAgVk9MVU1FX0NIQU5HRUQ6ICd2b2x1bWVDaGFuZ2UnLAogICAgICBWT0xVTUVfTVVURUQ6ICdtdXRlJwogICAgfTsKCiAgICB2YXIgQWRFcnJvckV2ZW50ID0gZnVuY3Rpb24gQWRFcnJvckV2ZW50KCkge307CgogICAgQWRFcnJvckV2ZW50LnByb3RvdHlwZSA9IHsKICAgICAgZ2V0RXJyb3I6IG5vb3BGdW5jLAogICAgICBnZXRVc2VyUmVxdWVzdENvbnRleHQ6IGZ1bmN0aW9uIGdldFVzZXJSZXF1ZXN0Q29udGV4dCgpIHt9CiAgICB9OwogICAgQWRFcnJvckV2ZW50LlR5cGUgPSB7CiAgICAgIEFEX0VSUk9SOiAnYWRFcnJvcicKICAgIH07CgogICAgdmFyIEN1c3RvbUNvbnRlbnRMb2FkZWRFdmVudCA9IGZ1bmN0aW9uIEN1c3RvbUNvbnRlbnRMb2FkZWRFdmVudCgpIHt9OwoKICAgIEN1c3RvbUNvbnRlbnRMb2FkZWRFdmVudC5UeXBlID0gewogICAgICBDVVNUT01fQ09OVEVOVF9MT0FERUQ6ICdkZXByZWNhdGVkLWV2ZW50JwogICAgfTsKCiAgICB2YXIgQ29tcGFuaW9uQWRTZWxlY3Rpb25TZXR0aW5ncyA9IGZ1bmN0aW9uIENvbXBhbmlvbkFkU2VsZWN0aW9uU2V0dGluZ3MoKSB7fTsKCiAgICBDb21wYW5pb25BZFNlbGVjdGlvblNldHRpbmdzLkNyZWF0aXZlVHlwZSA9IHsKICAgICAgQUxMOiAnQWxsJywKICAgICAgRkxBU0g6ICdGbGFzaCcsCiAgICAgIElNQUdFOiAnSW1hZ2UnCiAgICB9OwogICAgQ29tcGFuaW9uQWRTZWxlY3Rpb25TZXR0aW5ncy5SZXNvdXJjZVR5cGUgPSB7CiAgICAgIEFMTDogJ0FsbCcsCiAgICAgIEhUTUw6ICdIdG1sJywKICAgICAgSUZSQU1FOiAnSUZyYW1lJywKICAgICAgU1RBVElDOiAnU3RhdGljJwogICAgfTsKICAgIENvbXBhbmlvbkFkU2VsZWN0aW9uU2V0dGluZ3MuU2l6ZUNyaXRlcmlhID0gewogICAgICBJR05PUkU6ICdJZ25vcmVTaXplJywKICAgICAgU0VMRUNUX0VYQUNUX01BVENIOiAnU2VsZWN0RXhhY3RNYXRjaCcsCiAgICAgIFNFTEVDVF9ORUFSX01BVENIOiAnU2VsZWN0TmVhck1hdGNoJwogICAgfTsKCiAgICB2YXIgQWRDdWVQb2ludHMgPSBmdW5jdGlvbiBBZEN1ZVBvaW50cygpIHt9OwoKICAgIEFkQ3VlUG9pbnRzLnByb3RvdHlwZS5nZXRDdWVQb2ludHMgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbXTsKICAgIH07CgogICAgdmFyIEFkUHJvZ3Jlc3NEYXRhID0gbm9vcEZ1bmM7CgogICAgdmFyIFVuaXZlcnNhbEFkSWRJbmZvID0gZnVuY3Rpb24gVW5pdmVyc2FsQWRJZEluZm8oKSB7fTsKCiAgICBBZEN1ZVBvaW50cy5wcm90b3R5cGUgPSB7CiAgICAgIGdldEFkSWRSZWdpc3RyeTogZnVuY3Rpb24gZ2V0QWRJZFJlZ2lzdHJ5KCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfSwKICAgICAgZ2V0QWRJc1ZhbHVlOiBmdW5jdGlvbiBnZXRBZElzVmFsdWUoKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CiAgICB9OwogICAgT2JqZWN0LmFzc2lnbihpbWEsIHsKICAgICAgQWRDdWVQb2ludHM6IEFkQ3VlUG9pbnRzLAogICAgICBBZERpc3BsYXlDb250YWluZXI6IEFkRGlzcGxheUNvbnRhaW5lciwKICAgICAgQWRFcnJvcjogQWRFcnJvciwKICAgICAgQWRFcnJvckV2ZW50OiBBZEVycm9yRXZlbnQsCiAgICAgIEFkRXZlbnQ6IEFkRXZlbnQsCiAgICAgIEFkUG9kSW5mbzogQWRQb2RJbmZvLAogICAgICBBZFByb2dyZXNzRGF0YTogQWRQcm9ncmVzc0RhdGEsCiAgICAgIEFkc0xvYWRlcjogQWRzTG9hZGVyLAogICAgICBBZHNNYW5hZ2VyOiBtYW5hZ2VyLAogICAgICBBZHNNYW5hZ2VyTG9hZGVkRXZlbnQ6IEFkc01hbmFnZXJMb2FkZWRFdmVudCwKICAgICAgQWRzUmVuZGVyaW5nU2V0dGluZ3M6IEFkc1JlbmRlcmluZ1NldHRpbmdzLAogICAgICBBZHNSZXF1ZXN0OiBBZHNSZXF1ZXN0LAogICAgICBDb21wYW5pb25BZDogQ29tcGFuaW9uQWQsCiAgICAgIENvbXBhbmlvbkFkU2VsZWN0aW9uU2V0dGluZ3M6IENvbXBhbmlvbkFkU2VsZWN0aW9uU2V0dGluZ3MsCiAgICAgIEN1c3RvbUNvbnRlbnRMb2FkZWRFdmVudDogQ3VzdG9tQ29udGVudExvYWRlZEV2ZW50LAogICAgICBncHRQcm94eUluc3RhbmNlOiB7fSwKICAgICAgSW1hU2RrU2V0dGluZ3M6IEltYVNka1NldHRpbmdzLAogICAgICBPbWlkQWNjZXNzTW9kZTogewogICAgICAgIERPTUFJTjogJ2RvbWFpbicsCiAgICAgICAgRlVMTDogJ2Z1bGwnLAogICAgICAgIExJTUlURUQ6ICdsaW1pdGVkJwogICAgICB9LAogICAgICBzZXR0aW5nczogbmV3IEltYVNka1NldHRpbmdzKCksCiAgICAgIFVpRWxlbWVudHM6IHsKICAgICAgICBBRF9BVFRSSUJVVElPTjogJ2FkQXR0cmlidXRpb24nLAogICAgICAgIENPVU5URE9XTjogJ2NvdW50ZG93bicKICAgICAgfSwKICAgICAgVW5pdmVyc2FsQWRJZEluZm86IFVuaXZlcnNhbEFkSWRJbmZvLAogICAgICBWRVJTSU9OOiBWRVJTSU9OLAogICAgICBWaWV3TW9kZTogewogICAgICAgIEZVTExTQ1JFRU46ICdmdWxsc2NyZWVuJywKICAgICAgICBOT1JNQUw6ICdub3JtYWwnCiAgICAgIH0KICAgIH0pOwoKICAgIGlmICghd2luZG93Lmdvb2dsZSkgewogICAgICB3aW5kb3cuZ29vZ2xlID0ge307CiAgICB9CgogICAgd2luZG93Lmdvb2dsZS5pbWEgPSBpbWE7CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBHb29nbGVJbWEzLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJnb29nbGUtaW1hMyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "googlesyndication-adsbygoogle",
        "aliases": [
            "ubo-googlesyndication_adsbygoogle.js",
            "googlesyndication_adsbygoogle.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZVN5bmRpY2F0aW9uQWRzQnlHb29nbGUoc291cmNlKSB7CiAgICB3aW5kb3cuYWRzYnlnb29nbGUgPSB7CiAgICAgIGxvYWRlZDogdHJ1ZSwKICAgICAgcHVzaDogZnVuY3Rpb24gcHVzaCgpIHsKICAgICAgICBpZiAodHlwZW9mIHRoaXMubGVuZ3RoID09PSAndW5kZWZpbmVkJykgewogICAgICAgICAgdGhpcy5sZW5ndGggPSAwOwogICAgICAgICAgdGhpcy5sZW5ndGggKz0gMTsKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgICB2YXIgYWRFbGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hZHNieWdvb2dsZScpOwogICAgdmFyIGNzcyA9ICdoZWlnaHQ6MXB4IWltcG9ydGFudDttYXgtaGVpZ2h0OjFweCFpbXBvcnRhbnQ7bWF4LXdpZHRoOjFweCFpbXBvcnRhbnQ7d2lkdGg6MXB4IWltcG9ydGFudDsnOwogICAgdmFyIHN0YXR1c0F0dHJOYW1lID0gJ2RhdGEtYWRzYnlnb29nbGUtc3RhdHVzJzsKICAgIHZhciBBU1dJRlRfSUZSQU1FX01BUktFUiA9ICdhc3dpZnRfJzsKICAgIHZhciBHT09HTEVfQURTX0lGUkFNRV9NQVJLRVIgPSAnZ29vZ2xlX2Fkc19pZnJhbWVfJzsKICAgIHZhciBleGVjdXRlZCA9IGZhbHNlOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWRFbGVtcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICB2YXIgYWRFbGVtQ2hpbGROb2RlcyA9IGFkRWxlbXNbaV0uY2hpbGROb2RlczsKICAgICAgdmFyIGNoaWxkTm9kZXNRdWFudGl0eSA9IGFkRWxlbUNoaWxkTm9kZXMubGVuZ3RoOwogICAgICB2YXIgYXJlSWZyYW1lc0RlZmluZWQgPSBmYWxzZTsKCiAgICAgIGlmIChjaGlsZE5vZGVzUXVhbnRpdHkgPiAwKSB7CiAgICAgICAgYXJlSWZyYW1lc0RlZmluZWQgPSBjaGlsZE5vZGVzUXVhbnRpdHkgPT09IDIgJiYgYWRFbGVtQ2hpbGROb2Rlc1swXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnaWZyYW1lJyAmJiBhZEVsZW1DaGlsZE5vZGVzWzBdLmlkLmluZGV4T2YoQVNXSUZUX0lGUkFNRV9NQVJLRVIpID4gLTEgJiYgYWRFbGVtQ2hpbGROb2Rlc1sxXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnaWZyYW1lJyAmJiBhZEVsZW1DaGlsZE5vZGVzWzFdLmlkLmluZGV4T2YoR09PR0xFX0FEU19JRlJBTUVfTUFSS0VSKSA+IC0xOwogICAgICB9CgogICAgICBpZiAoIWFyZUlmcmFtZXNEZWZpbmVkKSB7CiAgICAgICAgYWRFbGVtc1tpXS5zZXRBdHRyaWJ1dGUoc3RhdHVzQXR0ck5hbWUsICdkb25lJyk7CiAgICAgICAgdmFyIGFzd2lmdElmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpOwogICAgICAgIGFzd2lmdElmcmFtZS5pZCA9ICIiLmNvbmNhdChBU1dJRlRfSUZSQU1FX01BUktFUikuY29uY2F0KGkpOwogICAgICAgIGFzd2lmdElmcmFtZS5zdHlsZSA9IGNzczsKICAgICAgICBhZEVsZW1zW2ldLmFwcGVuZENoaWxkKGFzd2lmdElmcmFtZSk7CiAgICAgICAgdmFyIGlubmVyQXN3aWZ0SWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7CiAgICAgICAgYXN3aWZ0SWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbm5lckFzd2lmdElmcmFtZSk7CiAgICAgICAgdmFyIGdvb2dsZWFkc0lmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpOwogICAgICAgIGdvb2dsZWFkc0lmcmFtZS5pZCA9ICIiLmNvbmNhdChHT09HTEVfQURTX0lGUkFNRV9NQVJLRVIpLmNvbmNhdChpKTsKICAgICAgICBnb29nbGVhZHNJZnJhbWUuc3R5bGUgPSBjc3M7CiAgICAgICAgYWRFbGVtc1tpXS5hcHBlbmRDaGlsZChnb29nbGVhZHNJZnJhbWUpOwogICAgICAgIHZhciBpbm5lckdvb2dsZWFkc0lmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpOwogICAgICAgIGdvb2dsZWFkc0lmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5uZXJHb29nbGVhZHNJZnJhbWUpOwogICAgICAgIGV4ZWN1dGVkID0gdHJ1ZTsKICAgICAgfQogICAgfQoKICAgIGlmIChleGVjdXRlZCkgewogICAgICBoaXQoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgR29vZ2xlU3luZGljYXRpb25BZHNCeUdvb2dsZS5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiZ29vZ2xlc3luZGljYXRpb24tYWRzYnlnb29nbGUiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "googletagservices-gpt",
        "aliases": [
            "ubo-googletagservices_gpt.js",
            "googletagservices_gpt.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": ""
    },
    {
        "title": "matomo",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIE1hdG9tbyhzb3VyY2UpIHsKICAgIHZhciBUcmFja2VyID0gZnVuY3Rpb24gVHJhY2tlcigpIHt9OwoKICAgIFRyYWNrZXIucHJvdG90eXBlLnNldERvTm90VHJhY2sgPSBub29wRnVuYzsKICAgIFRyYWNrZXIucHJvdG90eXBlLnNldERvbWFpbnMgPSBub29wRnVuYzsKICAgIFRyYWNrZXIucHJvdG90eXBlLnNldEN1c3RvbURpbWVuc2lvbiA9IG5vb3BGdW5jOwogICAgVHJhY2tlci5wcm90b3R5cGUudHJhY2tQYWdlVmlldyA9IG5vb3BGdW5jOwoKICAgIHZhciBBc3luY1RyYWNrZXIgPSBmdW5jdGlvbiBBc3luY1RyYWNrZXIoKSB7fTsKCiAgICBBc3luY1RyYWNrZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gbm9vcEZ1bmM7CiAgICB2YXIgbWF0b21vV3JhcHBlciA9IHsKICAgICAgZ2V0VHJhY2tlcjogZnVuY3Rpb24gZ2V0VHJhY2tlcigpIHsKICAgICAgICByZXR1cm4gbmV3IFRyYWNrZXIoKTsKICAgICAgfSwKICAgICAgZ2V0QXN5bmNUcmFja2VyOiBmdW5jdGlvbiBnZXRBc3luY1RyYWNrZXIoKSB7CiAgICAgICAgcmV0dXJuIG5ldyBBc3luY1RyYWNrZXIoKTsKICAgICAgfQogICAgfTsKICAgIHdpbmRvdy5QaXdpayA9IG1hdG9tb1dyYXBwZXI7CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBNYXRvbW8uYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Im1hdG9tbyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "metrika-yandex-tag",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG1ldHJpa2FZYW5kZXhUYWcoc291cmNlKSB7CiAgICB2YXIgYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zID0gZnVuY3Rpb24gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zKGlkLCBwYXJhbSkgewogICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307CiAgICAgIHZhciBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2s7CiAgICAgIHZhciBjdHggPSBvcHRpb25zLmN0eDsKCiAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBjYWxsYmFjayA9IGN0eCAhPT0gdW5kZWZpbmVkID8gY2FsbGJhY2suYmluZChjdHgpIDogY2FsbGJhY2s7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKCiAgICB2YXIgYWRkRmlsZUV4dGVuc2lvbiA9IG5vb3BGdW5jOwogICAgdmFyIGV4dExpbmsgPSBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnM7CiAgICB2YXIgZmlsZSA9IGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9uczsKCiAgICB2YXIgZ2V0Q2xpZW50SUQgPSBmdW5jdGlvbiBnZXRDbGllbnRJRChpZCwgY2IpIHsKICAgICAgaWYgKCFjYikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgc2V0VGltZW91dChjYihudWxsKSk7CiAgICB9OwoKICAgIHZhciBoaXRGdW5jID0gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zOwogICAgdmFyIG5vdEJvdW5jZSA9IGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9uczsKICAgIHZhciBwYXJhbXMgPSBub29wRnVuYzsKCiAgICB2YXIgcmVhY2hHb2FsID0gZnVuY3Rpb24gcmVhY2hHb2FsKGlkLCB0YXJnZXQsIHBhcmFtcywgY2FsbGJhY2ssIGN0eCkgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMobnVsbCwgbnVsbCwgewogICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjaywKICAgICAgICBjdHg6IGN0eAogICAgICB9KTsKICAgIH07CgogICAgdmFyIHNldFVzZXJJRCA9IG5vb3BGdW5jOwogICAgdmFyIHVzZXJQYXJhbXMgPSBub29wRnVuYzsKICAgIHZhciBhcGkgPSB7CiAgICAgIGFkZEZpbGVFeHRlbnNpb246IGFkZEZpbGVFeHRlbnNpb24sCiAgICAgIGV4dExpbms6IGV4dExpbmssCiAgICAgIGZpbGU6IGZpbGUsCiAgICAgIGdldENsaWVudElEOiBnZXRDbGllbnRJRCwKICAgICAgaGl0OiBoaXRGdW5jLAogICAgICBub3RCb3VuY2U6IG5vdEJvdW5jZSwKICAgICAgcGFyYW1zOiBwYXJhbXMsCiAgICAgIHJlYWNoR29hbDogcmVhY2hHb2FsLAogICAgICBzZXRVc2VySUQ6IHNldFVzZXJJRCwKICAgICAgdXNlclBhcmFtczogdXNlclBhcmFtcwogICAgfTsKCiAgICBmdW5jdGlvbiB5bShpZCwgZnVuY05hbWUpIHsKICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDIgPyBfbGVuIC0gMiA6IDApLCBfa2V5ID0gMjsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgIGFyZ3NbX2tleSAtIDJdID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICByZXR1cm4gYXBpW2Z1bmNOYW1lXSAmJiBhcGlbZnVuY05hbWVdLmFwcGx5KGFwaSwgW2lkXS5jb25jYXQoYXJncykpOwogICAgfQoKICAgIHltLmEgPSBbXTsKCiAgICBmdW5jdGlvbiBpbml0KGlkKSB7CiAgICAgIHdpbmRvd1sieWFDb3VudGVyIi5jb25jYXQoaWQpXSA9IGFwaTsKICAgIH0KCiAgICBpZiAodHlwZW9mIHdpbmRvdy55bSA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgd2luZG93LnltID0geW07CiAgICB9IGVsc2UgaWYgKHdpbmRvdy55bSAmJiB3aW5kb3cueW0uYSkgewogICAgICB3aW5kb3cueW0uYS5mb3JFYWNoKGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICB2YXIgaWQgPSBwYXJhbXNbMF07CiAgICAgICAgaW5pdChpZCk7CiAgICAgIH0pOwogICAgICB3aW5kb3cueW0gPSB5bTsKICAgIH0KCiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBtZXRyaWthWWFuZGV4VGFnLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJtZXRyaWthLXlhbmRleC10YWciLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "metrika-yandex-watch",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG1ldHJpa2FZYW5kZXhXYXRjaChzb3VyY2UpIHsKICAgIHZhciBjYk5hbWUgPSAneWFuZGV4X21ldHJpa2FfY2FsbGJhY2tzJzsKCiAgICB2YXIgYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zID0gZnVuY3Rpb24gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zKCkgewogICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICAgIHZhciBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2s7CiAgICAgIHZhciBjdHggPSBvcHRpb25zLmN0eDsKCiAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBjYWxsYmFjayA9IGN0eCAhPT0gdW5kZWZpbmVkID8gY2FsbGJhY2suYmluZChjdHgpIDogY2FsbGJhY2s7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKCiAgICBmdW5jdGlvbiBNZXRyaWthKCkge30KCiAgICBNZXRyaWthLnByb3RvdHlwZS5hZGRGaWxlRXh0ZW5zaW9uID0gbm9vcEZ1bmM7CiAgICBNZXRyaWthLnByb3RvdHlwZS5nZXRDbGllbnRJRCA9IG5vb3BGdW5jOwogICAgTWV0cmlrYS5wcm90b3R5cGUuc2V0VXNlcklEID0gbm9vcEZ1bmM7CiAgICBNZXRyaWthLnByb3RvdHlwZS51c2VyUGFyYW1zID0gbm9vcEZ1bmM7CiAgICBNZXRyaWthLnByb3RvdHlwZS5wYXJhbXMgPSBub29wRnVuYzsKCiAgICBNZXRyaWthLnByb3RvdHlwZS5leHRMaW5rID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMob3B0aW9ucyk7CiAgICB9OwoKICAgIE1ldHJpa2EucHJvdG90eXBlLmZpbGUgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7CiAgICAgIGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9ucyhvcHRpb25zKTsKICAgIH07CgogICAgTWV0cmlrYS5wcm90b3R5cGUuaGl0ID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMob3B0aW9ucyk7CiAgICB9OwoKICAgIE1ldHJpa2EucHJvdG90eXBlLnJlYWNoR29hbCA9IGZ1bmN0aW9uICh0YXJnZXQsIHBhcmFtcywgY2IsIGN0eCkgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMoewogICAgICAgIGNhbGxiYWNrOiBjYiwKICAgICAgICBjdHg6IGN0eAogICAgICB9KTsKICAgIH07CgogICAgTWV0cmlrYS5wcm90b3R5cGUubm90Qm91bmNlID0gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zOwoKICAgIGlmICh3aW5kb3cuWWEpIHsKICAgICAgd2luZG93LllhLk1ldHJpa2EgPSBNZXRyaWthOwogICAgfSBlbHNlIHsKICAgICAgd2luZG93LllhID0gewogICAgICAgIE1ldHJpa2E6IE1ldHJpa2EKICAgICAgfTsKICAgIH0KCiAgICBpZiAod2luZG93W2NiTmFtZV0gJiYgQXJyYXkuaXNBcnJheSh3aW5kb3dbY2JOYW1lXSkpIHsKICAgICAgd2luZG93W2NiTmFtZV0uZm9yRWFjaChmdW5jdGlvbiAoZnVuYykgewogICAgICAgIGlmICh0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgZnVuYygpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge307CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbWV0cmlrYVlhbmRleFdhdGNoLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJtZXRyaWthLXlhbmRleC13YXRjaCIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "noeval",
        "aliases": [
            "noeval.js",
            "silent-noeval.js",
            "ubo-noeval.js",
            "ubo-silent-noeval.js",
            "ubo-noeval",
            "ubo-silent-noeval"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG5vZXZhbChzb3VyY2UpIHsKICAgIHdpbmRvdy5ldmFsID0gZnVuY3Rpb24gZXZhbFdyYXBwZXIocykgewogICAgICBoaXQoc291cmNlLCAiQWRHdWFyZCBoYXMgcHJldmVudGVkIGV2YWw6XG4iLmNvbmNhdChzKSk7CiAgICB9LmJpbmQoKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbm9ldmFsLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJub2V2YWwiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "prevent-bab",
        "aliases": [
            "nobab.js",
            "ubo-nobab.js",
            "bab-defuser.js",
            "ubo-bab-defuser.js",
            "ubo-nobab",
            "ubo-bab-defuser"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRCYWIoc291cmNlKSB7CiAgICB2YXIgbmF0aXZlU2V0VGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0OwogICAgdmFyIGJhYlJlZ2V4ID0gL1wuYmFiX2VsZW1lbnRpZC4kLzsKCiAgICB2YXIgdGltZW91dFdyYXBwZXIgPSBmdW5jdGlvbiB0aW1lb3V0V3JhcHBlcihjYWxsYmFjaykgewogICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnc3RyaW5nJyB8fCAhYmFiUmVnZXgudGVzdChjYWxsYmFjaykpIHsKICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBuYXRpdmVTZXRUaW1lb3V0LmFwcGx5KHdpbmRvdywgW2NhbGxiYWNrXS5jb25jYXQoYXJncykpOwogICAgICB9CgogICAgICBoaXQoc291cmNlKTsKICAgIH07CgogICAgd2luZG93LnNldFRpbWVvdXQgPSB0aW1lb3V0V3JhcHBlcjsKICAgIHZhciBzaWduYXR1cmVzID0gW1snYmxvY2thZGJsb2NrJ10sIFsnYmFiYXNibSddLCBbL2dldEl0ZW1cKCdiYWJuJ1wpL10sIFsnZ2V0RWxlbWVudEJ5SWQnLCAnU3RyaW5nLmZyb21DaGFyQ29kZScsICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OScsICdjaGFyQXQnLCAnRE9NQ29udGVudExvYWRlZCcsICdBZEJsb2NrJywgJ2FkZEV2ZW50TGlzdGVuZXInLCAnZG9TY3JvbGwnLCAnZnJvbUNoYXJDb2RlJywgJzw8MnxyPj40JywgJ3Nlc3Npb25TdG9yYWdlJywgJ2NsaWVudFdpZHRoJywgJ2xvY2FsU3RvcmFnZScsICdNYXRoJywgJ3JhbmRvbSddXTsKCiAgICB2YXIgY2hlY2sgPSBmdW5jdGlvbiBjaGVjayhzdHIpIHsKICAgICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNpZ25hdHVyZXMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB2YXIgdG9rZW5zID0gc2lnbmF0dXJlc1tpXTsKICAgICAgICB2YXIgbWF0Y2ggPSAwOwoKICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRva2Vucy5sZW5ndGg7IGogKz0gMSkgewogICAgICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2pdOwogICAgICAgICAgdmFyIGZvdW5kID0gdG9rZW4gaW5zdGFuY2VvZiBSZWdFeHAgPyB0b2tlbi50ZXN0KHN0cikgOiBzdHIuaW5kZXhPZih0b2tlbikgPiAtMTsKCiAgICAgICAgICBpZiAoZm91bmQpIHsKICAgICAgICAgICAgbWF0Y2ggKz0gMTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChtYXRjaCAvIHRva2Vucy5sZW5ndGggPj0gMC44KSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH07CgogICAgdmFyIG5hdGl2ZUV2YWwgPSB3aW5kb3cuZXZhbDsKCiAgICB2YXIgZXZhbFdyYXBwZXIgPSBmdW5jdGlvbiBldmFsV3JhcHBlcihzdHIpIHsKICAgICAgaWYgKCFjaGVjayhzdHIpKSB7CiAgICAgICAgcmV0dXJuIG5hdGl2ZUV2YWwoc3RyKTsKICAgICAgfQoKICAgICAgaGl0KHNvdXJjZSk7CiAgICAgIHZhciBib2R5RWwgPSBkb2N1bWVudC5ib2R5OwoKICAgICAgaWYgKGJvZHlFbCkgewogICAgICAgIGJvZHlFbC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgndmlzaWJpbGl0eScpOwogICAgICB9CgogICAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFiYXNibXNneCcpOwoKICAgICAgaWYgKGVsKSB7CiAgICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7CiAgICAgIH0KICAgIH07CgogICAgd2luZG93LmV2YWwgPSBldmFsV3JhcHBlci5iaW5kKHdpbmRvdyk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRCYWIuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InByZXZlbnQtYmFiIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "prevent-bab2",
        "aliases": [
            "nobab2.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRCYWIyKHNvdXJjZSkgewogICAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQ7CgogICAgaWYgKHNjcmlwdCA9PT0gbnVsbCkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdmFyIHVybCA9IHNjcmlwdC5zcmM7CgogICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgZG9tYWluc1N0ciA9IFsnYWRjbGl4eFxcLm5ldCcsICdhZG5ldGFzaWFcXC5jb20nLCAnYWR0cmFja2Vyc1xcLm5ldCcsICdiYW5uZXJ0cmFja1xcLm5ldCddLmpvaW4oJ3wnKTsKICAgIHZhciBtYXRjaFN0ciA9ICJeaHR0cHM/Oi8vW1xcdy1dK1xcLigiLmNvbmNhdChkb21haW5zU3RyLCAiKS8uIik7CiAgICB2YXIgZG9tYWluc1JlZ2V4ID0gbmV3IFJlZ0V4cChtYXRjaFN0cik7CgogICAgaWYgKGRvbWFpbnNSZWdleC50ZXN0KHVybCkgPT09IGZhbHNlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB3aW5kb3cubkg3ZVh6T3NHID0gODU4OwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRCYWIyLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJwcmV2ZW50LWJhYjIiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "prevent-fab-3.2.0",
        "aliases": [
            "nofab.js",
            "ubo-nofab.js",
            "fuckadblock.js-3.2.0",
            "ubo-fuckadblock.js-3.2.0",
            "ubo-nofab"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRGYWIoc291cmNlKSB7CiAgICBoaXQoc291cmNlKTsKCiAgICB2YXIgRmFiID0gZnVuY3Rpb24gRmFiKCkge307CgogICAgRmFiLnByb3RvdHlwZS5jaGVjayA9IG5vb3BGdW5jOwogICAgRmFiLnByb3RvdHlwZS5jbGVhckV2ZW50ID0gbm9vcEZ1bmM7CiAgICBGYWIucHJvdG90eXBlLmVtaXRFdmVudCA9IG5vb3BGdW5jOwoKICAgIEZhYi5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAoYSwgYikgewogICAgICBpZiAoIWEpIHsKICAgICAgICBiKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzOwogICAgfTsKCiAgICBGYWIucHJvdG90eXBlLm9uRGV0ZWN0ZWQgPSBub29wVGhpczsKCiAgICBGYWIucHJvdG90eXBlLm9uTm90RGV0ZWN0ZWQgPSBmdW5jdGlvbiAoYSkgewogICAgICBhKCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfTsKCiAgICBGYWIucHJvdG90eXBlLnNldE9wdGlvbiA9IG5vb3BGdW5jOwogICAgRmFiLnByb3RvdHlwZS5vcHRpb25zID0gewogICAgICBzZXQ6IG5vb3BGdW5jLAogICAgICBnZXQ6IG5vb3BGdW5jCiAgICB9OwogICAgdmFyIGZhYiA9IG5ldyBGYWIoKTsKICAgIHZhciBnZXRTZXRGYWIgPSB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBGYWI7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KCkge30KICAgIH07CiAgICB2YXIgZ2V0c2V0ZmFiID0gewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gZmFiOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldCgpIHt9CiAgICB9OwoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnRnVja0FkQmxvY2snKSkgewogICAgICB3aW5kb3cuRnVja0FkQmxvY2sgPSBGYWI7CiAgICB9IGVsc2UgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnRnVja0FkQmxvY2snLCBnZXRTZXRGYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnQmxvY2tBZEJsb2NrJykpIHsKICAgICAgd2luZG93LkJsb2NrQWRCbG9jayA9IEZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdCbG9ja0FkQmxvY2snLCBnZXRTZXRGYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnU25pZmZBZEJsb2NrJykpIHsKICAgICAgd2luZG93LlNuaWZmQWRCbG9jayA9IEZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdTbmlmZkFkQmxvY2snLCBnZXRTZXRGYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnZnVja0FkQmxvY2snKSkgewogICAgICB3aW5kb3cuZnVja0FkQmxvY2sgPSBmYWI7CiAgICB9IGVsc2UgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnZnVja0FkQmxvY2snLCBnZXRzZXRmYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnYmxvY2tBZEJsb2NrJykpIHsKICAgICAgd2luZG93LmJsb2NrQWRCbG9jayA9IGZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdibG9ja0FkQmxvY2snLCBnZXRzZXRmYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnc25pZmZBZEJsb2NrJykpIHsKICAgICAgd2luZG93LnNuaWZmQWRCbG9jayA9IGZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdzbmlmZkFkQmxvY2snLCBnZXRzZXRmYWIpOwogICAgfQogIH0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogICAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICB2YXIgbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9CgogICAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7CiAgICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgICB9CgogICAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgICAgaWYgKHRyYWNlKSB7CiAgICAgICAgdHJhY2UoKTsKICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogICAgfSBjYXRjaCAoZSkge30KCiAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBub29wRnVuYygpIHt9CmZ1bmN0aW9uIG5vb3BUaGlzKCkgewogICAgcmV0dXJuIHRoaXM7CiAgfTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBwcmV2ZW50RmFiLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJwcmV2ZW50LWZhYi0zLjIuMCIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "prevent-popads-net",
        "aliases": [
            "popads.net.js",
            "ubo-popads.net.js",
            "ubo-popads.net"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRQb3BhZHNOZXQoc291cmNlKSB7CiAgICB2YXIgcmlkID0gcmFuZG9tSWQoKTsKCiAgICB2YXIgdGhyb3dFcnJvciA9IGZ1bmN0aW9uIHRocm93RXJyb3IoKSB7CiAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihyaWQpOwogICAgfTsKCiAgICBkZWxldGUgd2luZG93LlBvcEFkczsKICAgIGRlbGV0ZSB3aW5kb3cucG9wbnM7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh3aW5kb3csIHsKICAgICAgUG9wQWRzOiB7CiAgICAgICAgc2V0OiB0aHJvd0Vycm9yCiAgICAgIH0sCiAgICAgIHBvcG5zOiB7CiAgICAgICAgc2V0OiB0aHJvd0Vycm9yCiAgICAgIH0KICAgIH0pOwogICAgd2luZG93Lm9uZXJyb3IgPSBjcmVhdGVPbkVycm9ySGFuZGxlcihyaWQpLmJpbmQoKTsKICAgIGhpdChzb3VyY2UpOwogIH0KZnVuY3Rpb24gY3JlYXRlT25FcnJvckhhbmRsZXIocmlkKSB7CiAgICB2YXIgbmF0aXZlT25FcnJvciA9IHdpbmRvdy5vbmVycm9yOwogICAgcmV0dXJuIGZ1bmN0aW9uIG9uRXJyb3IoZXJyb3IpIHsKICAgICAgaWYgKHR5cGVvZiBlcnJvciA9PT0gJ3N0cmluZycgJiYgZXJyb3IuaW5kZXhPZihyaWQpICE9PSAtMSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICBpZiAobmF0aXZlT25FcnJvciBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7CiAgICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gbmF0aXZlT25FcnJvci5hcHBseSh0aGlzLCBbZXJyb3JdLmNvbmNhdChhcmdzKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH07CiAgfQpmdW5jdGlvbiByYW5kb21JZCgpIHsKICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRQb3BhZHNOZXQuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InByZXZlbnQtcG9wYWRzLW5ldCIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "scorecardresearch-beacon",
        "aliases": [
            "ubo-scorecardresearch_beacon.js",
            "scorecardresearch_beacon.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIFNjb3JlQ2FyZFJlc2VhcmNoQmVhY29uKHNvdXJjZSkgewogICAgd2luZG93LkNPTVNDT1JFID0gewogICAgICBwdXJnZTogZnVuY3Rpb24gcHVyZ2UoKSB7CiAgICAgICAgd2luZG93Ll9jb21zY29yZSA9IFtdOwogICAgICB9LAogICAgICBiZWFjb246IGZ1bmN0aW9uIGJlYWNvbigpIHt9CiAgICB9OwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIFNjb3JlQ2FyZFJlc2VhcmNoQmVhY29uLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJzY29yZWNhcmRyZXNlYXJjaC1iZWFjb24iLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "set-popads-dummy",
        "aliases": [
            "popads-dummy.js",
            "ubo-popads-dummy.js",
            "ubo-popads-dummy"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHNldFBvcGFkc0R1bW15KHNvdXJjZSkgewogICAgZGVsZXRlIHdpbmRvdy5Qb3BBZHM7CiAgICBkZWxldGUgd2luZG93LnBvcG5zOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMod2luZG93LCB7CiAgICAgIFBvcEFkczogewogICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgICAgaGl0KHNvdXJjZSk7CiAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgfQogICAgICB9LAogICAgICBwb3BuczogewogICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgICAgaGl0KHNvdXJjZSk7CiAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgc2V0UG9wYWRzRHVtbXkuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InNldC1wb3BhZHMtZHVtbXkiLCJhcmdzIjpbXX0sIFtdKTs="
    }
]