[
    {
        "title": "1x1-transparent.gif",
        "aliases": [
            "1x1.gif",
            "1x1-transparent-gif"
        ],
        "isBlocking": false,
        "contentType": "image/gif;base64",
        "content": "R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw=="
    },
    {
        "title": "2x2-transparent.png",
        "aliases": [
            "2x2.png",
            "2x2-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAAAIAAAACCAYAAABytg0kAAAAC0lEQVQI12NgQAcAABIAAe+JVKQAAAAASUVORK5CYII="
    },
    {
        "title": "3x2-transparent.png",
        "aliases": [
            "3x2.png",
            "3x2-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAAAMAAAACCAYAAACddGYaAAAAC0lEQVQI12NgwAUAABoAASRETuUAAAAASUVORK5CYII="
    },
    {
        "title": "32x32-transparent.png",
        "aliases": [
            "32x32.png",
            "32x32-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGklEQVRYw+3BAQEAAACCIP+vbkhAAQAAAO8GECAAAZf3V9cAAAAASUVORK5CYII="
    },
    {
        "title": "noopframe",
        "aliases": [
            "noop.html",
            "blank-html"
        ],
        "isBlocking": false,
        "contentType": "text/html;base64",
        "content": "PCFET0NUWVBFIGh0bWw+CjxodG1sPgogICAgPGhlYWQ+PHRpdGxlPjwvdGl0bGU+PC9oZWFkPgogICAgPGJvZHk+PC9ib2R5Pgo8L2h0bWw+"
    },
    {
        "title": "noopcss",
        "aliases": [
            "blank-css"
        ],
        "isBlocking": false,
        "contentType": "text/css;base64",
        "content": ""
    },
    {
        "title": "noopjs",
        "aliases": [
            "noop.js",
            "blank-js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKCkge30pKCk="
    },
    {
        "title": "noopjson",
        "isBlocking": false,
        "contentType": "application/json;base64",
        "content": "e30="
    },
    {
        "title": "nooptext",
        "aliases": [
            "noop.txt",
            "blank-text"
        ],
        "isBlocking": false,
        "contentType": "text/plain;base64",
        "content": ""
    },
    {
        "title": "empty",
        "aliases": [
            "empty"
        ],
        "isBlocking": false,
        "contentType": "text/plain;base64",
        "content": ""
    },
    {
        "title": "noopvmap-1.0",
        "aliases": [
            "noop-vmap1.0.xml"
        ],
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PHZtYXA6Vk1BUCB4bWxuczp2bWFwPSJodHRwOi8vd3d3LmlhYi5uZXQvdmlkZW9zdWl0ZS92bWFwIiB2ZXJzaW9uPSIxLjAiPjwvdm1hcDpWTUFQPg=="
    },
    {
        "title": "noopvast-2.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iMi4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopvast-3.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iMy4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopvast-4.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iNC4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopmp3-0.1s",
        "aliases": [
            "noopmp3-0.1s",
            "blank-mp3"
        ],
        "isBlocking": false,
        "contentType": "audio/mp3;base64",
        "content": "SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU2LjQwLjEwMQAAAAAAAAAAAAAA//tUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAGAAADAABgYGBgYGBgYGBgYGBgYGBggICAgICAgICAgICAgICAgICgoKCgoKCgoKCgoKCgoKCgwMDAwMDAwMDAwMDAwMDAwMDg4ODg4ODg4ODg4ODg4ODg4P////////////////////8AAAAATGF2YzU2LjYwAAAAAAAAAAAAAAAAJAAAAAAAAAAAAwDNZKlY//sUZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZB4P8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZDwP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZFoP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZHgP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZJYP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV"
    },
    {
        "title": "noopmp4-1s",
        "aliases": [
            "noop-1s.mp4",
            "blank-mp4"
        ],
        "isBlocking": false,
        "contentType": "video/mp4;base64",
        "content": "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"
    },
    {
        "title": "click2load.html",
        "aliases": [
            "click2load.html",
            "ubo-click2load.html"
        ],
        "isBlocking": true,
        "contentType": "text/html;base64",
        "content": ""
    },
    {
        "title": "amazon-apstag",
        "aliases": [
            "ubo-amazon_apstag.js",
            "amazon_apstag.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEFtYXpvbkFwc3RhZyhzb3VyY2UpIHsKICAgIHZhciBhcHN0YWdXcmFwcGVyID0gewogICAgICBmZXRjaEJpZHM6IGZ1bmN0aW9uIGZldGNoQmlkcyhhLCBiKSB7CiAgICAgICAgaWYgKHR5cGVvZiBiID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICBiKFtdKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGluaXQ6IG5vb3BGdW5jLAogICAgICBzZXREaXNwbGF5Qmlkczogbm9vcEZ1bmMsCiAgICAgIHRhcmdldGluZ0tleXM6IG5vb3BGdW5jCiAgICB9OwogICAgd2luZG93LmFwc3RhZyA9IGFwc3RhZ1dyYXBwZXI7CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBBbWF6b25BcHN0YWcuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6ImFtYXpvbi1hcHN0YWciLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "ati-smarttag",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEFUSW50ZXJuZXRTbWFydFRhZyhzb3VyY2UpIHsKICAgIHZhciBzZXROb29wRnVuY1dyYXBwZXIgPSB7CiAgICAgIHNldDogbm9vcEZ1bmMKICAgIH07CiAgICB2YXIgc2VuZE5vb3BGdW5jV3JhcHBlciA9IHsKICAgICAgc2VuZDogbm9vcEZ1bmMKICAgIH07CiAgICB2YXIgZWNvbW1lcmNlV3JhcHBlciA9IHsKICAgICAgZGlzcGxheUNhcnQ6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyLAogICAgICAgIGNhcnQ6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgICB9LAogICAgICB1cGRhdGVDYXJ0OiB7CiAgICAgICAgY2FydDogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0sCiAgICAgIGRpc3BsYXlQcm9kdWN0OiB7CiAgICAgICAgcHJvZHVjdHM6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgICB9LAogICAgICBkaXNwbGF5UGFnZVByb2R1Y3Q6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0sCiAgICAgIGFkZFByb2R1Y3Q6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0sCiAgICAgIHJlbW92ZVByb2R1Y3Q6IHsKICAgICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyCiAgICAgIH0KICAgIH07CgogICAgdmFyIHRhZyA9IGZ1bmN0aW9uIHRhZygpIHt9OwoKICAgIHRhZy5wcm90b3R5cGUgPSB7CiAgICAgIHNldENvbmZpZzogbm9vcEZ1bmMsCiAgICAgIHNldFBhcmFtOiBub29wRnVuYywKICAgICAgZGlzcGF0Y2g6IG5vb3BGdW5jLAogICAgICBjdXN0b21WYXJzOiBzZXROb29wRnVuY1dyYXBwZXIsCiAgICAgIHB1Ymxpc2hlcjogc2V0Tm9vcEZ1bmNXcmFwcGVyLAogICAgICBvcmRlcjogc2V0Tm9vcEZ1bmNXcmFwcGVyLAogICAgICBjbGljazogc2VuZE5vb3BGdW5jV3JhcHBlciwKICAgICAgY2xpY2tMaXN0ZW5lcjogc2VuZE5vb3BGdW5jV3JhcHBlciwKICAgICAgaW50ZXJuYWxTZWFyY2g6IHsKICAgICAgICBzZXQ6IG5vb3BGdW5jLAogICAgICAgIHNlbmQ6IG5vb3BGdW5jCiAgICAgIH0sCiAgICAgIGVjb21tZXJjZTogZWNvbW1lcmNlV3JhcHBlciwKICAgICAgaWRlbnRpZmllZFZpc2l0b3I6IHsKICAgICAgICB1bnNldDogbm9vcEZ1bmMKICAgICAgfSwKICAgICAgcGFnZTogewogICAgICAgIHNldDogbm9vcEZ1bmMsCiAgICAgICAgc2VuZDogbm9vcEZ1bmMKICAgICAgfSwKICAgICAgc2VsZlByb21vdGlvbjogewogICAgICAgIGFkZDogbm9vcEZ1bmMsCiAgICAgICAgc2VuZDogbm9vcEZ1bmMKICAgICAgfSwKICAgICAgcHJpdmFjeTogewogICAgICAgIHNldFZpc2l0b3JNb2RlOiBub29wRnVuYywKICAgICAgICBnZXRWaXNpdG9yTW9kZTogbm9vcEZ1bmMsCiAgICAgICAgaGl0OiBub29wRnVuYwogICAgICB9LAogICAgICByaWNoTWVkaWE6IHsKICAgICAgICBhZGQ6IG5vb3BGdW5jLAogICAgICAgIHNlbmQ6IG5vb3BGdW5jLAogICAgICAgIHJlbW92ZTogbm9vcEZ1bmMsCiAgICAgICAgcmVtb3ZlQWxsOiBub29wRnVuYwogICAgICB9CiAgICB9OwogICAgdmFyIHNtYXJ0VGFnV3JhcHBlciA9IHsKICAgICAgVHJhY2tlcjogewogICAgICAgIFRhZzogZnVuY3Rpb24gVGFnKCkgewogICAgICAgICAgcmV0dXJuIG5ldyB0YWcoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgICB3aW5kb3cuQVRJbnRlcm5ldCA9IHNtYXJ0VGFnV3JhcHBlcjsKICAgIGhpdChzb3VyY2UpOwogIH0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogICAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICB2YXIgbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9CgogICAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7CiAgICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgICB9CgogICAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgICAgaWYgKHRyYWNlKSB7CiAgICAgICAgdHJhY2UoKTsKICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogICAgfSBjYXRjaCAoZSkge30KCiAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEFUSW50ZXJuZXRTbWFydFRhZy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiYXRpLXNtYXJ0dGFnIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "didomi-loader",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIERpZG9taUxvYWRlcihzb3VyY2UpIHsKICAgIGZ1bmN0aW9uIFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yU3Vic2NyaWJlKCkge30KCiAgICBVc2VyQ29uc2VudFN0YXR1c0ZvclZlbmRvclN1YnNjcmliZS5wcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gbmV3IFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yU3Vic2NyaWJlKCk7CiAgICB9OwoKICAgIFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yU3Vic2NyaWJlLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBub29wRnVuYzsKCiAgICBmdW5jdGlvbiBVc2VyQ29uc2VudFN0YXR1c0ZvclZlbmRvcigpIHt9CgogICAgVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3IucHJvdG90eXBlLmZpcnN0ID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gbmV3IFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yU3Vic2NyaWJlKCk7CiAgICB9OwoKICAgIFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yLnByb3RvdHlwZS5maWx0ZXIgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBuZXcgVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3JTdWJzY3JpYmUoKTsKICAgIH07CgogICAgVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3IucHJvdG90eXBlLnN1YnNjcmliZSA9IG5vb3BGdW5jOwogICAgdmFyIERpZG9taVdyYXBwZXIgPSB7CiAgICAgIGlzQ29uc2VudFJlcXVpcmVkOiBmYWxzZUZ1bmMsCiAgICAgIGdldFVzZXJDb25zZW50U3RhdHVzRm9yUHVycG9zZTogdHJ1ZUZ1bmMsCiAgICAgIGdldFVzZXJDb25zZW50U3RhdHVzOiB0cnVlRnVuYywKICAgICAgZ2V0VXNlclN0YXR1czogbm9vcEZ1bmMsCiAgICAgIGdldFJlcXVpcmVkUHVycG9zZXM6IG5vb3BBcnJheSwKICAgICAgZ2V0VXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3I6IHRydWVGdW5jLAogICAgICBQdXJwb3NlczogewogICAgICAgIENvb2tpZXM6ICdjb29raWVzJwogICAgICB9LAogICAgICBub3RpY2U6IHsKICAgICAgICBjb25maWd1cmU6IG5vb3BGdW5jLAogICAgICAgIGhpZGU6IG5vb3BGdW5jLAogICAgICAgIGlzVmlzaWJsZTogZmFsc2VGdW5jLAogICAgICAgIHNob3c6IG5vb3BGdW5jLAogICAgICAgIHNob3dEYXRhUHJvY2Vzc2luZzogdHJ1ZUZ1bmMKICAgICAgfSwKICAgICAgaXNVc2VyQ29uc2VudFN0YXR1c1BhcnRpYWw6IGZhbHNlRnVuYywKICAgICAgb246IGZ1bmN0aW9uIG9uKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBhY3Rpb25zOiB7fSwKICAgICAgICAgIGVtaXR0ZXI6IHt9LAogICAgICAgICAgc2VydmljZXM6IHt9LAogICAgICAgICAgc3RvcmU6IHt9CiAgICAgICAgfTsKICAgICAgfSwKICAgICAgc2hvdWxkQ29uc2VudEJlQ29sbGVjdGVkOiBmYWxzZUZ1bmMsCiAgICAgIGdldFVzZXJDb25zZW50U3RhdHVzRm9yQWxsOiBub29wRnVuYywKICAgICAgZ2V0T2JzZXJ2YWJsZU9uVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3I6IGZ1bmN0aW9uIGdldE9ic2VydmFibGVPblVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yKCkgewogICAgICAgIHJldHVybiBuZXcgVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3IoKTsKICAgICAgfQogICAgfTsKICAgIHdpbmRvdy5EaWRvbWkgPSBEaWRvbWlXcmFwcGVyOwogICAgdmFyIGRpZG9taVN0YXRlV3JhcHBlciA9IHsKICAgICAgZGlkb21pRXhwZXJpbWVudElkOiAnJywKICAgICAgZGlkb21pRXhwZXJpbWVudFVzZXJHcm91cDogJycsCiAgICAgIGRpZG9taUdEUFJBcHBsaWVzOiAxLAogICAgICBkaWRvbWlJQUJDb25zZW50OiAnJywKICAgICAgZGlkb21pUHVycG9zZXNDb25zZW50OiAnJywKICAgICAgZGlkb21pUHVycG9zZXNDb25zZW50RGVuaWVkOiAnJywKICAgICAgZGlkb21pUHVycG9zZXNDb25zZW50VW5rbm93bjogJycsCiAgICAgIGRpZG9taVZlbmRvcnNDb25zZW50OiAnJywKICAgICAgZGlkb21pVmVuZG9yc0NvbnNlbnREZW5pZWQ6ICcnLAogICAgICBkaWRvbWlWZW5kb3JzQ29uc2VudFVua25vd246ICcnLAogICAgICBkaWRvbWlWZW5kb3JzUmF3Q29uc2VudDogJycsCiAgICAgIGRpZG9taVZlbmRvcnNSYXdDb25zZW50RGVuaWVkOiAnJywKICAgICAgZGlkb21pVmVuZG9yc1Jhd0NvbnNlbnRVbmtub3duOiAnJwogICAgfTsKICAgIHdpbmRvdy5kaWRvbWlTdGF0ZSA9IGRpZG9taVN0YXRlV3JhcHBlcjsKICAgIHZhciB0Y0RhdGEgPSB7CiAgICAgIGV2ZW50U3RhdHVzOiAndGNsb2FkZWQnLAogICAgICBnZHByQXBwbGllczogZmFsc2UsCiAgICAgIGxpc3RlbmVySWQ6IG5vb3BGdW5jLAogICAgICB2ZW5kb3I6IHsKICAgICAgICBjb25zZW50czogW10KICAgICAgfSwKICAgICAgcHVycG9zZTogewogICAgICAgIGNvbnNlbnRzOiBbXQogICAgICB9CiAgICB9OwoKICAgIHZhciBfX3RjZmFwaVdyYXBwZXIgPSBmdW5jdGlvbiBfX3RjZmFwaVdyYXBwZXIoKSB7CiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgIH0KCiAgICAgIGZvciAodmFyIF9pID0gMCwgX2FyZ3MgPSBhcmdzOyBfaSA8IF9hcmdzLmxlbmd0aDsgX2krKykgewogICAgICAgIHZhciBhcmcgPSBfYXJnc1tfaV07CgogICAgICAgIGlmICh0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICBzZXRUaW1lb3V0KGFyZyh0Y0RhdGEsIHRydWUpKTsKICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7fQogICAgICAgIH0KICAgICAgfQogICAgfTsKCiAgICB3aW5kb3cuX190Y2ZhcGkgPSBfX3RjZmFwaVdyYXBwZXI7CiAgICB2YXIgZGlkb21pRXZlbnRMaXN0ZW5lcnNXcmFwcGVyID0gewogICAgICBzdHViOiB0cnVlLAogICAgICBwdXNoOiBub29wRnVuYwogICAgfTsKICAgIHdpbmRvdy5kaWRvbWlFdmVudExpc3RlbmVycyA9IGRpZG9taUV2ZW50TGlzdGVuZXJzV3JhcHBlcjsKICAgIHZhciBkaWRvbWlPblJlYWR5V3JhcHBlciA9IHsKICAgICAgc3R1YjogdHJ1ZSwKICAgICAgcHVzaDogZnVuY3Rpb24gcHVzaChhcmcpIHsKICAgICAgICBpZiAodHlwZW9mIGFyZyAhPT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICdjb21wbGV0ZScpIHsKICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBzZXRUaW1lb3V0KGFyZyh3aW5kb3cuRGlkb21pKSk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc2V0VGltZW91dChhcmcod2luZG93LkRpZG9taSkpOwogICAgICAgIH0KICAgICAgfQogICAgfTsKICAgIHdpbmRvdy5kaWRvbWlPblJlYWR5ID0gd2luZG93LmRpZG9taU9uUmVhZHkgfHwgZGlkb21pT25SZWFkeVdyYXBwZXI7CgogICAgaWYgKEFycmF5LmlzQXJyYXkod2luZG93LmRpZG9taU9uUmVhZHkpKSB7CiAgICAgIHdpbmRvdy5kaWRvbWlPblJlYWR5LmZvckVhY2goZnVuY3Rpb24gKGFyZykgewogICAgICAgIGlmICh0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICBzZXRUaW1lb3V0KGFyZyh3aW5kb3cuRGlkb21pKSk7CiAgICAgICAgICB9IGNhdGNoIChlKSB7fQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge30KZnVuY3Rpb24gbm9vcEFycmF5KCkgewogICAgcmV0dXJuIFtdOwogIH0KZnVuY3Rpb24gdHJ1ZUZ1bmMoKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9CmZ1bmN0aW9uIGZhbHNlRnVuYygpIHsKICAgIHJldHVybiBmYWxzZTsKICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIERpZG9taUxvYWRlci5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiZGlkb21pLWxvYWRlciIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "fingerprintjs2",
        "aliases": [
            "ubo-fingerprint2.js",
            "fingerprint2.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEZpbmdlcnByaW50anMyKHNvdXJjZSkgewogICAgdmFyIGJyb3dzZXJJZCA9ICcnOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgODsgaSArPSAxKSB7CiAgICAgIGJyb3dzZXJJZCArPSAoTWF0aC5yYW5kb20oKSAqIDB4MTAwMDAgKyAweDEwMDApLnRvU3RyaW5nKDE2KS5zbGljZSgtNCk7CiAgICB9CgogICAgdmFyIEZpbmdlcnByaW50MiA9IGZ1bmN0aW9uIEZpbmdlcnByaW50MigpIHt9OwoKICAgIEZpbmdlcnByaW50Mi5nZXQgPSBmdW5jdGlvbiAob3B0aW9ucywgY2FsbGJhY2spIHsKICAgICAgaWYgKCFjYWxsYmFjaykgewogICAgICAgIGNhbGxiYWNrID0gb3B0aW9uczsKICAgICAgfQoKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKGNhbGxiYWNrKSB7CiAgICAgICAgICBjYWxsYmFjayhicm93c2VySWQsIFtdKTsKICAgICAgICB9CiAgICAgIH0sIDEpOwogICAgfTsKCiAgICBGaW5nZXJwcmludDIucHJvdG90eXBlID0gewogICAgICBnZXQ6IEZpbmdlcnByaW50Mi5nZXQKICAgIH07CiAgICB3aW5kb3cuRmluZ2VycHJpbnQyID0gRmluZ2VycHJpbnQyOwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEZpbmdlcnByaW50anMyLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJmaW5nZXJwcmludGpzMiIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "fingerprintjs3",
        "aliases": [
            "ubo-fingerprint3.js",
            "fingerprint3.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEZpbmdlcnByaW50anMzKHNvdXJjZSkgewogICAgdmFyIHZpc2l0b3JJZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGlkID0gJyc7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDg7IGkgKz0gMSkgewogICAgICAgIGlkICs9IChNYXRoLnJhbmRvbSgpICogMHgxMDAwMCArIDB4MTAwMCkudG9TdHJpbmcoMTYpLnNsaWNlKC00KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGlkOwogICAgfSgpOwoKICAgIHZhciBGaW5nZXJwcmludEpTID0gZnVuY3Rpb24gRmluZ2VycHJpbnRKUygpIHt9OwoKICAgIEZpbmdlcnByaW50SlMucHJvdG90eXBlID0gewogICAgICBsb2FkOiBmdW5jdGlvbiBsb2FkKCkgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobmV3IEZpbmdlcnByaW50SlMoKSk7CiAgICAgIH0sCiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoewogICAgICAgICAgdmlzaXRvcklkOiB2aXNpdG9ySWQKICAgICAgICB9KTsKICAgICAgfSwKICAgICAgaGFzaENvbXBvbmVudHM6IG5vb3BTdHIKICAgIH07CiAgICB3aW5kb3cuRmluZ2VycHJpbnRKUyA9IG5ldyBGaW5nZXJwcmludEpTKCk7CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcFN0cigpIHsKICAgIHJldHVybiAnJzsKICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEZpbmdlcnByaW50anMzLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJmaW5nZXJwcmludGpzMyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "gemius",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdlbWl1cyhzb3VyY2UpIHsKICAgIHZhciBHZW1pdXNQbGF5ZXIgPSBmdW5jdGlvbiBHZW1pdXNQbGF5ZXIoKSB7fTsKCiAgICBHZW1pdXNQbGF5ZXIucHJvdG90eXBlID0gewogICAgICBzZXRWaWRlb09iamVjdDogbm9vcEZ1bmMsCiAgICAgIG5ld1Byb2dyYW06IG5vb3BGdW5jLAogICAgICBwcm9ncmFtRXZlbnQ6IG5vb3BGdW5jLAogICAgICBuZXdBZDogbm9vcEZ1bmMsCiAgICAgIGFkRXZlbnQ6IG5vb3BGdW5jCiAgICB9OwogICAgd2luZG93LkdlbWl1c1BsYXllciA9IEdlbWl1c1BsYXllcjsKICAgIGhpdChzb3VyY2UpOwogIH0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogICAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICB2YXIgbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9CgogICAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7CiAgICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgICB9CgogICAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgICAgaWYgKHRyYWNlKSB7CiAgICAgICAgdHJhY2UoKTsKICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogICAgfSBjYXRjaCAoZSkge30KCiAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEdlbWl1cy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiZ2VtaXVzIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "google-analytics-ga",
        "aliases": [
            "ubo-google-analytics_ga.js",
            "google-analytics_ga.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUFuYWx5dGljc0dhKHNvdXJjZSkgewogICAgZnVuY3Rpb24gR2FxKCkge30KCiAgICBHYXEucHJvdG90eXBlLk5hID0gbm9vcEZ1bmM7CiAgICBHYXEucHJvdG90eXBlLk8gPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuU2EgPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuVGEgPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuVmEgPSBub29wRnVuYzsKICAgIEdhcS5wcm90b3R5cGUuX2NyZWF0ZUFzeW5jVHJhY2tlciA9IG5vb3BGdW5jOwogICAgR2FxLnByb3RvdHlwZS5fZ2V0QXN5bmNUcmFja2VyID0gbm9vcEZ1bmM7CiAgICBHYXEucHJvdG90eXBlLl9nZXRQbHVnaW4gPSBub29wRnVuYzsKCiAgICBHYXEucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoZGF0YSkgewogICAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBkYXRhKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSA9PT0gZmFsc2UpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2YgZGF0YVswXSA9PT0gJ3N0cmluZycgJiYgLyhefFwuKV9saW5rJC8udGVzdChkYXRhWzBdKSAmJiB0eXBlb2YgZGF0YVsxXSA9PT0gJ3N0cmluZycpIHsKICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKGRhdGFbMV0pOwogICAgICB9CgogICAgICBpZiAoZGF0YVswXSA9PT0gJ19zZXQnICYmIGRhdGFbMV0gPT09ICdoaXRDYWxsYmFjaycgJiYgdHlwZW9mIGRhdGFbMl0gPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBkYXRhWzJdKCk7CiAgICAgIH0KICAgIH07CgogICAgdmFyIGdhcSA9IG5ldyBHYXEoKTsKICAgIHZhciBhc3luY1RyYWNrZXJzID0gd2luZG93Ll9nYXEgfHwgW107CgogICAgaWYgKEFycmF5LmlzQXJyYXkoYXN5bmNUcmFja2VycykpIHsKICAgICAgd2hpbGUgKGFzeW5jVHJhY2tlcnNbMF0pIHsKICAgICAgICBnYXEucHVzaChhc3luY1RyYWNrZXJzLnNoaWZ0KCkpOwogICAgICB9CiAgICB9CgogICAgd2luZG93Ll9nYXEgPSBnYXEucWYgPSBnYXE7CgogICAgZnVuY3Rpb24gR2F0KCkge30KCiAgICB2YXIgYXBpID0gWydfYWRkSWdub3JlZE9yZ2FuaWMnLCAnX2FkZElnbm9yZWRSZWYnLCAnX2FkZEl0ZW0nLCAnX2FkZE9yZ2FuaWMnLCAnX2FkZFRyYW5zJywgJ19jbGVhcklnbm9yZWRPcmdhbmljJywgJ19jbGVhcklnbm9yZWRSZWYnLCAnX2NsZWFyT3JnYW5pYycsICdfY29va2llUGF0aENvcHknLCAnX2RlbGV0ZUN1c3RvbVZhcicsICdfZ2V0TmFtZScsICdfc2V0QWNjb3VudCcsICdfZ2V0QWNjb3VudCcsICdfZ2V0Q2xpZW50SW5mbycsICdfZ2V0RGV0ZWN0Rmxhc2gnLCAnX2dldERldGVjdFRpdGxlJywgJ19nZXRMaW5rZXJVcmwnLCAnX2dldExvY2FsR2lmUGF0aCcsICdfZ2V0U2VydmljZU1vZGUnLCAnX2dldFZlcnNpb24nLCAnX2dldFZpc2l0b3JDdXN0b21WYXInLCAnX2luaXREYXRhJywgJ19saW5rJywgJ19saW5rQnlQb3N0JywgJ19zZXRBbGxvd0FuY2hvcicsICdfc2V0QWxsb3dIYXNoJywgJ19zZXRBbGxvd0xpbmtlcicsICdfc2V0Q2FtcENvbnRlbnRLZXknLCAnX3NldENhbXBNZWRpdW1LZXknLCAnX3NldENhbXBOYW1lS2V5JywgJ19zZXRDYW1wTk9LZXknLCAnX3NldENhbXBTb3VyY2VLZXknLCAnX3NldENhbXBUZXJtS2V5JywgJ19zZXRDYW1wYWlnbkNvb2tpZVRpbWVvdXQnLCAnX3NldENhbXBhaWduVHJhY2snLCAnX3NldENsaWVudEluZm8nLCAnX3NldENvb2tpZVBhdGgnLCAnX3NldENvb2tpZVBlcnNpc3RlbmNlJywgJ19zZXRDb29raWVUaW1lb3V0JywgJ19zZXRDdXN0b21WYXInLCAnX3NldERldGVjdEZsYXNoJywgJ19zZXREZXRlY3RUaXRsZScsICdfc2V0RG9tYWluTmFtZScsICdfc2V0TG9jYWxHaWZQYXRoJywgJ19zZXRMb2NhbFJlbW90ZVNlcnZlck1vZGUnLCAnX3NldExvY2FsU2VydmVyTW9kZScsICdfc2V0UmVmZXJyZXJPdmVycmlkZScsICdfc2V0UmVtb3RlU2VydmVyTW9kZScsICdfc2V0U2FtcGxlUmF0ZScsICdfc2V0U2Vzc2lvblRpbWVvdXQnLCAnX3NldFNpdGVTcGVlZFNhbXBsZVJhdGUnLCAnX3NldFNlc3Npb25Db29raWVUaW1lb3V0JywgJ19zZXRWYXInLCAnX3NldFZpc2l0b3JDb29raWVUaW1lb3V0JywgJ190cmFja0V2ZW50JywgJ190cmFja1BhZ2VMb2FkVGltZScsICdfdHJhY2tQYWdldmlldycsICdfdHJhY2tTb2NpYWwnLCAnX3RyYWNrVGltaW5nJywgJ190cmFja1RyYW5zJywgJ192aXNpdENvZGUnXTsKICAgIHZhciB0cmFja2VyID0gYXBpLnJlZHVjZShmdW5jdGlvbiAocmVzLCBmdW5jTmFtZSkgewogICAgICByZXNbZnVuY05hbWVdID0gbm9vcEZ1bmM7CiAgICAgIHJldHVybiByZXM7CiAgICB9LCB7fSk7CgogICAgdHJhY2tlci5fZ2V0TGlua2VyVXJsID0gZnVuY3Rpb24gKGEpIHsKICAgICAgcmV0dXJuIGE7CiAgICB9OwoKICAgIHRyYWNrZXIuX2xpbmsgPSBmdW5jdGlvbiAodXJsKSB7CiAgICAgIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdHJ5IHsKICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBpZiAoc291cmNlLnZlcmJvc2UpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgICAgfQogICAgfTsKCiAgICBHYXQucHJvdG90eXBlLl9hbm9ueW1pemVJUCA9IG5vb3BGdW5jOwogICAgR2F0LnByb3RvdHlwZS5fY3JlYXRlVHJhY2tlciA9IG5vb3BGdW5jOwogICAgR2F0LnByb3RvdHlwZS5fZm9yY2VTU0wgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuX2dldFBsdWdpbiA9IG5vb3BGdW5jOwoKICAgIEdhdC5wcm90b3R5cGUuX2dldFRyYWNrZXIgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0cmFja2VyOwogICAgfTsKCiAgICBHYXQucHJvdG90eXBlLl9nZXRUcmFja2VyQnlOYW1lID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdHJhY2tlcjsKICAgIH07CgogICAgR2F0LnByb3RvdHlwZS5fZ2V0VHJhY2tlcnMgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuYWEgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuYWIgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUuaGIgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUubGEgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUub2EgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUucGEgPSBub29wRnVuYzsKICAgIEdhdC5wcm90b3R5cGUudSA9IG5vb3BGdW5jOwogICAgdmFyIGdhdCA9IG5ldyBHYXQoKTsKICAgIHdpbmRvdy5fZ2F0ID0gZ2F0OwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge307CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgR29vZ2xlQW5hbHl0aWNzR2EuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Imdvb2dsZS1hbmFseXRpY3MtZ2EiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "google-analytics",
        "aliases": [
            "ubo-google-analytics_analytics.js",
            "google-analytics_analytics.js",
            "googletagmanager-gtm",
            "ubo-googletagmanager_gtm.js",
            "googletagmanager_gtm.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUFuYWx5dGljcyhzb3VyY2UpIHsKICAgIHZhciBUcmFja2VyID0gZnVuY3Rpb24gVHJhY2tlcigpIHt9OwoKICAgIHZhciBwcm90byA9IFRyYWNrZXIucHJvdG90eXBlOwogICAgcHJvdG8uZ2V0ID0gbm9vcEZ1bmM7CiAgICBwcm90by5zZXQgPSBub29wRnVuYzsKICAgIHByb3RvLnNlbmQgPSBub29wRnVuYzsKICAgIHZhciBnb29nbGVBbmFseXRpY3NOYW1lID0gd2luZG93Lkdvb2dsZUFuYWx5dGljc09iamVjdCB8fCAnZ2EnOwoKICAgIGZ1bmN0aW9uIGdhKGEpIHsKICAgICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7CgogICAgICBpZiAobGVuID09PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgbGFzdEFyZyA9IGFyZ3VtZW50c1tsZW4gLSAxXTsKICAgICAgdmFyIHJlcGxhY2VyOwoKICAgICAgaWYgKGxhc3RBcmcgaW5zdGFuY2VvZiBPYmplY3QgJiYgbGFzdEFyZyAhPT0gbnVsbCAmJiB0eXBlb2YgbGFzdEFyZy5oaXRDYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHJlcGxhY2VyID0gbGFzdEFyZy5oaXRDYWxsYmFjazsKICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbGFzdEFyZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHJlcGxhY2VyID0gZnVuY3Rpb24gcmVwbGFjZXIoKSB7CiAgICAgICAgICBsYXN0QXJnKGdhLmNyZWF0ZSgpKTsKICAgICAgICB9OwogICAgICB9CgogICAgICB0cnkgewogICAgICAgIHNldFRpbWVvdXQocmVwbGFjZXIsIDEpOwogICAgICB9IGNhdGNoIChleCkge30KICAgIH0KCiAgICBnYS5jcmVhdGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBuZXcgVHJhY2tlcigpOwogICAgfTsKCiAgICBnYS5nZXRCeU5hbWUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBuZXcgVHJhY2tlcigpOwogICAgfTsKCiAgICBnYS5nZXRBbGwgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbbmV3IFRyYWNrZXIoKV07CiAgICB9OwoKICAgIGdhLnJlbW92ZSA9IG5vb3BGdW5jOwogICAgZ2EubG9hZGVkID0gdHJ1ZTsKICAgIHdpbmRvd1tnb29nbGVBbmFseXRpY3NOYW1lXSA9IGdhOwogICAgdmFyIF93aW5kb3cgPSB3aW5kb3csCiAgICAgICAgZGF0YUxheWVyID0gX3dpbmRvdy5kYXRhTGF5ZXIsCiAgICAgICAgZ29vZ2xlX29wdGltaXplID0gX3dpbmRvdy5nb29nbGVfb3B0aW1pemU7CgogICAgaWYgKGRhdGFMYXllciBpbnN0YW5jZW9mIE9iamVjdCA9PT0gZmFsc2UpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChkYXRhTGF5ZXIuaGlkZSBpbnN0YW5jZW9mIE9iamVjdCAmJiB0eXBlb2YgZGF0YUxheWVyLmhpZGUuZW5kID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIGRhdGFMYXllci5oaWRlLmVuZCgpOwogICAgfQoKICAgIHZhciBoYW5kbGVDYWxsYmFjayA9IGZ1bmN0aW9uIGhhbmRsZUNhbGxiYWNrKGRhdGFPYmosIGZ1bmNOYW1lKSB7CiAgICAgIGlmIChkYXRhT2JqICYmIHR5cGVvZiBkYXRhT2JqW2Z1bmNOYW1lXSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHNldFRpbWVvdXQoZGF0YU9ialtmdW5jTmFtZV0pOwogICAgICB9CiAgICB9OwoKICAgIGlmICh0eXBlb2YgZGF0YUxheWVyLnB1c2ggPT09ICdmdW5jdGlvbicpIHsKICAgICAgZGF0YUxheWVyLnB1c2ggPSBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmIChkYXRhIGluc3RhbmNlb2YgT2JqZWN0KSB7CiAgICAgICAgICBoYW5kbGVDYWxsYmFjayhkYXRhLCAnZXZlbnRDYWxsYmFjaycpOwoKICAgICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7CiAgICAgICAgICAgIGhhbmRsZUNhbGxiYWNrKGRhdGFba2V5XSwgJ2V2ZW50X2NhbGxiYWNrJyk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKCFkYXRhLmhhc093blByb3BlcnR5KCdldmVudENhbGxiYWNrJykgJiYgIWRhdGEuaGFzT3duUHJvcGVydHkoJ2V2ZW50Q2FsbGJhY2snKSkgewogICAgICAgICAgICBbXS5wdXNoLmNhbGwod2luZG93LmRhdGFMYXllciwgZGF0YSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkgewogICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChhcmcpIHsKICAgICAgICAgICAgaGFuZGxlQ2FsbGJhY2soYXJnLCAnY2FsbGJhY2snKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG5vb3BGdW5jOwogICAgICB9OwogICAgfQoKICAgIGlmIChnb29nbGVfb3B0aW1pemUgaW5zdGFuY2VvZiBPYmplY3QgJiYgdHlwZW9mIGdvb2dsZV9vcHRpbWl6ZS5nZXQgPT09ICdmdW5jdGlvbicpIHsKICAgICAgdmFyIGdvb2dsZU9wdGltaXplV3JhcHBlciA9IHsKICAgICAgICBnZXQ6IG5vb3BGdW5jCiAgICAgIH07CiAgICAgIHdpbmRvdy5nb29nbGVfb3B0aW1pemUgPSBnb29nbGVPcHRpbWl6ZVdyYXBwZXI7CiAgICB9CgogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge30KZnVuY3Rpb24gbm9vcE51bGwoKSB7CiAgICByZXR1cm4gbnVsbDsKICB9CmZ1bmN0aW9uIG5vb3BBcnJheSgpIHsKICAgIHJldHVybiBbXTsKICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEdvb2dsZUFuYWx5dGljcy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiZ29vZ2xlLWFuYWx5dGljcyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "google-ima3",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": ""
    },
    {
        "title": "googlesyndication-adsbygoogle",
        "aliases": [
            "ubo-googlesyndication_adsbygoogle.js",
            "googlesyndication_adsbygoogle.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZVN5bmRpY2F0aW9uQWRzQnlHb29nbGUoc291cmNlKSB7CiAgICB3aW5kb3cuYWRzYnlnb29nbGUgPSB7CiAgICAgIGxvYWRlZDogdHJ1ZSwKICAgICAgcHVzaDogZnVuY3Rpb24gcHVzaChhcmcpIHsKICAgICAgICBpZiAodHlwZW9mIHRoaXMubGVuZ3RoID09PSAndW5kZWZpbmVkJykgewogICAgICAgICAgdGhpcy5sZW5ndGggPSAwOwogICAgICAgICAgdGhpcy5sZW5ndGggKz0gMTsKICAgICAgICB9CgogICAgICAgIGlmIChhcmcgIT09IG51bGwgJiYgYXJnIGluc3RhbmNlb2YgT2JqZWN0ICYmIGFyZy5jb25zdHJ1Y3Rvci5uYW1lID09PSAnT2JqZWN0JykgewogICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfT2JqZWN0JGtleXMgPSBPYmplY3Qua2V5cyhhcmcpOyBfaSA8IF9PYmplY3Qka2V5cy5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgICAgdmFyIGtleSA9IF9PYmplY3Qka2V5c1tfaV07CgogICAgICAgICAgICBpZiAodHlwZW9mIGFyZ1trZXldID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGFyZ1trZXldLmNhbGwoKTsKICAgICAgICAgICAgICB9IGNhdGNoIChfdW51c2VkKSB7fQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9OwogICAgdmFyIGFkRWxlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWRzYnlnb29nbGUnKTsKICAgIHZhciBjc3MgPSAnaGVpZ2h0OjFweCFpbXBvcnRhbnQ7bWF4LWhlaWdodDoxcHghaW1wb3J0YW50O21heC13aWR0aDoxcHghaW1wb3J0YW50O3dpZHRoOjFweCFpbXBvcnRhbnQ7JzsKICAgIHZhciBzdGF0dXNBdHRyTmFtZSA9ICdkYXRhLWFkc2J5Z29vZ2xlLXN0YXR1cyc7CiAgICB2YXIgQVNXSUZUX0lGUkFNRV9NQVJLRVIgPSAnYXN3aWZ0Xyc7CiAgICB2YXIgR09PR0xFX0FEU19JRlJBTUVfTUFSS0VSID0gJ2dvb2dsZV9hZHNfaWZyYW1lXyc7CiAgICB2YXIgZXhlY3V0ZWQgPSBmYWxzZTsKCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFkRWxlbXMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgdmFyIGFkRWxlbUNoaWxkTm9kZXMgPSBhZEVsZW1zW2ldLmNoaWxkTm9kZXM7CiAgICAgIHZhciBjaGlsZE5vZGVzUXVhbnRpdHkgPSBhZEVsZW1DaGlsZE5vZGVzLmxlbmd0aDsKICAgICAgdmFyIGFyZUlmcmFtZXNEZWZpbmVkID0gZmFsc2U7CgogICAgICBpZiAoY2hpbGROb2Rlc1F1YW50aXR5ID4gMCkgewogICAgICAgIGFyZUlmcmFtZXNEZWZpbmVkID0gY2hpbGROb2Rlc1F1YW50aXR5ID09PSAyICYmIGFkRWxlbUNoaWxkTm9kZXNbMF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lmcmFtZScgJiYgYWRFbGVtQ2hpbGROb2Rlc1swXS5pZC5pbmRleE9mKEFTV0lGVF9JRlJBTUVfTUFSS0VSKSA+IC0xICYmIGFkRWxlbUNoaWxkTm9kZXNbMV0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lmcmFtZScgJiYgYWRFbGVtQ2hpbGROb2Rlc1sxXS5pZC5pbmRleE9mKEdPT0dMRV9BRFNfSUZSQU1FX01BUktFUikgPiAtMTsKICAgICAgfQoKICAgICAgaWYgKCFhcmVJZnJhbWVzRGVmaW5lZCkgewogICAgICAgIGFkRWxlbXNbaV0uc2V0QXR0cmlidXRlKHN0YXR1c0F0dHJOYW1lLCAnZG9uZScpOwogICAgICAgIHZhciBhc3dpZnRJZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgICAgICBhc3dpZnRJZnJhbWUuaWQgPSAiIi5jb25jYXQoQVNXSUZUX0lGUkFNRV9NQVJLRVIpLmNvbmNhdChpKTsKICAgICAgICBhc3dpZnRJZnJhbWUuc3R5bGUgPSBjc3M7CiAgICAgICAgYWRFbGVtc1tpXS5hcHBlbmRDaGlsZChhc3dpZnRJZnJhbWUpOwogICAgICAgIHZhciBpbm5lckFzd2lmdElmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpOwogICAgICAgIGFzd2lmdElmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5uZXJBc3dpZnRJZnJhbWUpOwogICAgICAgIHZhciBnb29nbGVhZHNJZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgICAgICBnb29nbGVhZHNJZnJhbWUuaWQgPSAiIi5jb25jYXQoR09PR0xFX0FEU19JRlJBTUVfTUFSS0VSKS5jb25jYXQoaSk7CiAgICAgICAgZ29vZ2xlYWRzSWZyYW1lLnN0eWxlID0gY3NzOwogICAgICAgIGFkRWxlbXNbaV0uYXBwZW5kQ2hpbGQoZ29vZ2xlYWRzSWZyYW1lKTsKICAgICAgICB2YXIgaW5uZXJHb29nbGVhZHNJZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgICAgICBnb29nbGVhZHNJZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlubmVyR29vZ2xlYWRzSWZyYW1lKTsKICAgICAgICBleGVjdXRlZCA9IHRydWU7CiAgICAgIH0KICAgIH0KCiAgICBpZiAoZXhlY3V0ZWQpIHsKICAgICAgaGl0KHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEdvb2dsZVN5bmRpY2F0aW9uQWRzQnlHb29nbGUuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Imdvb2dsZXN5bmRpY2F0aW9uLWFkc2J5Z29vZ2xlIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "googletagservices-gpt",
        "aliases": [
            "ubo-googletagservices_gpt.js",
            "googletagservices_gpt.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": ""
    },
    {
        "title": "matomo",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIE1hdG9tbyhzb3VyY2UpIHsKICAgIHZhciBUcmFja2VyID0gZnVuY3Rpb24gVHJhY2tlcigpIHt9OwoKICAgIFRyYWNrZXIucHJvdG90eXBlLnNldERvTm90VHJhY2sgPSBub29wRnVuYzsKICAgIFRyYWNrZXIucHJvdG90eXBlLnNldERvbWFpbnMgPSBub29wRnVuYzsKICAgIFRyYWNrZXIucHJvdG90eXBlLnNldEN1c3RvbURpbWVuc2lvbiA9IG5vb3BGdW5jOwogICAgVHJhY2tlci5wcm90b3R5cGUudHJhY2tQYWdlVmlldyA9IG5vb3BGdW5jOwoKICAgIHZhciBBc3luY1RyYWNrZXIgPSBmdW5jdGlvbiBBc3luY1RyYWNrZXIoKSB7fTsKCiAgICBBc3luY1RyYWNrZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gbm9vcEZ1bmM7CiAgICB2YXIgbWF0b21vV3JhcHBlciA9IHsKICAgICAgZ2V0VHJhY2tlcjogZnVuY3Rpb24gZ2V0VHJhY2tlcigpIHsKICAgICAgICByZXR1cm4gbmV3IFRyYWNrZXIoKTsKICAgICAgfSwKICAgICAgZ2V0QXN5bmNUcmFja2VyOiBmdW5jdGlvbiBnZXRBc3luY1RyYWNrZXIoKSB7CiAgICAgICAgcmV0dXJuIG5ldyBBc3luY1RyYWNrZXIoKTsKICAgICAgfQogICAgfTsKICAgIHdpbmRvdy5QaXdpayA9IG1hdG9tb1dyYXBwZXI7CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBNYXRvbW8uYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Im1hdG9tbyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "metrika-yandex-tag",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG1ldHJpa2FZYW5kZXhUYWcoc291cmNlKSB7CiAgICB2YXIgYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zID0gZnVuY3Rpb24gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zKGlkLCBwYXJhbSkgewogICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307CiAgICAgIHZhciBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2s7CiAgICAgIHZhciBjdHggPSBvcHRpb25zLmN0eDsKCiAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBjYWxsYmFjayA9IGN0eCAhPT0gdW5kZWZpbmVkID8gY2FsbGJhY2suYmluZChjdHgpIDogY2FsbGJhY2s7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKCiAgICB2YXIgYWRkRmlsZUV4dGVuc2lvbiA9IG5vb3BGdW5jOwogICAgdmFyIGV4dExpbmsgPSBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnM7CiAgICB2YXIgZmlsZSA9IGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9uczsKCiAgICB2YXIgZ2V0Q2xpZW50SUQgPSBmdW5jdGlvbiBnZXRDbGllbnRJRChpZCwgY2IpIHsKICAgICAgaWYgKCFjYikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgc2V0VGltZW91dChjYihudWxsKSk7CiAgICB9OwoKICAgIHZhciBoaXRGdW5jID0gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zOwogICAgdmFyIG5vdEJvdW5jZSA9IGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9uczsKICAgIHZhciBwYXJhbXMgPSBub29wRnVuYzsKCiAgICB2YXIgcmVhY2hHb2FsID0gZnVuY3Rpb24gcmVhY2hHb2FsKGlkLCB0YXJnZXQsIHBhcmFtcywgY2FsbGJhY2ssIGN0eCkgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMobnVsbCwgbnVsbCwgewogICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjaywKICAgICAgICBjdHg6IGN0eAogICAgICB9KTsKICAgIH07CgogICAgdmFyIHNldFVzZXJJRCA9IG5vb3BGdW5jOwogICAgdmFyIHVzZXJQYXJhbXMgPSBub29wRnVuYzsKICAgIHZhciBkZXN0cnVjdCA9IG5vb3BGdW5jOwogICAgdmFyIGFwaSA9IHsKICAgICAgYWRkRmlsZUV4dGVuc2lvbjogYWRkRmlsZUV4dGVuc2lvbiwKICAgICAgZXh0TGluazogZXh0TGluaywKICAgICAgZmlsZTogZmlsZSwKICAgICAgZ2V0Q2xpZW50SUQ6IGdldENsaWVudElELAogICAgICBoaXQ6IGhpdEZ1bmMsCiAgICAgIG5vdEJvdW5jZTogbm90Qm91bmNlLAogICAgICBwYXJhbXM6IHBhcmFtcywKICAgICAgcmVhY2hHb2FsOiByZWFjaEdvYWwsCiAgICAgIHNldFVzZXJJRDogc2V0VXNlcklELAogICAgICB1c2VyUGFyYW1zOiB1c2VyUGFyYW1zLAogICAgICBkZXN0cnVjdDogZGVzdHJ1Y3QKICAgIH07CgogICAgZnVuY3Rpb24geW0oaWQsIGZ1bmNOYW1lKSB7CiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAyID8gX2xlbiAtIDIgOiAwKSwgX2tleSA9IDI7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICBhcmdzW19rZXkgLSAyXSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFwaVtmdW5jTmFtZV0gJiYgYXBpW2Z1bmNOYW1lXS5hcHBseShhcGksIFtpZF0uY29uY2F0KGFyZ3MpKTsKICAgIH0KCiAgICB5bS5hID0gW107CgogICAgZnVuY3Rpb24gaW5pdChpZCkgewogICAgICB3aW5kb3dbInlhQ291bnRlciIuY29uY2F0KGlkKV0gPSBhcGk7CiAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCJ5YWNvdW50ZXIiLmNvbmNhdChpZCwgImluaXRlZCIpKSk7CiAgICB9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cueW0gPT09ICd1bmRlZmluZWQnKSB7CiAgICAgIHdpbmRvdy55bSA9IHltOwogICAgfSBlbHNlIGlmICh3aW5kb3cueW0gJiYgd2luZG93LnltLmEpIHsKICAgICAgdmFyIGNvdW50ZXJzID0gd2luZG93LnltLmE7CiAgICAgIHdpbmRvdy55bSA9IHltOwogICAgICBjb3VudGVycy5mb3JFYWNoKGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICB2YXIgaWQgPSBwYXJhbXNbMF07CiAgICAgICAgaW5pdChpZCk7CiAgICAgIH0pOwogICAgfQoKICAgIGhpdChzb3VyY2UpOwogIH0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogICAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICB2YXIgbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9CgogICAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7CiAgICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgICB9CgogICAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgICAgaWYgKHRyYWNlKSB7CiAgICAgICAgdHJhY2UoKTsKICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogICAgfSBjYXRjaCAoZSkge30KCiAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIG1ldHJpa2FZYW5kZXhUYWcuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Im1ldHJpa2EteWFuZGV4LXRhZyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "metrika-yandex-watch",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG1ldHJpa2FZYW5kZXhXYXRjaChzb3VyY2UpIHsKICAgIHZhciBjYk5hbWUgPSAneWFuZGV4X21ldHJpa2FfY2FsbGJhY2tzJzsKCiAgICB2YXIgYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zID0gZnVuY3Rpb24gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zKCkgewogICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICAgIHZhciBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2s7CiAgICAgIHZhciBjdHggPSBvcHRpb25zLmN0eDsKCiAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBjYWxsYmFjayA9IGN0eCAhPT0gdW5kZWZpbmVkID8gY2FsbGJhY2suYmluZChjdHgpIDogY2FsbGJhY2s7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKCiAgICBmdW5jdGlvbiBNZXRyaWthKCkge30KCiAgICBNZXRyaWthLnByb3RvdHlwZS5hZGRGaWxlRXh0ZW5zaW9uID0gbm9vcEZ1bmM7CiAgICBNZXRyaWthLnByb3RvdHlwZS5nZXRDbGllbnRJRCA9IG5vb3BGdW5jOwogICAgTWV0cmlrYS5wcm90b3R5cGUuc2V0VXNlcklEID0gbm9vcEZ1bmM7CiAgICBNZXRyaWthLnByb3RvdHlwZS51c2VyUGFyYW1zID0gbm9vcEZ1bmM7CiAgICBNZXRyaWthLnByb3RvdHlwZS5wYXJhbXMgPSBub29wRnVuYzsKCiAgICBNZXRyaWthLnByb3RvdHlwZS5leHRMaW5rID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMob3B0aW9ucyk7CiAgICB9OwoKICAgIE1ldHJpa2EucHJvdG90eXBlLmZpbGUgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7CiAgICAgIGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9ucyhvcHRpb25zKTsKICAgIH07CgogICAgTWV0cmlrYS5wcm90b3R5cGUuaGl0ID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMob3B0aW9ucyk7CiAgICB9OwoKICAgIE1ldHJpa2EucHJvdG90eXBlLnJlYWNoR29hbCA9IGZ1bmN0aW9uICh0YXJnZXQsIHBhcmFtcywgY2IsIGN0eCkgewogICAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMoewogICAgICAgIGNhbGxiYWNrOiBjYiwKICAgICAgICBjdHg6IGN0eAogICAgICB9KTsKICAgIH07CgogICAgTWV0cmlrYS5wcm90b3R5cGUubm90Qm91bmNlID0gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zOwoKICAgIGlmICh3aW5kb3cuWWEpIHsKICAgICAgd2luZG93LllhLk1ldHJpa2EgPSBNZXRyaWthOwogICAgfSBlbHNlIHsKICAgICAgd2luZG93LllhID0gewogICAgICAgIE1ldHJpa2E6IE1ldHJpa2EKICAgICAgfTsKICAgIH0KCiAgICBpZiAod2luZG93W2NiTmFtZV0gJiYgQXJyYXkuaXNBcnJheSh3aW5kb3dbY2JOYW1lXSkpIHsKICAgICAgd2luZG93W2NiTmFtZV0uZm9yRWFjaChmdW5jdGlvbiAoZnVuYykgewogICAgICAgIGlmICh0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgZnVuYygpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge307CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbWV0cmlrYVlhbmRleFdhdGNoLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJtZXRyaWthLXlhbmRleC13YXRjaCIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "naver-wcslog",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIE5hdmVyV2NzbG9nKHNvdXJjZSkgewogICAgd2luZG93Lndjc19hZGQgPSB7fTsKICAgIHdpbmRvdy53Y3NfZG8gPSBub29wRnVuYzsKICAgIHdpbmRvdy53Y3MgPSB7CiAgICAgIGluZmxvdzogbm9vcEZ1bmMKICAgIH07CiAgICBoaXQoc291cmNlKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBOYXZlcldjc2xvZy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoibmF2ZXItd2NzbG9nIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "noeval",
        "aliases": [
            "noeval.js",
            "silent-noeval.js",
            "ubo-noeval.js",
            "ubo-silent-noeval.js",
            "ubo-noeval",
            "ubo-silent-noeval"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG5vZXZhbChzb3VyY2UpIHsKICAgIHdpbmRvdy5ldmFsID0gZnVuY3Rpb24gZXZhbFdyYXBwZXIocykgewogICAgICBoaXQoc291cmNlLCAiQWRHdWFyZCBoYXMgcHJldmVudGVkIGV2YWw6XG4iLmNvbmNhdChzKSk7CiAgICB9LmJpbmQoKTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbm9ldmFsLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJub2V2YWwiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "prebid-ads",
        "aliases": [
            "ubo-prebid-ads.js",
            "prebid-ads.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZWJpZEFkcyhzb3VyY2UpIHsKICAgIHdpbmRvdy5jYW5SdW5BZHMgPSB0cnVlOwogICAgd2luZG93LmlzQWRCbG9ja0FjdGl2ZSA9IGZhbHNlOwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZWJpZEFkcy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoicHJlYmlkLWFkcyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "prebid",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIFByZWJpZChzb3VyY2UpIHsKICAgIHZhciBwdXNoRnVuY3Rpb24gPSBmdW5jdGlvbiBwdXNoRnVuY3Rpb24oYXJnKSB7CiAgICAgIGlmICh0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGFyZy5jYWxsKCk7CiAgICAgICAgfSBjYXRjaCAoZXgpIHt9CiAgICAgIH0KICAgIH07CgogICAgdmFyIHBianNXcmFwcGVyID0gewogICAgICBhZGRBZFVuaXRzOiBmdW5jdGlvbiBhZGRBZFVuaXRzKCkge30sCiAgICAgIGFkU2VydmVyczogewogICAgICAgIGRmcDogewogICAgICAgICAgYnVpbGRWaWRlb1VybDogbm9vcFN0cgogICAgICAgIH0KICAgICAgfSwKICAgICAgYWRVbml0czogW10sCiAgICAgIGFsaWFzQmlkZGVyOiBmdW5jdGlvbiBhbGlhc0JpZGRlcigpIHt9LAogICAgICBjbWQ6IFtdLAogICAgICBlbmFibGVBbmFseXRpY3M6IGZ1bmN0aW9uIGVuYWJsZUFuYWx5dGljcygpIHt9LAogICAgICBnZXRIaWdoZXN0Q3BtQmlkczogbm9vcEFycmF5LAogICAgICBsaWJMb2FkZWQ6IHRydWUsCiAgICAgIHF1ZTogW10sCiAgICAgIHJlcXVlc3RCaWRzOiBmdW5jdGlvbiByZXF1ZXN0QmlkcyhhcmcpIHsKICAgICAgICBpZiAoYXJnIGluc3RhbmNlb2YgT2JqZWN0ICYmIGFyZy5iaWRzQmFja0hhbmRsZXIpIHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGFyZy5iaWRzQmFja0hhbmRsZXIuY2FsbCgpOwogICAgICAgICAgfSBjYXRjaCAoZXgpIHt9CiAgICAgICAgfQogICAgICB9LAogICAgICByZW1vdmVBZFVuaXQ6IGZ1bmN0aW9uIHJlbW92ZUFkVW5pdCgpIHt9LAogICAgICBzZXRCaWRkZXJDb25maWc6IGZ1bmN0aW9uIHNldEJpZGRlckNvbmZpZygpIHt9LAogICAgICBzZXRDb25maWc6IGZ1bmN0aW9uIHNldENvbmZpZygpIHt9LAogICAgICBzZXRUYXJnZXRpbmdGb3JHUFRBc3luYzogZnVuY3Rpb24gc2V0VGFyZ2V0aW5nRm9yR1BUQXN5bmMoKSB7fQogICAgfTsKICAgIHBianNXcmFwcGVyLmNtZC5wdXNoID0gcHVzaEZ1bmN0aW9uOwogICAgcGJqc1dyYXBwZXIucXVlLnB1c2ggPSBwdXNoRnVuY3Rpb247CiAgICB3aW5kb3cucGJqcyA9IHBianNXcmFwcGVyOwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge30KZnVuY3Rpb24gbm9vcFN0cigpIHsKICAgIHJldHVybiAnJzsKICB9CmZ1bmN0aW9uIG5vb3BBcnJheSgpIHsKICAgIHJldHVybiBbXTsKICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIFByZWJpZC5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoicHJlYmlkIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "prevent-bab",
        "aliases": [
            "nobab.js",
            "ubo-nobab.js",
            "bab-defuser.js",
            "ubo-bab-defuser.js",
            "ubo-nobab",
            "ubo-bab-defuser"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRCYWIoc291cmNlKSB7CiAgICB2YXIgbmF0aXZlU2V0VGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0OwogICAgdmFyIGJhYlJlZ2V4ID0gL1wuYmFiX2VsZW1lbnRpZC4kLzsKCiAgICB2YXIgdGltZW91dFdyYXBwZXIgPSBmdW5jdGlvbiB0aW1lb3V0V3JhcHBlcihjYWxsYmFjaykgewogICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnc3RyaW5nJyB8fCAhYmFiUmVnZXgudGVzdChjYWxsYmFjaykpIHsKICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBuYXRpdmVTZXRUaW1lb3V0LmFwcGx5KHdpbmRvdywgW2NhbGxiYWNrXS5jb25jYXQoYXJncykpOwogICAgICB9CgogICAgICBoaXQoc291cmNlKTsKICAgIH07CgogICAgd2luZG93LnNldFRpbWVvdXQgPSB0aW1lb3V0V3JhcHBlcjsKICAgIHZhciBzaWduYXR1cmVzID0gW1snYmxvY2thZGJsb2NrJ10sIFsnYmFiYXNibSddLCBbL2dldEl0ZW1cKCdiYWJuJ1wpL10sIFsnZ2V0RWxlbWVudEJ5SWQnLCAnU3RyaW5nLmZyb21DaGFyQ29kZScsICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OScsICdjaGFyQXQnLCAnRE9NQ29udGVudExvYWRlZCcsICdBZEJsb2NrJywgJ2FkZEV2ZW50TGlzdGVuZXInLCAnZG9TY3JvbGwnLCAnZnJvbUNoYXJDb2RlJywgJzw8MnxyPj40JywgJ3Nlc3Npb25TdG9yYWdlJywgJ2NsaWVudFdpZHRoJywgJ2xvY2FsU3RvcmFnZScsICdNYXRoJywgJ3JhbmRvbSddXTsKCiAgICB2YXIgY2hlY2sgPSBmdW5jdGlvbiBjaGVjayhzdHIpIHsKICAgICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNpZ25hdHVyZXMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB2YXIgdG9rZW5zID0gc2lnbmF0dXJlc1tpXTsKICAgICAgICB2YXIgbWF0Y2ggPSAwOwoKICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRva2Vucy5sZW5ndGg7IGogKz0gMSkgewogICAgICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2pdOwogICAgICAgICAgdmFyIGZvdW5kID0gdG9rZW4gaW5zdGFuY2VvZiBSZWdFeHAgPyB0b2tlbi50ZXN0KHN0cikgOiBzdHIuaW5kZXhPZih0b2tlbikgPiAtMTsKCiAgICAgICAgICBpZiAoZm91bmQpIHsKICAgICAgICAgICAgbWF0Y2ggKz0gMTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChtYXRjaCAvIHRva2Vucy5sZW5ndGggPj0gMC44KSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH07CgogICAgdmFyIG5hdGl2ZUV2YWwgPSB3aW5kb3cuZXZhbDsKCiAgICB2YXIgZXZhbFdyYXBwZXIgPSBmdW5jdGlvbiBldmFsV3JhcHBlcihzdHIpIHsKICAgICAgaWYgKCFjaGVjayhzdHIpKSB7CiAgICAgICAgcmV0dXJuIG5hdGl2ZUV2YWwoc3RyKTsKICAgICAgfQoKICAgICAgaGl0KHNvdXJjZSk7CiAgICAgIHZhciBib2R5RWwgPSBkb2N1bWVudC5ib2R5OwoKICAgICAgaWYgKGJvZHlFbCkgewogICAgICAgIGJvZHlFbC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgndmlzaWJpbGl0eScpOwogICAgICB9CgogICAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFiYXNibXNneCcpOwoKICAgICAgaWYgKGVsKSB7CiAgICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7CiAgICAgIH0KICAgIH07CgogICAgd2luZG93LmV2YWwgPSBldmFsV3JhcHBlci5iaW5kKHdpbmRvdyk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRCYWIuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InByZXZlbnQtYmFiIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "prevent-bab2",
        "aliases": [
            "nobab2.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRCYWIyKHNvdXJjZSkgewogICAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQ7CgogICAgaWYgKHNjcmlwdCA9PT0gbnVsbCkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdmFyIHVybCA9IHNjcmlwdC5zcmM7CgogICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgZG9tYWluc1N0ciA9IFsnYWRjbGl4eFxcLm5ldCcsICdhZG5ldGFzaWFcXC5jb20nLCAnYWR0cmFja2Vyc1xcLm5ldCcsICdiYW5uZXJ0cmFja1xcLm5ldCddLmpvaW4oJ3wnKTsKICAgIHZhciBtYXRjaFN0ciA9ICJeaHR0cHM/Oi8vW1xcdy1dK1xcLigiLmNvbmNhdChkb21haW5zU3RyLCAiKS8uIik7CiAgICB2YXIgZG9tYWluc1JlZ2V4ID0gbmV3IFJlZ0V4cChtYXRjaFN0cik7CgogICAgaWYgKGRvbWFpbnNSZWdleC50ZXN0KHVybCkgPT09IGZhbHNlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB3aW5kb3cubkg3ZVh6T3NHID0gODU4OwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRCYWIyLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJwcmV2ZW50LWJhYjIiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "prevent-fab-3.2.0",
        "aliases": [
            "nofab.js",
            "ubo-nofab.js",
            "fuckadblock.js-3.2.0",
            "ubo-fuckadblock.js-3.2.0",
            "ubo-nofab"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRGYWIoc291cmNlKSB7CiAgICBoaXQoc291cmNlKTsKCiAgICB2YXIgRmFiID0gZnVuY3Rpb24gRmFiKCkge307CgogICAgRmFiLnByb3RvdHlwZS5jaGVjayA9IG5vb3BGdW5jOwogICAgRmFiLnByb3RvdHlwZS5jbGVhckV2ZW50ID0gbm9vcEZ1bmM7CiAgICBGYWIucHJvdG90eXBlLmVtaXRFdmVudCA9IG5vb3BGdW5jOwoKICAgIEZhYi5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAoYSwgYikgewogICAgICBpZiAoIWEpIHsKICAgICAgICBiKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzOwogICAgfTsKCiAgICBGYWIucHJvdG90eXBlLm9uRGV0ZWN0ZWQgPSBub29wVGhpczsKCiAgICBGYWIucHJvdG90eXBlLm9uTm90RGV0ZWN0ZWQgPSBmdW5jdGlvbiAoYSkgewogICAgICBhKCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfTsKCiAgICBGYWIucHJvdG90eXBlLnNldE9wdGlvbiA9IG5vb3BGdW5jOwogICAgRmFiLnByb3RvdHlwZS5vcHRpb25zID0gewogICAgICBzZXQ6IG5vb3BGdW5jLAogICAgICBnZXQ6IG5vb3BGdW5jCiAgICB9OwogICAgdmFyIGZhYiA9IG5ldyBGYWIoKTsKICAgIHZhciBnZXRTZXRGYWIgPSB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBGYWI7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KCkge30KICAgIH07CiAgICB2YXIgZ2V0c2V0ZmFiID0gewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gZmFiOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldCgpIHt9CiAgICB9OwoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnRnVja0FkQmxvY2snKSkgewogICAgICB3aW5kb3cuRnVja0FkQmxvY2sgPSBGYWI7CiAgICB9IGVsc2UgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnRnVja0FkQmxvY2snLCBnZXRTZXRGYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnQmxvY2tBZEJsb2NrJykpIHsKICAgICAgd2luZG93LkJsb2NrQWRCbG9jayA9IEZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdCbG9ja0FkQmxvY2snLCBnZXRTZXRGYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnU25pZmZBZEJsb2NrJykpIHsKICAgICAgd2luZG93LlNuaWZmQWRCbG9jayA9IEZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdTbmlmZkFkQmxvY2snLCBnZXRTZXRGYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnZnVja0FkQmxvY2snKSkgewogICAgICB3aW5kb3cuZnVja0FkQmxvY2sgPSBmYWI7CiAgICB9IGVsc2UgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnZnVja0FkQmxvY2snLCBnZXRzZXRmYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnYmxvY2tBZEJsb2NrJykpIHsKICAgICAgd2luZG93LmJsb2NrQWRCbG9jayA9IGZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdibG9ja0FkQmxvY2snLCBnZXRzZXRmYWIpOwogICAgfQoKICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnc25pZmZBZEJsb2NrJykpIHsKICAgICAgd2luZG93LnNuaWZmQWRCbG9jayA9IGZhYjsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdzbmlmZkFkQmxvY2snLCBnZXRzZXRmYWIpOwogICAgfQogIH0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogICAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICB2YXIgbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgICB9CgogICAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7CiAgICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgICB9CgogICAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgICAgaWYgKHRyYWNlKSB7CiAgICAgICAgdHJhY2UoKTsKICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogICAgfSBjYXRjaCAoZSkge30KCiAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgICB9CiAgfQpmdW5jdGlvbiBub29wRnVuYygpIHt9CmZ1bmN0aW9uIG5vb3BUaGlzKCkgewogICAgcmV0dXJuIHRoaXM7CiAgfTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBwcmV2ZW50RmFiLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJwcmV2ZW50LWZhYi0zLjIuMCIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "prevent-popads-net",
        "aliases": [
            "popads.net.js",
            "ubo-popads.net.js",
            "ubo-popads.net"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRQb3BhZHNOZXQoc291cmNlKSB7CiAgICB2YXIgcmlkID0gcmFuZG9tSWQoKTsKCiAgICB2YXIgdGhyb3dFcnJvciA9IGZ1bmN0aW9uIHRocm93RXJyb3IoKSB7CiAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihyaWQpOwogICAgfTsKCiAgICBkZWxldGUgd2luZG93LlBvcEFkczsKICAgIGRlbGV0ZSB3aW5kb3cucG9wbnM7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh3aW5kb3csIHsKICAgICAgUG9wQWRzOiB7CiAgICAgICAgc2V0OiB0aHJvd0Vycm9yCiAgICAgIH0sCiAgICAgIHBvcG5zOiB7CiAgICAgICAgc2V0OiB0aHJvd0Vycm9yCiAgICAgIH0KICAgIH0pOwogICAgd2luZG93Lm9uZXJyb3IgPSBjcmVhdGVPbkVycm9ySGFuZGxlcihyaWQpLmJpbmQoKTsKICAgIGhpdChzb3VyY2UpOwogIH0KZnVuY3Rpb24gY3JlYXRlT25FcnJvckhhbmRsZXIocmlkKSB7CiAgICB2YXIgbmF0aXZlT25FcnJvciA9IHdpbmRvdy5vbmVycm9yOwogICAgcmV0dXJuIGZ1bmN0aW9uIG9uRXJyb3IoZXJyb3IpIHsKICAgICAgaWYgKHR5cGVvZiBlcnJvciA9PT0gJ3N0cmluZycgJiYgZXJyb3IuaW5kZXhPZihyaWQpICE9PSAtMSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICBpZiAobmF0aXZlT25FcnJvciBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7CiAgICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gbmF0aXZlT25FcnJvci5hcHBseSh0aGlzLCBbZXJyb3JdLmNvbmNhdChhcmdzKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH07CiAgfQpmdW5jdGlvbiByYW5kb21JZCgpIHsKICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRQb3BhZHNOZXQuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InByZXZlbnQtcG9wYWRzLW5ldCIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "scorecardresearch-beacon",
        "aliases": [
            "ubo-scorecardresearch_beacon.js",
            "scorecardresearch_beacon.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIFNjb3JlQ2FyZFJlc2VhcmNoQmVhY29uKHNvdXJjZSkgewogICAgd2luZG93LkNPTVNDT1JFID0gewogICAgICBwdXJnZTogZnVuY3Rpb24gcHVyZ2UoKSB7CiAgICAgICAgd2luZG93Ll9jb21zY29yZSA9IFtdOwogICAgICB9LAogICAgICBiZWFjb246IGZ1bmN0aW9uIGJlYWNvbigpIHt9CiAgICB9OwogICAgaGl0KHNvdXJjZSk7CiAgfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHZhciBsb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwogICAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsKICAgICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICAgIH0KCiAgICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBsb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgICBpZiAodHJhY2UpIHsKICAgICAgICB0cmFjZSgpOwogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgICB9IGNhdGNoIChlKSB7fQoKICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICAgIH0KICB9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIFNjb3JlQ2FyZFJlc2VhcmNoQmVhY29uLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJzY29yZWNhcmRyZXNlYXJjaC1iZWFjb24iLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "set-popads-dummy",
        "aliases": [
            "popads-dummy.js",
            "ubo-popads-dummy.js",
            "ubo-popads-dummy"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHNldFBvcGFkc0R1bW15KHNvdXJjZSkgewogICAgZGVsZXRlIHdpbmRvdy5Qb3BBZHM7CiAgICBkZWxldGUgd2luZG93LnBvcG5zOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMod2luZG93LCB7CiAgICAgIFBvcEFkczogewogICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgICAgaGl0KHNvdXJjZSk7CiAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgfQogICAgICB9LAogICAgICBwb3BuczogewogICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgICAgaGl0KHNvdXJjZSk7CiAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICAgIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdHJ5IHsKICAgICAgdmFyIGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CiAgICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsKICAgICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgICAgfQoKICAgICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOwogICAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgICAgfQoKICAgICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgICAgbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBsb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICAgIGlmICh0cmFjZSkgewogICAgICAgIHRyYWNlKCk7CiAgICAgIH0KCiAgICAgIGxvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogICAgfQogIH07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgc2V0UG9wYWRzRHVtbXkuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InNldC1wb3BhZHMtZHVtbXkiLCJhcmdzIjpbXX0sIFtdKTs="
    }
]