[
    {
        "title": "1x1-transparent.gif",
        "aliases": [
            "1x1.gif",
            "1x1-transparent-gif"
        ],
        "isBlocking": false,
        "contentType": "image/gif;base64",
        "content": "R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw=="
    },
    {
        "title": "2x2-transparent.png",
        "aliases": [
            "2x2.png",
            "2x2-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAAAIAAAACCAYAAABytg0kAAAAC0lEQVQI12NgQAcAABIAAe+JVKQAAAAASUVORK5CYII="
    },
    {
        "title": "3x2-transparent.png",
        "aliases": [
            "3x2.png",
            "3x2-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAAAMAAAACCAYAAACddGYaAAAAC0lEQVQI12NgwAUAABoAASRETuUAAAAASUVORK5CYII="
    },
    {
        "title": "32x32-transparent.png",
        "aliases": [
            "32x32.png",
            "32x32-transparent-png"
        ],
        "isBlocking": false,
        "contentType": "image/png;base64",
        "content": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGklEQVRYw+3BAQEAAACCIP+vbkhAAQAAAO8GECAAAZf3V9cAAAAASUVORK5CYII="
    },
    {
        "title": "noopframe",
        "aliases": [
            "noop.html",
            "blank-html"
        ],
        "isBlocking": false,
        "contentType": "text/html;base64",
        "content": "PCFET0NUWVBFIGh0bWw+CjxodG1sPgogICAgPGhlYWQ+PHRpdGxlPjwvdGl0bGU+PC9oZWFkPgogICAgPGJvZHk+PC9ib2R5Pgo8L2h0bWw+"
    },
    {
        "title": "noopcss",
        "aliases": [
            "blank-css"
        ],
        "isBlocking": false,
        "contentType": "text/css;base64",
        "content": ""
    },
    {
        "title": "noopjs",
        "aliases": [
            "noop.js",
            "blank-js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKCkge30pKCk="
    },
    {
        "title": "noopjson",
        "isBlocking": false,
        "contentType": "application/json;base64",
        "content": "e30="
    },
    {
        "title": "nooptext",
        "aliases": [
            "noop.txt",
            "blank-text"
        ],
        "isBlocking": false,
        "contentType": "text/plain;base64",
        "content": ""
    },
    {
        "title": "empty",
        "aliases": [
            "empty"
        ],
        "isBlocking": false,
        "contentType": "text/plain;base64",
        "content": ""
    },
    {
        "title": "noopvmap-1.0",
        "aliases": [
            "noop-vmap1.0.xml"
        ],
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PHZtYXA6Vk1BUCB4bWxuczp2bWFwPSJodHRwOi8vd3d3LmlhYi5uZXQvdmlkZW9zdWl0ZS92bWFwIiB2ZXJzaW9uPSIxLjAiPjwvdm1hcDpWTUFQPg=="
    },
    {
        "title": "noopvast-2.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iMi4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopvast-3.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iMy4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopvast-4.0",
        "isBlocking": false,
        "contentType": "text/xml;base64",
        "content": "PFZBU1QgdmVyc2lvbj0iNC4wIj48L1ZBU1Q+"
    },
    {
        "title": "noopmp3-0.1s",
        "aliases": [
            "noopmp3-0.1s",
            "blank-mp3"
        ],
        "isBlocking": false,
        "contentType": "audio/mp3;base64",
        "content": "SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU2LjQwLjEwMQAAAAAAAAAAAAAA//tUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAGAAADAABgYGBgYGBgYGBgYGBgYGBggICAgICAgICAgICAgICAgICgoKCgoKCgoKCgoKCgoKCgwMDAwMDAwMDAwMDAwMDAwMDg4ODg4ODg4ODg4ODg4ODg4P////////////////////8AAAAATGF2YzU2LjYwAAAAAAAAAAAAAAAAJAAAAAAAAAAAAwDNZKlY//sUZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZB4P8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZDwP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZFoP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZHgP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sUZJYP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV"
    },
    {
        "title": "noopmp4-1s",
        "aliases": [
            "noop-1s.mp4",
            "blank-mp4"
        ],
        "isBlocking": false,
        "contentType": "video/mp4;base64",
        "content": "AAAAHGZ0eXBNNFYgAAACAGlzb21pc28yYXZjMQAAAAhmcmVlAAAGF21kYXTeBAAAbGliZmFhYyAxLjI4AABCAJMgBDIARwAAArEGBf//rdxF6b3m2Ui3lizYINkj7u94MjY0IC0gY29yZSAxNDIgcjIgOTU2YzhkOCAtIEguMjY0L01QRUctNCBBVkMgY29kZWMgLSBDb3B5bGVmdCAyMDAzLTIwMTQgLSBodHRwOi8vd3d3LnZpZGVvbGFuLm9yZy94MjY0Lmh0bWwgLSBvcHRpb25zOiBjYWJhYz0wIHJlZj0zIGRlYmxvY2s9MTowOjAgYW5hbHlzZT0weDE6MHgxMTEgbWU9aGV4IHN1Ym1lPTcgcHN5PTEgcHN5X3JkPTEuMDA6MC4wMCBtaXhlZF9yZWY9MSBtZV9yYW5nZT0xNiBjaHJvbWFfbWU9MSB0cmVsbGlzPTEgOHg4ZGN0PTAgY3FtPTAgZGVhZHpvbmU9MjEsMTEgZmFzdF9wc2tpcD0xIGNocm9tYV9xcF9vZmZzZXQ9LTIgdGhyZWFkcz02IGxvb2thaGVhZF90aHJlYWRzPTEgc2xpY2VkX3RocmVhZHM9MCBucj0wIGRlY2ltYXRlPTEgaW50ZXJsYWNlZD0wIGJsdXJheV9jb21wYXQ9MCBjb25zdHJhaW5lZF9pbnRyYT0wIGJmcmFtZXM9MCB3ZWlnaHRwPTAga2V5aW50PTI1MCBrZXlpbnRfbWluPTI1IHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCB2YnZfbWF4cmF0ZT03NjggdmJ2X2J1ZnNpemU9MzAwMCBjcmZfbWF4PTAuMCBuYWxfaHJkPW5vbmUgZmlsbGVyPTAgaXBfcmF0aW89MS40MCBhcT0xOjEuMDAAgAAAAFZliIQL8mKAAKvMnJycnJycnJycnXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXiEASZACGQAjgCEASZACGQAjgAAAAAdBmjgX4GSAIQBJkAIZACOAAAAAB0GaVAX4GSAhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZpgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGagC/AySEASZACGQAjgAAAAAZBmqAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZrAL8DJIQBJkAIZACOAAAAABkGa4C/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmwAvwMkhAEmQAhkAI4AAAAAGQZsgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGbQC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBm2AvwMkhAEmQAhkAI4AAAAAGQZuAL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGboC/AySEASZACGQAjgAAAAAZBm8AvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZvgL8DJIQBJkAIZACOAAAAABkGaAC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmiAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZpAL8DJIQBJkAIZACOAAAAABkGaYC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmoAvwMkhAEmQAhkAI4AAAAAGQZqgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGawC/AySEASZACGQAjgAAAAAZBmuAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZsAL8DJIQBJkAIZACOAAAAABkGbIC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBm0AvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZtgL8DJIQBJkAIZACOAAAAABkGbgCvAySEASZACGQAjgCEASZACGQAjgAAAAAZBm6AnwMkhAEmQAhkAI4AhAEmQAhkAI4AhAEmQAhkAI4AhAEmQAhkAI4AAAAhubW9vdgAAAGxtdmhkAAAAAAAAAAAAAAAAAAAD6AAABDcAAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAzB0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAABAAAAAAAAA+kAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAALAAAACQAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAPpAAAAAAABAAAAAAKobWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAB1MAAAdU5VxAAAAAAALWhkbHIAAAAAAAAAAHZpZGUAAAAAAAAAAAAAAABWaWRlb0hhbmRsZXIAAAACU21pbmYAAAAUdm1oZAAAAAEAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAhNzdGJsAAAAr3N0c2QAAAAAAAAAAQAAAJ9hdmMxAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAALAAkABIAAAASAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGP//AAAALWF2Y0MBQsAN/+EAFWdCwA3ZAsTsBEAAAPpAADqYA8UKkgEABWjLg8sgAAAAHHV1aWRraEDyXyRPxbo5pRvPAyPzAAAAAAAAABhzdHRzAAAAAAAAAAEAAAAeAAAD6QAAABRzdHNzAAAAAAAAAAEAAAABAAAAHHN0c2MAAAAAAAAAAQAAAAEAAAABAAAAAQAAAIxzdHN6AAAAAAAAAAAAAAAeAAADDwAAAAsAAAALAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAAiHN0Y28AAAAAAAAAHgAAAEYAAANnAAADewAAA5gAAAO0AAADxwAAA+MAAAP2AAAEEgAABCUAAARBAAAEXQAABHAAAASMAAAEnwAABLsAAATOAAAE6gAABQYAAAUZAAAFNQAABUgAAAVkAAAFdwAABZMAAAWmAAAFwgAABd4AAAXxAAAGDQAABGh0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAACAAAAAAAABDcAAAAAAAAAAAAAAAEBAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAQkAAADcAABAAAAAAPgbWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAC7gAAAykBVxAAAAAAALWhkbHIAAAAAAAAAAHNvdW4AAAAAAAAAAAAAAABTb3VuZEhhbmRsZXIAAAADi21pbmYAAAAQc21oZAAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAADT3N0YmwAAABnc3RzZAAAAAAAAAABAAAAV21wNGEAAAAAAAAAAQAAAAAAAAAAAAIAEAAAAAC7gAAAAAAAM2VzZHMAAAAAA4CAgCIAAgAEgICAFEAVBbjYAAu4AAAADcoFgICAAhGQBoCAgAECAAAAIHN0dHMAAAAAAAAAAgAAADIAAAQAAAAAAQAAAkAAAAFUc3RzYwAAAAAAAAAbAAAAAQAAAAEAAAABAAAAAgAAAAIAAAABAAAAAwAAAAEAAAABAAAABAAAAAIAAAABAAAABgAAAAEAAAABAAAABwAAAAIAAAABAAAACAAAAAEAAAABAAAACQAAAAIAAAABAAAACgAAAAEAAAABAAAACwAAAAIAAAABAAAADQAAAAEAAAABAAAADgAAAAIAAAABAAAADwAAAAEAAAABAAAAEAAAAAIAAAABAAAAEQAAAAEAAAABAAAAEgAAAAIAAAABAAAAFAAAAAEAAAABAAAAFQAAAAIAAAABAAAAFgAAAAEAAAABAAAAFwAAAAIAAAABAAAAGAAAAAEAAAABAAAAGQAAAAIAAAABAAAAGgAAAAEAAAABAAAAGwAAAAIAAAABAAAAHQAAAAEAAAABAAAAHgAAAAIAAAABAAAAHwAAAAQAAAABAAAA4HN0c3oAAAAAAAAAAAAAADMAAAAaAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAACMc3RjbwAAAAAAAAAfAAAALAAAA1UAAANyAAADhgAAA6IAAAO+AAAD0QAAA+0AAAQAAAAEHAAABC8AAARLAAAEZwAABHoAAASWAAAEqQAABMUAAATYAAAE9AAABRAAAAUjAAAFPwAABVIAAAVuAAAFgQAABZ0AAAWwAAAFzAAABegAAAX7AAAGFwAAAGJ1ZHRhAAAAWm1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAALWlsc3QAAAAlqXRvbwAAAB1kYXRhAAAAAQAAAABMYXZmNTUuMzMuMTAw"
    },
    {
        "title": "click2load.html",
        "aliases": [
            "click2load.html",
            "ubo-click2load.html"
        ],
        "isBlocking": true,
        "contentType": "text/html;base64",
        "content": ""
    },
    {
        "title": "amazon-apstag",
        "aliases": [
            "ubo-amazon_apstag.js",
            "amazon_apstag.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEFtYXpvbkFwc3RhZyhzb3VyY2UpIHsKICB2YXIgYXBzdGFnV3JhcHBlciA9IHsKICAgIGZldGNoQmlkczogZnVuY3Rpb24gZmV0Y2hCaWRzKGEsIGIpIHsKICAgICAgaWYgKHR5cGVvZiBiID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgYihbXSk7CiAgICAgIH0KICAgIH0sCiAgICBpbml0OiBub29wRnVuYywKICAgIHNldERpc3BsYXlCaWRzOiBub29wRnVuYywKICAgIHRhcmdldGluZ0tleXM6IG5vb3BGdW5jCiAgfTsKICB3aW5kb3cuYXBzdGFnID0gYXBzdGFnV3JhcHBlcjsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBBbWF6b25BcHN0YWcuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6ImFtYXpvbi1hcHN0YWciLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "ati-smarttag",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEFUSW50ZXJuZXRTbWFydFRhZyhzb3VyY2UpIHsKICB2YXIgc2V0Tm9vcEZ1bmNXcmFwcGVyID0gewogICAgc2V0OiBub29wRnVuYwogIH07CiAgdmFyIHNlbmROb29wRnVuY1dyYXBwZXIgPSB7CiAgICBzZW5kOiBub29wRnVuYwogIH07CiAgdmFyIGVjb21tZXJjZVdyYXBwZXIgPSB7CiAgICBkaXNwbGF5Q2FydDogewogICAgICBwcm9kdWN0czogc2V0Tm9vcEZ1bmNXcmFwcGVyLAogICAgICBjYXJ0OiBzZXROb29wRnVuY1dyYXBwZXIKICAgIH0sCiAgICB1cGRhdGVDYXJ0OiB7CiAgICAgIGNhcnQ6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgfSwKICAgIGRpc3BsYXlQcm9kdWN0OiB7CiAgICAgIHByb2R1Y3RzOiBzZXROb29wRnVuY1dyYXBwZXIKICAgIH0sCiAgICBkaXNwbGF5UGFnZVByb2R1Y3Q6IHsKICAgICAgcHJvZHVjdHM6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgfSwKICAgIGFkZFByb2R1Y3Q6IHsKICAgICAgcHJvZHVjdHM6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgfSwKICAgIHJlbW92ZVByb2R1Y3Q6IHsKICAgICAgcHJvZHVjdHM6IHNldE5vb3BGdW5jV3JhcHBlcgogICAgfQogIH07IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuZXctY2FwLCBmdW5jLW5hbWVzCgogIHZhciB0YWcgPSBmdW5jdGlvbiB0YWcoKSB7fTsKCiAgdGFnLnByb3RvdHlwZSA9IHsKICAgIHNldENvbmZpZzogbm9vcEZ1bmMsCiAgICBzZXRQYXJhbTogbm9vcEZ1bmMsCiAgICBkaXNwYXRjaDogbm9vcEZ1bmMsCiAgICBjdXN0b21WYXJzOiBzZXROb29wRnVuY1dyYXBwZXIsCiAgICBwdWJsaXNoZXI6IHNldE5vb3BGdW5jV3JhcHBlciwKICAgIG9yZGVyOiBzZXROb29wRnVuY1dyYXBwZXIsCiAgICBjbGljazogc2VuZE5vb3BGdW5jV3JhcHBlciwKICAgIGNsaWNrTGlzdGVuZXI6IHNlbmROb29wRnVuY1dyYXBwZXIsCiAgICBpbnRlcm5hbFNlYXJjaDogewogICAgICBzZXQ6IG5vb3BGdW5jLAogICAgICBzZW5kOiBub29wRnVuYwogICAgfSwKICAgIGVjb21tZXJjZTogZWNvbW1lcmNlV3JhcHBlciwKICAgIGlkZW50aWZpZWRWaXNpdG9yOiB7CiAgICAgIHVuc2V0OiBub29wRnVuYwogICAgfSwKICAgIHBhZ2U6IHsKICAgICAgc2V0OiBub29wRnVuYywKICAgICAgc2VuZDogbm9vcEZ1bmMKICAgIH0sCiAgICBzZWxmUHJvbW90aW9uOiB7CiAgICAgIGFkZDogbm9vcEZ1bmMsCiAgICAgIHNlbmQ6IG5vb3BGdW5jCiAgICB9LAogICAgcHJpdmFjeTogewogICAgICBzZXRWaXNpdG9yTW9kZTogbm9vcEZ1bmMsCiAgICAgIGdldFZpc2l0b3JNb2RlOiBub29wRnVuYywKICAgICAgaGl0OiBub29wRnVuYwogICAgfSwKICAgIHJpY2hNZWRpYTogewogICAgICBhZGQ6IG5vb3BGdW5jLAogICAgICBzZW5kOiBub29wRnVuYywKICAgICAgcmVtb3ZlOiBub29wRnVuYywKICAgICAgcmVtb3ZlQWxsOiBub29wRnVuYwogICAgfQogIH07CiAgdmFyIHNtYXJ0VGFnV3JhcHBlciA9IHsKICAgIFRyYWNrZXI6IHsKICAgICAgVGFnOiBmdW5jdGlvbiBUYWcoKSB7CiAgICAgICAgcmV0dXJuIG5ldyB0YWcoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuZXctY2FwCiAgICAgIH0KICAgIH0KICB9OwogIHdpbmRvdy5BVEludGVybmV0ID0gc21hcnRUYWdXcmFwcGVyOwogIGhpdChzb3VyY2UpOwp9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICB2YXIgX2xvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CgogICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbXBhdC9jb21wYXQKCiAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IC8vIGRlbGV0ZSBhbGwgZG9tYWlucyBmcm9tIHJ1bGVUZXh0IGFuZCBsZWF2ZSBqdXN0IHJ1bGUgcGFydAoKCiAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7IC8vIHByZXBhcmUgYXBwbGllZCBzY3JpcHRsZXQgcnVsZSBmb3Igc3BlY2lmaWMgZG9tYWluCgogICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICB9IC8vIFVzZWQgdG8gY2hlY2sgaWYgc2NyaXB0bGV0IHVzZXMgJ2hpdCcgZnVuY3Rpb24gZm9yIGxvZ2dpbmcKCgogICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgIGlmIChtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIF9sb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICB9CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgIGlmICh0cmFjZSkgewogICAgICB0cmFjZSgpOwogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgfSBjYXRjaCAoZSkgey8vIHRyeSBjYXRjaCBmb3IgRWRnZSAxNQogICAgLy8gSW4gYWNjb3JkaW5nIHRvIHRoaXMgaXNzdWUgaHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS9wbGF0Zm9ybS9pc3N1ZXMvMTQ0OTUyMjAvCiAgICAvLyBjb25zb2xlLmxvZyB0aHJvd3MgYW4gZXJyb3IKICB9IC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciB1bml0LXRlc3RzIG9ubHkhCgoKICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogIH0KfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEFUSW50ZXJuZXRTbWFydFRhZy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoiYXRpLXNtYXJ0dGFnIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "didomi-loader",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIERpZG9taUxvYWRlcihzb3VyY2UpIHsKICBmdW5jdGlvbiBVc2VyQ29uc2VudFN0YXR1c0ZvclZlbmRvclN1YnNjcmliZSgpIHt9CgogIFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yU3Vic2NyaWJlLnByb3RvdHlwZS5maWx0ZXIgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gbmV3IFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yU3Vic2NyaWJlKCk7CiAgfTsKCiAgVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3JTdWJzY3JpYmUucHJvdG90eXBlLnN1YnNjcmliZSA9IG5vb3BGdW5jOwoKICBmdW5jdGlvbiBVc2VyQ29uc2VudFN0YXR1c0ZvclZlbmRvcigpIHt9CgogIFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yLnByb3RvdHlwZS5maXJzdCA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBuZXcgVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3JTdWJzY3JpYmUoKTsKICB9OwoKICBVc2VyQ29uc2VudFN0YXR1c0ZvclZlbmRvci5wcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIG5ldyBVc2VyQ29uc2VudFN0YXR1c0ZvclZlbmRvclN1YnNjcmliZSgpOwogIH07CgogIFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBub29wRnVuYzsKICB2YXIgRGlkb21pV3JhcHBlciA9IHsKICAgIGlzQ29uc2VudFJlcXVpcmVkOiBmYWxzZUZ1bmMsCiAgICBnZXRVc2VyQ29uc2VudFN0YXR1c0ZvclB1cnBvc2U6IHRydWVGdW5jLAogICAgZ2V0VXNlckNvbnNlbnRTdGF0dXM6IHRydWVGdW5jLAogICAgZ2V0VXNlclN0YXR1czogbm9vcEZ1bmMsCiAgICBnZXRSZXF1aXJlZFB1cnBvc2VzOiBub29wQXJyYXksCiAgICBnZXRVc2VyQ29uc2VudFN0YXR1c0ZvclZlbmRvcjogdHJ1ZUZ1bmMsCiAgICBQdXJwb3NlczogewogICAgICBDb29raWVzOiAnY29va2llcycKICAgIH0sCiAgICBub3RpY2U6IHsKICAgICAgY29uZmlndXJlOiBub29wRnVuYywKICAgICAgaGlkZTogbm9vcEZ1bmMsCiAgICAgIGlzVmlzaWJsZTogZmFsc2VGdW5jLAogICAgICBzaG93OiBub29wRnVuYywKICAgICAgc2hvd0RhdGFQcm9jZXNzaW5nOiB0cnVlRnVuYwogICAgfSwKICAgIGlzVXNlckNvbnNlbnRTdGF0dXNQYXJ0aWFsOiBmYWxzZUZ1bmMsCiAgICBvbjogZnVuY3Rpb24gb24oKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYWN0aW9uczoge30sCiAgICAgICAgZW1pdHRlcjoge30sCiAgICAgICAgc2VydmljZXM6IHt9LAogICAgICAgIHN0b3JlOiB7fQogICAgICB9OwogICAgfSwKICAgIHNob3VsZENvbnNlbnRCZUNvbGxlY3RlZDogZmFsc2VGdW5jLAogICAgZ2V0VXNlckNvbnNlbnRTdGF0dXNGb3JBbGw6IG5vb3BGdW5jLAogICAgZ2V0T2JzZXJ2YWJsZU9uVXNlckNvbnNlbnRTdGF0dXNGb3JWZW5kb3I6IGZ1bmN0aW9uIGdldE9ic2VydmFibGVPblVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yKCkgewogICAgICByZXR1cm4gbmV3IFVzZXJDb25zZW50U3RhdHVzRm9yVmVuZG9yKCk7CiAgICB9CiAgfTsKICB3aW5kb3cuRGlkb21pID0gRGlkb21pV3JhcHBlcjsKICB2YXIgZGlkb21pU3RhdGVXcmFwcGVyID0gewogICAgZGlkb21pRXhwZXJpbWVudElkOiAnJywKICAgIGRpZG9taUV4cGVyaW1lbnRVc2VyR3JvdXA6ICcnLAogICAgZGlkb21pR0RQUkFwcGxpZXM6IDEsCiAgICBkaWRvbWlJQUJDb25zZW50OiAnJywKICAgIGRpZG9taVB1cnBvc2VzQ29uc2VudDogJycsCiAgICBkaWRvbWlQdXJwb3Nlc0NvbnNlbnREZW5pZWQ6ICcnLAogICAgZGlkb21pUHVycG9zZXNDb25zZW50VW5rbm93bjogJycsCiAgICBkaWRvbWlWZW5kb3JzQ29uc2VudDogJycsCiAgICBkaWRvbWlWZW5kb3JzQ29uc2VudERlbmllZDogJycsCiAgICBkaWRvbWlWZW5kb3JzQ29uc2VudFVua25vd246ICcnLAogICAgZGlkb21pVmVuZG9yc1Jhd0NvbnNlbnQ6ICcnLAogICAgZGlkb21pVmVuZG9yc1Jhd0NvbnNlbnREZW5pZWQ6ICcnLAogICAgZGlkb21pVmVuZG9yc1Jhd0NvbnNlbnRVbmtub3duOiAnJwogIH07CiAgd2luZG93LmRpZG9taVN0YXRlID0gZGlkb21pU3RhdGVXcmFwcGVyOwogIHZhciB0Y0RhdGEgPSB7CiAgICBldmVudFN0YXR1czogJ3RjbG9hZGVkJywKICAgIGdkcHJBcHBsaWVzOiBmYWxzZSwKICAgIGxpc3RlbmVySWQ6IG5vb3BGdW5jLAogICAgdmVuZG9yOiB7CiAgICAgIGNvbnNlbnRzOiBbXQogICAgfSwKICAgIHB1cnBvc2U6IHsKICAgICAgY29uc2VudHM6IFtdCiAgICB9CiAgfTsKCiAgdmFyIF9fdGNmYXBpV3JhcHBlciA9IGZ1bmN0aW9uIF9fdGNmYXBpV3JhcHBlcigpIHsKICAgIGZvciAodmFyIF9sZW4xNyA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjE3KSwgX2tleTE3ID0gMDsgX2tleTE3IDwgX2xlbjE3OyBfa2V5MTcrKykgewogICAgICBhcmdzW19rZXkxN10gPSBhcmd1bWVudHNbX2tleTE3XTsKICAgIH0KCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXgKICAgIGZvciAodmFyIF9pMTYgPSAwLCBfYXJncyA9IGFyZ3M7IF9pMTYgPCBfYXJncy5sZW5ndGg7IF9pMTYrKykgewogICAgICB2YXIgYXJnID0gX2FyZ3NbX2kxNl07CgogICAgICBpZiAodHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHRyeSB7CiAgICAgICAgICBzZXRUaW1lb3V0KGFyZyh0Y0RhdGEsIHRydWUpKTsKICAgICAgICB9IGNhdGNoIChleCkgewogICAgICAgICAgLyogZW1wdHkgKi8KICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9OwoKICB3aW5kb3cuX190Y2ZhcGkgPSBfX3RjZmFwaVdyYXBwZXI7CiAgdmFyIGRpZG9taUV2ZW50TGlzdGVuZXJzV3JhcHBlciA9IHsKICAgIHN0dWI6IHRydWUsCiAgICBwdXNoOiBub29wRnVuYwogIH07CiAgd2luZG93LmRpZG9taUV2ZW50TGlzdGVuZXJzID0gZGlkb21pRXZlbnRMaXN0ZW5lcnNXcmFwcGVyOwogIHZhciBkaWRvbWlPblJlYWR5V3JhcHBlciA9IHsKICAgIHN0dWI6IHRydWUsCiAgICBwdXNoOiBmdW5jdGlvbiBwdXNoKGFyZykgewogICAgICBpZiAodHlwZW9mIGFyZyAhPT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICdjb21wbGV0ZScpIHsKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHNldFRpbWVvdXQoYXJnKHdpbmRvdy5EaWRvbWkpKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzZXRUaW1lb3V0KGFyZyh3aW5kb3cuRGlkb21pKSk7CiAgICAgIH0KICAgIH0KICB9OwogIHdpbmRvdy5kaWRvbWlPblJlYWR5ID0gd2luZG93LmRpZG9taU9uUmVhZHkgfHwgZGlkb21pT25SZWFkeVdyYXBwZXI7CgogIGlmIChBcnJheS5pc0FycmF5KHdpbmRvdy5kaWRvbWlPblJlYWR5KSkgewogICAgd2luZG93LmRpZG9taU9uUmVhZHkuZm9yRWFjaChmdW5jdGlvbiAoYXJnKSB7CiAgICAgIGlmICh0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHNldFRpbWVvdXQoYXJnKHdpbmRvdy5EaWRvbWkpKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAvKiBlbXB0eSAqLwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfQoKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fQpmdW5jdGlvbiBub29wQXJyYXkoKSB7CiAgcmV0dXJuIFtdOwp9CmZ1bmN0aW9uIHRydWVGdW5jKCkgewogIHJldHVybiB0cnVlOwp9CmZ1bmN0aW9uIGZhbHNlRnVuYygpIHsKICByZXR1cm4gZmFsc2U7Cn07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgRGlkb21pTG9hZGVyLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJkaWRvbWktbG9hZGVyIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "fingerprintjs2",
        "aliases": [
            "ubo-fingerprint2.js",
            "fingerprint2.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEZpbmdlcnByaW50anMyKHNvdXJjZSkgewogIHZhciBicm93c2VySWQgPSAnJzsKCiAgZm9yICh2YXIgX2kxMSA9IDA7IF9pMTEgPCA4OyBfaTExICs9IDEpIHsKICAgIGJyb3dzZXJJZCArPSAoTWF0aC5yYW5kb20oKSAqIDB4MTAwMDAgKyAweDEwMDApLnRvU3RyaW5nKDE2KS5zbGljZSgtNCk7CiAgfQoKICB2YXIgRmluZ2VycHJpbnQyID0gZnVuY3Rpb24gRmluZ2VycHJpbnQyKCkge307CgogIEZpbmdlcnByaW50Mi5nZXQgPSBmdW5jdGlvbiAob3B0aW9ucywgY2FsbGJhY2spIHsKICAgIGlmICghY2FsbGJhY2spIHsKICAgICAgY2FsbGJhY2sgPSBvcHRpb25zOwogICAgfQoKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICBpZiAoY2FsbGJhY2spIHsKICAgICAgICBjYWxsYmFjayhicm93c2VySWQsIFtdKTsKICAgICAgfQogICAgfSwgMSk7CiAgfTsKCiAgRmluZ2VycHJpbnQyLnByb3RvdHlwZSA9IHsKICAgIGdldDogRmluZ2VycHJpbnQyLmdldAogIH07CiAgd2luZG93LkZpbmdlcnByaW50MiA9IEZpbmdlcnByaW50MjsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgRmluZ2VycHJpbnRqczIuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6ImZpbmdlcnByaW50anMyIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "fingerprintjs3",
        "aliases": [
            "ubo-fingerprint3.js",
            "fingerprint3.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEZpbmdlcnByaW50anMzKHNvdXJjZSkgewogIHZhciB2aXNpdG9ySWQgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgaWQgPSAnJzsKCiAgICBmb3IgKHZhciBfaTEyID0gMDsgX2kxMiA8IDg7IF9pMTIgKz0gMSkgewogICAgICBpZCArPSAoTWF0aC5yYW5kb20oKSAqIDB4MTAwMDAgKyAweDEwMDApLnRvU3RyaW5nKDE2KS5zbGljZSgtNCk7CiAgICB9CgogICAgcmV0dXJuIGlkOwogIH0oKTsKCiAgdmFyIEZpbmdlcnByaW50SlMgPSBmdW5jdGlvbiBGaW5nZXJwcmludEpTKCkge307CgogIEZpbmdlcnByaW50SlMucHJvdG90eXBlID0gewogICAgbG9hZDogZnVuY3Rpb24gbG9hZCgpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBhdC9jb21wYXQKICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXcgRmluZ2VycHJpbnRKUygpKTsKICAgIH0sCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBhdC9jb21wYXQKICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7CiAgICAgICAgdmlzaXRvcklkOiB2aXNpdG9ySWQKICAgICAgfSk7CiAgICB9LAogICAgaGFzaENvbXBvbmVudHM6IG5vb3BTdHIKICB9OwogIHdpbmRvdy5GaW5nZXJwcmludEpTID0gbmV3IEZpbmdlcnByaW50SlMoKTsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn0KZnVuY3Rpb24gbm9vcFN0cigpIHsKICByZXR1cm4gJyc7Cn07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgRmluZ2VycHJpbnRqczMuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6ImZpbmdlcnByaW50anMzIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "gemius",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdlbWl1cyhzb3VyY2UpIHsKICB2YXIgR2VtaXVzUGxheWVyID0gZnVuY3Rpb24gR2VtaXVzUGxheWVyKCkge307CgogIEdlbWl1c1BsYXllci5wcm90b3R5cGUgPSB7CiAgICBzZXRWaWRlb09iamVjdDogbm9vcEZ1bmMsCiAgICBuZXdQcm9ncmFtOiBub29wRnVuYywKICAgIHByb2dyYW1FdmVudDogbm9vcEZ1bmMsCiAgICBuZXdBZDogbm9vcEZ1bmMsCiAgICBhZEV2ZW50OiBub29wRnVuYwogIH07CiAgd2luZG93LkdlbWl1c1BsYXllciA9IEdlbWl1c1BsYXllcjsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBHZW1pdXMuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6ImdlbWl1cyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "google-analytics-ga",
        "aliases": [
            "ubo-google-analytics_ga.js",
            "google-analytics_ga.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUFuYWx5dGljc0dhKHNvdXJjZSkgewogIC8vIEdhcSBjb25zdHJ1Y3RvcgogIGZ1bmN0aW9uIEdhcSgpIHt9CgogIEdhcS5wcm90b3R5cGUuTmEgPSBub29wRnVuYzsKICBHYXEucHJvdG90eXBlLk8gPSBub29wRnVuYzsKICBHYXEucHJvdG90eXBlLlNhID0gbm9vcEZ1bmM7CiAgR2FxLnByb3RvdHlwZS5UYSA9IG5vb3BGdW5jOwogIEdhcS5wcm90b3R5cGUuVmEgPSBub29wRnVuYzsKICBHYXEucHJvdG90eXBlLl9jcmVhdGVBc3luY1RyYWNrZXIgPSBub29wRnVuYzsKICBHYXEucHJvdG90eXBlLl9nZXRBc3luY1RyYWNrZXIgPSBub29wRnVuYzsKICBHYXEucHJvdG90eXBlLl9nZXRQbHVnaW4gPSBub29wRnVuYzsKCiAgR2FxLnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gKGRhdGEpIHsKICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICBkYXRhKCk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSA9PT0gZmFsc2UpIHsKICAgICAgcmV0dXJuOwogICAgfSAvLyBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9hbmFseXRpY3MvZGV2Z3VpZGVzL2NvbGxlY3Rpb24vZ2Fqcy9tZXRob2RzL2dhSlNBcGlEb21haW5EaXJlY3RvcnkjX2dhdC5HQV9UcmFja2VyXy5fbGluawogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3VCbG9ja09yaWdpbi91QmxvY2staXNzdWVzL2lzc3Vlcy8xODA3CgoKICAgIGlmICh0eXBlb2YgZGF0YVswXSA9PT0gJ3N0cmluZycgJiYgLyhefFwuKV9saW5rJC8udGVzdChkYXRhWzBdKSAmJiB0eXBlb2YgZGF0YVsxXSA9PT0gJ3N0cmluZycpIHsKICAgICAgd2luZG93LmxvY2F0aW9uLmFzc2lnbihkYXRhWzFdKTsKICAgIH0gLy8gaHR0cHM6Ly9naXRodWIuY29tL2dvcmhpbGwvdUJsb2NrL2lzc3Vlcy8yMTYyCgoKICAgIGlmIChkYXRhWzBdID09PSAnX3NldCcgJiYgZGF0YVsxXSA9PT0gJ2hpdENhbGxiYWNrJyAmJiB0eXBlb2YgZGF0YVsyXSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICBkYXRhWzJdKCk7CiAgICB9CiAgfTsKCiAgdmFyIGdhcSA9IG5ldyBHYXEoKTsKICB2YXIgYXN5bmNUcmFja2VycyA9IHdpbmRvdy5fZ2FxIHx8IFtdOwoKICBpZiAoQXJyYXkuaXNBcnJheShhc3luY1RyYWNrZXJzKSkgewogICAgd2hpbGUgKGFzeW5jVHJhY2tlcnNbMF0pIHsKICAgICAgZ2FxLnB1c2goYXN5bmNUcmFja2Vycy5zaGlmdCgpKTsKICAgIH0KICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tdWx0aS1hc3NpZ24KCgogIHdpbmRvdy5fZ2FxID0gZ2FxLnFmID0gZ2FxOyAvLyBHYXQgY29uc3RydWN0b3IKCiAgZnVuY3Rpb24gR2F0KCkge30gLy8gTW9jayB0cmFja2VyIGFwaQoKCiAgdmFyIGFwaSA9IFsnX2FkZElnbm9yZWRPcmdhbmljJywgJ19hZGRJZ25vcmVkUmVmJywgJ19hZGRJdGVtJywgJ19hZGRPcmdhbmljJywgJ19hZGRUcmFucycsICdfY2xlYXJJZ25vcmVkT3JnYW5pYycsICdfY2xlYXJJZ25vcmVkUmVmJywgJ19jbGVhck9yZ2FuaWMnLCAnX2Nvb2tpZVBhdGhDb3B5JywgJ19kZWxldGVDdXN0b21WYXInLCAnX2dldE5hbWUnLCAnX3NldEFjY291bnQnLCAnX2dldEFjY291bnQnLCAnX2dldENsaWVudEluZm8nLCAnX2dldERldGVjdEZsYXNoJywgJ19nZXREZXRlY3RUaXRsZScsICdfZ2V0TGlua2VyVXJsJywgJ19nZXRMb2NhbEdpZlBhdGgnLCAnX2dldFNlcnZpY2VNb2RlJywgJ19nZXRWZXJzaW9uJywgJ19nZXRWaXNpdG9yQ3VzdG9tVmFyJywgJ19pbml0RGF0YScsICdfbGluaycsICdfbGlua0J5UG9zdCcsICdfc2V0QWxsb3dBbmNob3InLCAnX3NldEFsbG93SGFzaCcsICdfc2V0QWxsb3dMaW5rZXInLCAnX3NldENhbXBDb250ZW50S2V5JywgJ19zZXRDYW1wTWVkaXVtS2V5JywgJ19zZXRDYW1wTmFtZUtleScsICdfc2V0Q2FtcE5PS2V5JywgJ19zZXRDYW1wU291cmNlS2V5JywgJ19zZXRDYW1wVGVybUtleScsICdfc2V0Q2FtcGFpZ25Db29raWVUaW1lb3V0JywgJ19zZXRDYW1wYWlnblRyYWNrJywgJ19zZXRDbGllbnRJbmZvJywgJ19zZXRDb29raWVQYXRoJywgJ19zZXRDb29raWVQZXJzaXN0ZW5jZScsICdfc2V0Q29va2llVGltZW91dCcsICdfc2V0Q3VzdG9tVmFyJywgJ19zZXREZXRlY3RGbGFzaCcsICdfc2V0RGV0ZWN0VGl0bGUnLCAnX3NldERvbWFpbk5hbWUnLCAnX3NldExvY2FsR2lmUGF0aCcsICdfc2V0TG9jYWxSZW1vdGVTZXJ2ZXJNb2RlJywgJ19zZXRMb2NhbFNlcnZlck1vZGUnLCAnX3NldFJlZmVycmVyT3ZlcnJpZGUnLCAnX3NldFJlbW90ZVNlcnZlck1vZGUnLCAnX3NldFNhbXBsZVJhdGUnLCAnX3NldFNlc3Npb25UaW1lb3V0JywgJ19zZXRTaXRlU3BlZWRTYW1wbGVSYXRlJywgJ19zZXRTZXNzaW9uQ29va2llVGltZW91dCcsICdfc2V0VmFyJywgJ19zZXRWaXNpdG9yQ29va2llVGltZW91dCcsICdfdHJhY2tFdmVudCcsICdfdHJhY2tQYWdlTG9hZFRpbWUnLCAnX3RyYWNrUGFnZXZpZXcnLCAnX3RyYWNrU29jaWFsJywgJ190cmFja1RpbWluZycsICdfdHJhY2tUcmFucycsICdfdmlzaXRDb2RlJ107CiAgdmFyIHRyYWNrZXIgPSBhcGkucmVkdWNlKGZ1bmN0aW9uIChyZXMsIGZ1bmNOYW1lKSB7CiAgICByZXNbZnVuY05hbWVdID0gbm9vcEZ1bmM7CiAgICByZXR1cm4gcmVzOwogIH0sIHt9KTsKCiAgdHJhY2tlci5fZ2V0TGlua2VyVXJsID0gZnVuY3Rpb24gKGEpIHsKICAgIHJldHVybiBhOwogIH07IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9BZGd1YXJkVGVhbS9TY3JpcHRsZXRzL2lzc3Vlcy8xNTQKCgogIHRyYWNrZXIuX2xpbmsgPSBmdW5jdGlvbiAodXJsKSB7CiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24odXJsKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgLy8gbG9nIHRoZSBlcnJvciBvbmx5IHdoaWxlIGRlYnVnZ2luZwogICAgICBpZiAoc291cmNlLnZlcmJvc2UpIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9CiAgICB9CiAgfTsKCiAgR2F0LnByb3RvdHlwZS5fYW5vbnltaXplSVAgPSBub29wRnVuYzsKICBHYXQucHJvdG90eXBlLl9jcmVhdGVUcmFja2VyID0gbm9vcEZ1bmM7CiAgR2F0LnByb3RvdHlwZS5fZm9yY2VTU0wgPSBub29wRnVuYzsKICBHYXQucHJvdG90eXBlLl9nZXRQbHVnaW4gPSBub29wRnVuYzsKCiAgR2F0LnByb3RvdHlwZS5fZ2V0VHJhY2tlciA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB0cmFja2VyOwogIH07CgogIEdhdC5wcm90b3R5cGUuX2dldFRyYWNrZXJCeU5hbWUgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gdHJhY2tlcjsKICB9OwoKICBHYXQucHJvdG90eXBlLl9nZXRUcmFja2VycyA9IG5vb3BGdW5jOwogIEdhdC5wcm90b3R5cGUuYWEgPSBub29wRnVuYzsKICBHYXQucHJvdG90eXBlLmFiID0gbm9vcEZ1bmM7CiAgR2F0LnByb3RvdHlwZS5oYiA9IG5vb3BGdW5jOwogIEdhdC5wcm90b3R5cGUubGEgPSBub29wRnVuYzsKICBHYXQucHJvdG90eXBlLm9hID0gbm9vcEZ1bmM7CiAgR2F0LnByb3RvdHlwZS5wYSA9IG5vb3BGdW5jOwogIEdhdC5wcm90b3R5cGUudSA9IG5vb3BGdW5jOwogIHZhciBnYXQgPSBuZXcgR2F0KCk7CiAgd2luZG93Ll9nYXQgPSBnYXQ7CiAgaGl0KHNvdXJjZSk7Cn0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgcmV0dXJuOwogIH0KCiAgdHJ5IHsKICAgIHZhciBfbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKCiAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY29tcGF0L2NvbXBhdAoKICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gLy8gZGVsZXRlIGFsbCBkb21haW5zIGZyb20gcnVsZVRleHQgYW5kIGxlYXZlIGp1c3QgcnVsZSBwYXJ0CgoKICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsgLy8gcHJlcGFyZSBhcHBsaWVkIHNjcmlwdGxldCBydWxlIGZvciBzcGVjaWZpYyBkb21haW4KCiAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgIH0gLy8gVXNlZCB0byBjaGVjayBpZiBzY3JpcHRsZXQgdXNlcyAnaGl0JyBmdW5jdGlvbiBmb3IgbG9nZ2luZwoKCiAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX2xvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgIH0KICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgaWYgKHRyYWNlKSB7CiAgICAgIHRyYWNlKCk7CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICB9IGNhdGNoIChlKSB7Ly8gdHJ5IGNhdGNoIGZvciBFZGdlIDE1CiAgICAvLyBJbiBhY2NvcmRpbmcgdG8gdGhpcyBpc3N1ZSBodHRwczovL2RldmVsb3Blci5taWNyb3NvZnQuY29tL2VuLXVzL21pY3Jvc29mdC1lZGdlL3BsYXRmb3JtL2lzc3Vlcy8xNDQ5NTIyMC8KICAgIC8vIGNvbnNvbGUubG9nIHRocm93cyBhbiBlcnJvcgogIH0gLy8gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIHVuaXQtdGVzdHMgb25seSEKCgogIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgfQp9CmZ1bmN0aW9uIG5vb3BGdW5jKCkge307CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgR29vZ2xlQW5hbHl0aWNzR2EuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Imdvb2dsZS1hbmFseXRpY3MtZ2EiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "google-analytics",
        "aliases": [
            "ubo-google-analytics_analytics.js",
            "google-analytics_analytics.js",
            "googletagmanager-gtm",
            "ubo-googletagmanager_gtm.js",
            "googletagmanager_gtm.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUFuYWx5dGljcyhzb3VyY2UpIHsKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lcwogIHZhciBUcmFja2VyID0gZnVuY3Rpb24gVHJhY2tlcigpIHt9OyAvLyBjb25zdHJ1Y3RvcgoKCiAgdmFyIHByb3RvID0gVHJhY2tlci5wcm90b3R5cGU7CiAgcHJvdG8uZ2V0ID0gbm9vcEZ1bmM7CiAgcHJvdG8uc2V0ID0gbm9vcEZ1bmM7CiAgcHJvdG8uc2VuZCA9IG5vb3BGdW5jOwogIHZhciBnb29nbGVBbmFseXRpY3NOYW1lID0gd2luZG93Lkdvb2dsZUFuYWx5dGljc09iamVjdCB8fCAnZ2EnOyAvLyBhIC0tIGZha2UgYXJnIGZvciAnZ2EubGVuZ3RoIDwgMScgYW50aWFkYmxvY2sgY2hlY2tpbmcKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKCiAgZnVuY3Rpb24gZ2EoYSkgewogICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7CgogICAgaWYgKGxlbiA9PT0gMCkgewogICAgICByZXR1cm47CiAgICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItcmVzdC1wYXJhbXMKCgogICAgdmFyIGxhc3RBcmcgPSBhcmd1bWVudHNbbGVuIC0gMV07CiAgICB2YXIgcmVwbGFjZXI7CgogICAgaWYgKGxhc3RBcmcgaW5zdGFuY2VvZiBPYmplY3QgJiYgbGFzdEFyZyAhPT0gbnVsbCAmJiB0eXBlb2YgbGFzdEFyZy5oaXRDYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgewogICAgICByZXBsYWNlciA9IGxhc3RBcmcuaGl0Q2FsbGJhY2s7CiAgICB9IGVsc2UgaWYgKHR5cGVvZiBsYXN0QXJnID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9BZGd1YXJkVGVhbS9TY3JpcHRsZXRzL2lzc3Vlcy85OAogICAgICByZXBsYWNlciA9IGZ1bmN0aW9uIHJlcGxhY2VyKCkgewogICAgICAgIGxhc3RBcmcoZ2EuY3JlYXRlKCkpOwogICAgICB9OwogICAgfQoKICAgIHRyeSB7CiAgICAgIHNldFRpbWVvdXQocmVwbGFjZXIsIDEpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHkKICAgIH0gY2F0Y2ggKGV4KSB7fQogIH0KCiAgZ2EuY3JlYXRlID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIG5ldyBUcmFja2VyKCk7CiAgfTsgLy8gaHR0cHM6Ly9naXRodWIuY29tL0FkZ3VhcmRUZWFtL1NjcmlwdGxldHMvaXNzdWVzLzEzNAoKCiAgZ2EuZ2V0QnlOYW1lID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIG5ldyBUcmFja2VyKCk7CiAgfTsKCiAgZ2EuZ2V0QWxsID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIFtuZXcgVHJhY2tlcigpXTsKICB9OwoKICBnYS5yZW1vdmUgPSBub29wRnVuYzsKICBnYS5sb2FkZWQgPSB0cnVlOwogIHdpbmRvd1tnb29nbGVBbmFseXRpY3NOYW1lXSA9IGdhOwogIHZhciBfd2luZG93MyA9IHdpbmRvdywKICAgICAgZGF0YUxheWVyID0gX3dpbmRvdzMuZGF0YUxheWVyLAogICAgICBnb29nbGVfb3B0aW1pemUgPSBfd2luZG93My5nb29nbGVfb3B0aW1pemU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY2FtZWxjYXNlCgogIGlmIChkYXRhTGF5ZXIgaW5zdGFuY2VvZiBPYmplY3QgPT09IGZhbHNlKSB7CiAgICByZXR1cm47CiAgfQoKICBpZiAoZGF0YUxheWVyLmhpZGUgaW5zdGFuY2VvZiBPYmplY3QgJiYgdHlwZW9mIGRhdGFMYXllci5oaWRlLmVuZCA9PT0gJ2Z1bmN0aW9uJykgewogICAgZGF0YUxheWVyLmhpZGUuZW5kKCk7CiAgfQogIC8qKgogICAqIGNoZWNrcyBkYXRhIG9iamVjdCBhbmQgZGVsYXlzIGNhbGxiYWNrCiAgICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IGRhdGEgZ3RhZyBwYXlsb2FkCiAgICogQHBhcmFtIHtzdHJpbmd9IGZ1bmNOYW1lIGNhbGxiYWNrIHByb3AgbmFtZQogICAqIEByZXR1cm5zCiAgICovCgoKICB2YXIgaGFuZGxlQ2FsbGJhY2sgPSBmdW5jdGlvbiBoYW5kbGVDYWxsYmFjayhkYXRhT2JqLCBmdW5jTmFtZSkgewogICAgaWYgKGRhdGFPYmogJiYgdHlwZW9mIGRhdGFPYmpbZnVuY05hbWVdID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHNldFRpbWVvdXQoZGF0YU9ialtmdW5jTmFtZV0pOwogICAgfQogIH07CgogIGlmICh0eXBlb2YgZGF0YUxheWVyLnB1c2ggPT09ICdmdW5jdGlvbicpIHsKICAgIGRhdGFMYXllci5wdXNoID0gZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBPYmplY3QpIHsKICAgICAgICBoYW5kbGVDYWxsYmFjayhkYXRhLCAnZXZlbnRDYWxsYmFjaycpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXgsIGd1YXJkLWZvci1pbgoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgaGFuZGxlQ2FsbGJhY2soZGF0YVtrZXldLCAnZXZlbnRfY2FsbGJhY2snKTsKICAgICAgICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnMKCgogICAgICAgIGlmICghZGF0YS5oYXNPd25Qcm9wZXJ0eSgnZXZlbnRDYWxsYmFjaycpICYmICFkYXRhLmhhc093blByb3BlcnR5KCdldmVudENhbGxiYWNrJykpIHsKICAgICAgICAgIFtdLnB1c2guY2FsbCh3aW5kb3cuZGF0YUxheWVyLCBkYXRhKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7CiAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChhcmcpIHsKICAgICAgICAgIGhhbmRsZUNhbGxiYWNrKGFyZywgJ2NhbGxiYWNrJyk7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBub29wRnVuYzsKICAgIH07CiAgfSAvLyBodHRwczovL2dpdGh1Yi5jb20vQWRndWFyZFRlYW0vU2NyaXB0bGV0cy9pc3N1ZXMvODEKCgogIGlmIChnb29nbGVfb3B0aW1pemUgaW5zdGFuY2VvZiBPYmplY3QgJiYgdHlwZW9mIGdvb2dsZV9vcHRpbWl6ZS5nZXQgPT09ICdmdW5jdGlvbicpIHsKICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY2FtZWxjYXNlCiAgICB2YXIgZ29vZ2xlT3B0aW1pemVXcmFwcGVyID0gewogICAgICBnZXQ6IG5vb3BGdW5jCiAgICB9OwogICAgd2luZG93Lmdvb2dsZV9vcHRpbWl6ZSA9IGdvb2dsZU9wdGltaXplV3JhcHBlcjsKICB9CgogIGhpdChzb3VyY2UpOwp9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICB2YXIgX2xvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CgogICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbXBhdC9jb21wYXQKCiAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IC8vIGRlbGV0ZSBhbGwgZG9tYWlucyBmcm9tIHJ1bGVUZXh0IGFuZCBsZWF2ZSBqdXN0IHJ1bGUgcGFydAoKCiAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7IC8vIHByZXBhcmUgYXBwbGllZCBzY3JpcHRsZXQgcnVsZSBmb3Igc3BlY2lmaWMgZG9tYWluCgogICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICB9IC8vIFVzZWQgdG8gY2hlY2sgaWYgc2NyaXB0bGV0IHVzZXMgJ2hpdCcgZnVuY3Rpb24gZm9yIGxvZ2dpbmcKCgogICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgIGlmIChtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIF9sb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICB9CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgIGlmICh0cmFjZSkgewogICAgICB0cmFjZSgpOwogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgfSBjYXRjaCAoZSkgey8vIHRyeSBjYXRjaCBmb3IgRWRnZSAxNQogICAgLy8gSW4gYWNjb3JkaW5nIHRvIHRoaXMgaXNzdWUgaHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS9wbGF0Zm9ybS9pc3N1ZXMvMTQ0OTUyMjAvCiAgICAvLyBjb25zb2xlLmxvZyB0aHJvd3MgYW4gZXJyb3IKICB9IC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciB1bml0LXRlc3RzIG9ubHkhCgoKICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogIH0KfQpmdW5jdGlvbiBub29wRnVuYygpIHt9CmZ1bmN0aW9uIG5vb3BOdWxsKCkgewogIHJldHVybiBudWxsOwp9CmZ1bmN0aW9uIG5vb3BBcnJheSgpIHsKICByZXR1cm4gW107Cn07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgR29vZ2xlQW5hbHl0aWNzLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJnb29nbGUtYW5hbHl0aWNzIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "google-ima3",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZUltYTMoc291cmNlKSB7CiAgdmFyIF90aGlzID0gdGhpczsKCiAgdmFyIFZFUlNJT04gPSAnMy40NTMuMCc7CiAgdmFyIGltYSA9IHt9OwoKICB2YXIgQWREaXNwbGF5Q29udGFpbmVyID0gZnVuY3Rpb24gQWREaXNwbGF5Q29udGFpbmVyKCkge307CgogIEFkRGlzcGxheUNvbnRhaW5lci5wcm90b3R5cGUuZGVzdHJveSA9IG5vb3BGdW5jOwogIEFkRGlzcGxheUNvbnRhaW5lci5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IG5vb3BGdW5jOwoKICB2YXIgSW1hU2RrU2V0dGluZ3MgPSBmdW5jdGlvbiBJbWFTZGtTZXR0aW5ncygpIHt9OwoKICBJbWFTZGtTZXR0aW5ncy5Db21wYW5pb25CYWNrZmlsbE1vZGUgPSB7CiAgICBBTFdBWVM6ICdhbHdheXMnLAogICAgT05fTUFTVEVSX0FEOiAnb25fbWFzdGVyX2FkJwogIH07CiAgSW1hU2RrU2V0dGluZ3MuVnBhaWRNb2RlID0gewogICAgRElTQUJMRUQ6IDAsCiAgICBFTkFCTEVEOiAxLAogICAgSU5TRUNVUkU6IDIKICB9OwogIEltYVNka1NldHRpbmdzLnByb3RvdHlwZSA9IHsKICAgIGM6IHRydWUsCiAgICBmOiB7fSwKICAgIGk6IGZhbHNlLAogICAgbDogJycsCiAgICBwOiAnJywKICAgIHI6IDAsCiAgICB0OiAnJywKICAgIHY6ICcnLAogICAgZ2V0Q29tcGFuaW9uQmFja2ZpbGw6IG5vb3BGdW5jLAogICAgZ2V0RGlzYWJsZUN1c3RvbVBsYXliYWNrRm9ySU9TMTBQbHVzOiBmdW5jdGlvbiBnZXREaXNhYmxlQ3VzdG9tUGxheWJhY2tGb3JJT1MxMFBsdXMoKSB7CiAgICAgIHJldHVybiBfdGhpcy5pOwogICAgfSwKICAgIGdldERpc2FibGVkRmxhc2hBZHM6IGZ1bmN0aW9uIGdldERpc2FibGVkRmxhc2hBZHMoKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICAgIGdldEZlYXR1cmVGbGFnczogZnVuY3Rpb24gZ2V0RmVhdHVyZUZsYWdzKCkgewogICAgICByZXR1cm4gX3RoaXMuZjsKICAgIH0sCiAgICBnZXRMb2NhbGU6IGZ1bmN0aW9uIGdldExvY2FsZSgpIHsKICAgICAgcmV0dXJuIF90aGlzLmw7CiAgICB9LAogICAgZ2V0TnVtUmVkaXJlY3RzOiBmdW5jdGlvbiBnZXROdW1SZWRpcmVjdHMoKSB7CiAgICAgIHJldHVybiBfdGhpcy5yOwogICAgfSwKICAgIGdldFBsYXllclR5cGU6IGZ1bmN0aW9uIGdldFBsYXllclR5cGUoKSB7CiAgICAgIHJldHVybiBfdGhpcy50OwogICAgfSwKICAgIGdldFBsYXllclZlcnNpb246IGZ1bmN0aW9uIGdldFBsYXllclZlcnNpb24oKSB7CiAgICAgIHJldHVybiBfdGhpcy52OwogICAgfSwKICAgIGdldFBwaWQ6IGZ1bmN0aW9uIGdldFBwaWQoKSB7CiAgICAgIHJldHVybiBfdGhpcy5wOwogICAgfSwKICAgIGdldFZwYWlkTW9kZTogZnVuY3Rpb24gZ2V0VnBhaWRNb2RlKCkgewogICAgICByZXR1cm4gX3RoaXMuQzsKICAgIH0sCiAgICBpc0Nvb2tpZXNFbmFibGVkOiBmdW5jdGlvbiBpc0Nvb2tpZXNFbmFibGVkKCkgewogICAgICByZXR1cm4gX3RoaXMuYzsKICAgIH0sCiAgICBpc1ZwYWlkQWRhcHRlcjogZnVuY3Rpb24gaXNWcGFpZEFkYXB0ZXIoKSB7CiAgICAgIHJldHVybiBfdGhpcy5NOwogICAgfSwKICAgIHNldENvbXBhbmlvbkJhY2tmaWxsOiBub29wRnVuYywKICAgIHNldEF1dG9QbGF5QWRCcmVha3M6IGZ1bmN0aW9uIHNldEF1dG9QbGF5QWRCcmVha3MoYSkgewogICAgICBfdGhpcy5LID0gYTsKICAgIH0sCiAgICBzZXRDb29raWVzRW5hYmxlZDogZnVuY3Rpb24gc2V0Q29va2llc0VuYWJsZWQoYykgewogICAgICBfdGhpcy5jID0gISFjOwogICAgfSwKICAgIHNldERpc2FibGVDdXN0b21QbGF5YmFja0ZvcklPUzEwUGx1czogZnVuY3Rpb24gc2V0RGlzYWJsZUN1c3RvbVBsYXliYWNrRm9ySU9TMTBQbHVzKGkpIHsKICAgICAgX3RoaXMuaSA9ICEhaTsKICAgIH0sCiAgICBzZXREaXNhYmxlRmxhc2hBZHM6IG5vb3BGdW5jLAogICAgc2V0RmVhdHVyZUZsYWdzOiBmdW5jdGlvbiBzZXRGZWF0dXJlRmxhZ3MoZikgewogICAgICBfdGhpcy5mID0gISFmOwogICAgfSwKICAgIHNldElzVnBhaWRBZGFwdGVyOiBmdW5jdGlvbiBzZXRJc1ZwYWlkQWRhcHRlcihhKSB7CiAgICAgIF90aGlzLk0gPSBhOwogICAgfSwKICAgIHNldExvY2FsZTogZnVuY3Rpb24gc2V0TG9jYWxlKGwpIHsKICAgICAgX3RoaXMubCA9ICEhbDsKICAgIH0sCiAgICBzZXROdW1SZWRpcmVjdHM6IGZ1bmN0aW9uIHNldE51bVJlZGlyZWN0cyhyKSB7CiAgICAgIF90aGlzLnIgPSAhIXI7CiAgICB9LAogICAgc2V0UGFnZUNvcnJlbGF0b3I6IGZ1bmN0aW9uIHNldFBhZ2VDb3JyZWxhdG9yKGEpIHsKICAgICAgX3RoaXMuUiA9IGE7CiAgICB9LAogICAgc2V0UGxheWVyVHlwZTogZnVuY3Rpb24gc2V0UGxheWVyVHlwZSh0KSB7CiAgICAgIF90aGlzLnQgPSAhIXQ7CiAgICB9LAogICAgc2V0UGxheWVyVmVyc2lvbjogZnVuY3Rpb24gc2V0UGxheWVyVmVyc2lvbih2KSB7CiAgICAgIF90aGlzLnYgPSAhIXY7CiAgICB9LAogICAgc2V0UHBpZDogZnVuY3Rpb24gc2V0UHBpZChwKSB7CiAgICAgIF90aGlzLnAgPSAhIXA7CiAgICB9LAogICAgc2V0VnBhaWRNb2RlOiBmdW5jdGlvbiBzZXRWcGFpZE1vZGUoYSkgewogICAgICBfdGhpcy5DID0gYTsKICAgIH0sCiAgICBzZXRTZXNzaW9uSWQ6IG5vb3BGdW5jLAogICAgc2V0U3RyZWFtQ29ycmVsYXRvcjogbm9vcEZ1bmMsCiAgICBzZXRWcGFpZEFsbG93ZWQ6IG5vb3BGdW5jLAogICAgQ29tcGFuaW9uQmFja2ZpbGxNb2RlOiB7CiAgICAgIEFMV0FZUzogJ2Fsd2F5cycsCiAgICAgIE9OX01BU1RFUl9BRDogJ29uX21hc3Rlcl9hZCcKICAgIH0sCiAgICBWcGFpZE1vZGU6IHsKICAgICAgRElTQUJMRUQ6IDAsCiAgICAgIEVOQUJMRUQ6IDEsCiAgICAgIElOU0VDVVJFOiAyCiAgICB9CiAgfTsKICB2YXIgbWFuYWdlckxvYWRlZCA9IGZhbHNlOwoKICB2YXIgRXZlbnRIYW5kbGVyID0gZnVuY3Rpb24gRXZlbnRIYW5kbGVyKCkge307CgogIEV2ZW50SGFuZGxlci5wcm90b3R5cGUgPSB7CiAgICBsaXN0ZW5lcnM6IG5ldyBNYXAoKSwKICAgIF9kaXNwYXRjaDogZnVuY3Rpb24gX2Rpc3BhdGNoKGUpIHsKICAgICAgdmFyIGxpc3RlbmVycyA9IHRoaXMubGlzdGVuZXJzLmdldChlLnR5cGUpIHx8IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXgKCiAgICAgIGZvciAodmFyIF9pMTMgPSAwLCBfQXJyYXkkZnJvbSA9IEFycmF5LmZyb20obGlzdGVuZXJzKTsgX2kxMyA8IF9BcnJheSRmcm9tLmxlbmd0aDsgX2kxMysrKSB7CiAgICAgICAgdmFyIGxpc3RlbmVyID0gX0FycmF5JGZyb21bX2kxM107CgogICAgICAgIHRyeSB7CiAgICAgICAgICBsaXN0ZW5lcihlKTsKICAgICAgICB9IGNhdGNoIChyKSB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgY29uc29sZS5lcnJvcihyKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBhZGRFdmVudExpc3RlbmVyOiBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKHQsIGMpIHsKICAgICAgaWYgKCF0aGlzLmxpc3RlbmVycy5oYXModCkpIHsKICAgICAgICB0aGlzLmxpc3RlbmVycy5zZXQodCwgbmV3IFNldCgpKTsKICAgICAgfQoKICAgICAgdGhpcy5saXN0ZW5lcnMuZ2V0KHQpLmFkZChjKTsKICAgIH0sCiAgICByZW1vdmVFdmVudExpc3RlbmVyOiBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKHQsIGMpIHsKICAgICAgdmFyIF90aGlzJGxpc3RlbmVycyRnZXQ7CgogICAgICAoX3RoaXMkbGlzdGVuZXJzJGdldCA9IHRoaXMubGlzdGVuZXJzLmdldCh0KSkgPT09IG51bGwgfHwgX3RoaXMkbGlzdGVuZXJzJGdldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkbGlzdGVuZXJzJGdldC5kZWxldGUoYyk7CiAgICB9CiAgfTsKICB2YXIgQWRzTWFuYWdlciA9IEV2ZW50SGFuZGxlcjsKICAvKiBlc2xpbnQtZGlzYWJsZSBuby11c2UtYmVmb3JlLWRlZmluZSAqLwoKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS52b2x1bWUgPSAxOwogIEFkc01hbmFnZXIucHJvdG90eXBlLmNvbGxhcHNlID0gbm9vcEZ1bmM7CiAgQWRzTWFuYWdlci5wcm90b3R5cGUuY29uZmlndXJlQWRzTWFuYWdlciA9IG5vb3BGdW5jOwogIEFkc01hbmFnZXIucHJvdG90eXBlLmRlc3Ryb3kgPSBub29wRnVuYzsKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5kaXNjYXJkQWRCcmVhayA9IG5vb3BGdW5jOwogIEFkc01hbmFnZXIucHJvdG90eXBlLmV4cGFuZCA9IG5vb3BGdW5jOwogIEFkc01hbmFnZXIucHJvdG90eXBlLmZvY3VzID0gbm9vcEZ1bmM7CgogIEFkc01hbmFnZXIucHJvdG90eXBlLmdldEFkU2tpcHBhYmxlU3RhdGUgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfTsKCiAgQWRzTWFuYWdlci5wcm90b3R5cGUuZ2V0Q3VlUG9pbnRzID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIFswXTsKICB9OwoKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5nZXRDdXJyZW50QWQgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gY3VycmVudEFkOwogIH07CgogIEFkc01hbmFnZXIucHJvdG90eXBlLmdldEN1cnJlbnRBZEN1ZVBvaW50cyA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBbXTsKICB9OwoKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5nZXRSZW1haW5pbmdUaW1lID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIDA7CiAgfTsKCiAgQWRzTWFuYWdlci5wcm90b3R5cGUuZ2V0Vm9sdW1lID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIF90aGlzLnZvbHVtZTsKICB9OwoKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5pbml0ID0gbm9vcEZ1bmM7CgogIEFkc01hbmFnZXIucHJvdG90eXBlLmlzQ3VzdG9tQ2xpY2tUcmFja2luZ1VzZWQgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfTsKCiAgQWRzTWFuYWdlci5wcm90b3R5cGUuaXNDdXN0b21QbGF5YmFja1VzZWQgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfTsKCiAgQWRzTWFuYWdlci5wcm90b3R5cGUucGF1c2UgPSBub29wRnVuYzsKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5yZXF1ZXN0TmV4dEFkQnJlYWsgPSBub29wRnVuYzsKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5yZXNpemUgPSBub29wRnVuYzsKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5yZXN1bWUgPSBub29wRnVuYzsKCiAgQWRzTWFuYWdlci5wcm90b3R5cGUuc2V0Vm9sdW1lID0gZnVuY3Rpb24gKHYpIHsKICAgIF90aGlzLnZvbHVtZSA9IHY7CiAgfTsKCiAgQWRzTWFuYWdlci5wcm90b3R5cGUuc2tpcCA9IG5vb3BGdW5jOwoKICBBZHNNYW5hZ2VyLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uICgpIHsKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheAogICAgZm9yICh2YXIgX2kxNCA9IDAsIF9hcnIgPSBbQWRFdmVudC5UeXBlLkxPQURFRCwgQWRFdmVudC5UeXBlLlNUQVJURUQsIEFkRXZlbnQuVHlwZS5BRF9CVUZGRVJJTkcsIEFkRXZlbnQuVHlwZS5GSVJTVF9RVUFSVElMRSwgQWRFdmVudC5UeXBlLk1JRFBPSU5ULCBBZEV2ZW50LlR5cGUuVEhJUkRfUVVBUlRJTEUsIEFkRXZlbnQuVHlwZS5DT01QTEVURSwgQWRFdmVudC5UeXBlLkFMTF9BRFNfQ09NUExFVEVEXTsgX2kxNCA8IF9hcnIubGVuZ3RoOyBfaTE0KyspIHsKICAgICAgdmFyIF90eXBlID0gX2FycltfaTE0XTsKCiAgICAgIHRyeSB7CiAgICAgICAgX3RoaXMuX2Rpc3BhdGNoKG5ldyBpbWEuQWRFdmVudChfdHlwZSkpOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgICAgICBjb25zb2xlLmVycm9yKGUpOwogICAgICB9CiAgICB9CiAgfTsKCiAgQWRzTWFuYWdlci5wcm90b3R5cGUuc3RvcCA9IG5vb3BGdW5jOwogIEFkc01hbmFnZXIucHJvdG90eXBlLnVwZGF0ZUFkc1JlbmRlcmluZ1NldHRpbmdzID0gbm9vcEZ1bmM7CiAgLyogZXNsaW50LWVuYWJsZSBuby11c2UtYmVmb3JlLWRlZmluZSAqLwoKICB2YXIgbWFuYWdlciA9IE9iamVjdC5jcmVhdGUoQWRzTWFuYWdlcik7CgogIHZhciBBZHNNYW5hZ2VyTG9hZGVkRXZlbnQgPSBmdW5jdGlvbiBBZHNNYW5hZ2VyTG9hZGVkRXZlbnQoKSB7fTsKCiAgQWRzTWFuYWdlckxvYWRlZEV2ZW50LnByb3RvdHlwZSA9IHsKICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiBjb25zdHJ1Y3Rvcih0eXBlKSB7CiAgICAgIF90aGlzLnR5cGUgPSB0eXBlOwogICAgfSwKICAgIGdldEFkc01hbmFnZXI6IGZ1bmN0aW9uIGdldEFkc01hbmFnZXIoKSB7CiAgICAgIHJldHVybiBtYW5hZ2VyOwogICAgfSwKICAgIGdldFVzZXJSZXF1ZXN0Q29udGV4dDogbm9vcEZ1bmMKICB9OwogIEFkc01hbmFnZXJMb2FkZWRFdmVudC5UeXBlID0gewogICAgQURTX01BTkFHRVJfTE9BREVEOiAnYWRzTWFuYWdlckxvYWRlZCcKICB9OwogIHZhciBBZHNMb2FkZXIgPSBFdmVudEhhbmRsZXI7CiAgQWRzTG9hZGVyLnByb3RvdHlwZS5zZXR0aW5ncyA9IG5ldyBJbWFTZGtTZXR0aW5ncygpOwogIEFkc0xvYWRlci5wcm90b3R5cGUuY29udGVudENvbXBsZXRlID0gbm9vcEZ1bmM7CiAgQWRzTG9hZGVyLnByb3RvdHlwZS5kZXN0cm95ID0gbm9vcEZ1bmM7CgogIEFkc0xvYWRlci5wcm90b3R5cGUuZ2V0U2V0dGluZ3MgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gdGhpcy5zZXR0aW5nczsKICB9OwoKICBBZHNMb2FkZXIucHJvdG90eXBlLmdldFZlcnNpb24gPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gVkVSU0lPTjsKICB9OwoKICBBZHNMb2FkZXIucHJvdG90eXBlLnJlcXVlc3RBZHMgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBpZiAoIW1hbmFnZXJMb2FkZWQpIHsKICAgICAgbWFuYWdlckxvYWRlZCA9IHRydWU7CiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIEFEU19NQU5BR0VSX0xPQURFRCA9IEFkc01hbmFnZXJMb2FkZWRFdmVudC5UeXBlLkFEU19NQU5BR0VSX0xPQURFRDsKCiAgICAgICAgX3RoaXMyLl9kaXNwYXRjaChuZXcgaW1hLkFkc01hbmFnZXJMb2FkZWRFdmVudChBRFNfTUFOQUdFUl9MT0FERUQpKTsKICAgICAgfSk7CiAgICB9CiAgfTsKCiAgdmFyIEFkc1JlbmRlcmluZ1NldHRpbmdzID0gbm9vcEZ1bmM7CgogIHZhciBBZHNSZXF1ZXN0ID0gZnVuY3Rpb24gQWRzUmVxdWVzdCgpIHt9OwoKICBBZHNSZXF1ZXN0LnByb3RvdHlwZSA9IHsKICAgIHNldEFkV2lsbEF1dG9QbGF5OiBub29wRnVuYywKICAgIHNldEFkV2lsbFBsYXlNdXRlZDogbm9vcEZ1bmMsCiAgICBzZXRDb250aW51b3VzUGxheWJhY2s6IG5vb3BGdW5jCiAgfTsKCiAgdmFyIEFkUG9kSW5mbyA9IGZ1bmN0aW9uIEFkUG9kSW5mbygpIHt9OwoKICBBZFBvZEluZm8ucHJvdG90eXBlID0gewogICAgZ2V0QWRQb3NpdGlvbjogZnVuY3Rpb24gZ2V0QWRQb3NpdGlvbigpIHsKICAgICAgcmV0dXJuIDE7CiAgICB9LAogICAgZ2V0SXNCdW1wZXI6IGZ1bmN0aW9uIGdldElzQnVtcGVyKCkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgZ2V0TWF4RHVyYXRpb246IGZ1bmN0aW9uIGdldE1heER1cmF0aW9uKCkgewogICAgICByZXR1cm4gLTE7CiAgICB9LAogICAgZ2V0UG9kSW5kZXg6IGZ1bmN0aW9uIGdldFBvZEluZGV4KCkgewogICAgICByZXR1cm4gMTsKICAgIH0sCiAgICBnZXRUaW1lT2Zmc2V0OiBmdW5jdGlvbiBnZXRUaW1lT2Zmc2V0KCkgewogICAgICByZXR1cm4gMDsKICAgIH0sCiAgICBnZXRUb3RhbEFkczogZnVuY3Rpb24gZ2V0VG90YWxBZHMoKSB7CiAgICAgIHJldHVybiAxOwogICAgfQogIH07CgogIHZhciBBZCA9IGZ1bmN0aW9uIEFkKCkge307CgogIEFkLnByb3RvdHlwZSA9IHsKICAgIHBpOiBuZXcgQWRQb2RJbmZvKCksCiAgICBnZXRBZElkOiBmdW5jdGlvbiBnZXRBZElkKCkgewogICAgICByZXR1cm4gJyc7CiAgICB9LAogICAgZ2V0QWRQb2RJbmZvOiBmdW5jdGlvbiBnZXRBZFBvZEluZm8oKSB7CiAgICAgIHJldHVybiBfdGhpcy5waTsKICAgIH0sCiAgICBnZXRBZFN5c3RlbTogZnVuY3Rpb24gZ2V0QWRTeXN0ZW0oKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0sCiAgICBnZXRBZHZlcnRpc2VyTmFtZTogZnVuY3Rpb24gZ2V0QWR2ZXJ0aXNlck5hbWUoKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0sCiAgICBnZXRBcGlGcmFtZXdvcms6IGZ1bmN0aW9uIGdldEFwaUZyYW1ld29yaygpIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgZ2V0Q29tcGFuaW9uQWRzOiBmdW5jdGlvbiBnZXRDb21wYW5pb25BZHMoKSB7CiAgICAgIHJldHVybiBbXTsKICAgIH0sCiAgICBnZXRDb250ZW50VHlwZTogZnVuY3Rpb24gZ2V0Q29udGVudFR5cGUoKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0sCiAgICBnZXRDcmVhdGl2ZUFkSWQ6IGZ1bmN0aW9uIGdldENyZWF0aXZlQWRJZCgpIHsKICAgICAgcmV0dXJuICcnOwogICAgfSwKICAgIGdldERlYWxJZDogZnVuY3Rpb24gZ2V0RGVhbElkKCkgewogICAgICByZXR1cm4gJyc7CiAgICB9LAogICAgZ2V0RGVzY3JpcHRpb246IGZ1bmN0aW9uIGdldERlc2NyaXB0aW9uKCkgewogICAgICByZXR1cm4gJyc7CiAgICB9LAogICAgZ2V0RHVyYXRpb246IGZ1bmN0aW9uIGdldER1cmF0aW9uKCkgewogICAgICByZXR1cm4gOC41OwogICAgfSwKICAgIGdldEhlaWdodDogZnVuY3Rpb24gZ2V0SGVpZ2h0KCkgewogICAgICByZXR1cm4gMDsKICAgIH0sCiAgICBnZXRNZWRpYVVybDogZnVuY3Rpb24gZ2V0TWVkaWFVcmwoKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIGdldE1pblN1Z2dlc3RlZER1cmF0aW9uOiBmdW5jdGlvbiBnZXRNaW5TdWdnZXN0ZWREdXJhdGlvbigpIHsKICAgICAgcmV0dXJuIC0yOwogICAgfSwKICAgIGdldFNraXBUaW1lT2Zmc2V0OiBmdW5jdGlvbiBnZXRTa2lwVGltZU9mZnNldCgpIHsKICAgICAgcmV0dXJuIC0xOwogICAgfSwKICAgIGdldFN1cnZleVVybDogZnVuY3Rpb24gZ2V0U3VydmV5VXJsKCkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgICBnZXRUaXRsZTogZnVuY3Rpb24gZ2V0VGl0bGUoKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0sCiAgICBnZXRUcmFmZmlja2luZ1BhcmFtZXRlcnNTdHJpbmc6IGZ1bmN0aW9uIGdldFRyYWZmaWNraW5nUGFyYW1ldGVyc1N0cmluZygpIHsKICAgICAgcmV0dXJuICcnOwogICAgfSwKICAgIGdldFVpRWxlbWVudHM6IGZ1bmN0aW9uIGdldFVpRWxlbWVudHMoKSB7CiAgICAgIHJldHVybiBbJyddOwogICAgfSwKICAgIGdldFVuaXZlcnNhbEFkSWRSZWdpc3RyeTogZnVuY3Rpb24gZ2V0VW5pdmVyc2FsQWRJZFJlZ2lzdHJ5KCkgewogICAgICByZXR1cm4gJ3Vua25vd24nOwogICAgfSwKICAgIGdldFVuaXZlcnNhbEFkSWRzOiBmdW5jdGlvbiBnZXRVbml2ZXJzYWxBZElkcygpIHsKICAgICAgcmV0dXJuIFsnJ107CiAgICB9LAogICAgZ2V0VW5pdmVyc2FsQWRJZFZhbHVlOiBmdW5jdGlvbiBnZXRVbml2ZXJzYWxBZElkVmFsdWUoKSB7CiAgICAgIHJldHVybiAndW5rbm93bic7CiAgICB9LAogICAgZ2V0VmFzdE1lZGlhQml0cmF0ZTogZnVuY3Rpb24gZ2V0VmFzdE1lZGlhQml0cmF0ZSgpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9LAogICAgZ2V0VmFzdE1lZGlhSGVpZ2h0OiBmdW5jdGlvbiBnZXRWYXN0TWVkaWFIZWlnaHQoKSB7CiAgICAgIHJldHVybiAwOwogICAgfSwKICAgIGdldFZhc3RNZWRpYVdpZHRoOiBmdW5jdGlvbiBnZXRWYXN0TWVkaWFXaWR0aCgpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9LAogICAgZ2V0V2lkdGg6IGZ1bmN0aW9uIGdldFdpZHRoKCkgewogICAgICByZXR1cm4gMDsKICAgIH0sCiAgICBnZXRXcmFwcGVyQWRJZHM6IGZ1bmN0aW9uIGdldFdyYXBwZXJBZElkcygpIHsKICAgICAgcmV0dXJuIFsnJ107CiAgICB9LAogICAgZ2V0V3JhcHBlckFkU3lzdGVtczogZnVuY3Rpb24gZ2V0V3JhcHBlckFkU3lzdGVtcygpIHsKICAgICAgcmV0dXJuIFsnJ107CiAgICB9LAogICAgZ2V0V3JhcHBlckNyZWF0aXZlSWRzOiBmdW5jdGlvbiBnZXRXcmFwcGVyQ3JlYXRpdmVJZHMoKSB7CiAgICAgIHJldHVybiBbJyddOwogICAgfSwKICAgIGlzTGluZWFyOiBmdW5jdGlvbiBpc0xpbmVhcigpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfTsKCiAgdmFyIENvbXBhbmlvbkFkID0gZnVuY3Rpb24gQ29tcGFuaW9uQWQoKSB7fTsKCiAgQ29tcGFuaW9uQWQucHJvdG90eXBlID0gewogICAgZ2V0QWRTbG90SWQ6IGZ1bmN0aW9uIGdldEFkU2xvdElkKCkgewogICAgICByZXR1cm4gJyc7CiAgICB9LAogICAgZ2V0Q29udGVudDogZnVuY3Rpb24gZ2V0Q29udGVudCgpIHsKICAgICAgcmV0dXJuICcnOwogICAgfSwKICAgIGdldENvbnRlbnRUeXBlOiBmdW5jdGlvbiBnZXRDb250ZW50VHlwZSgpIHsKICAgICAgcmV0dXJuICcnOwogICAgfSwKICAgIGdldEhlaWdodDogZnVuY3Rpb24gZ2V0SGVpZ2h0KCkgewogICAgICByZXR1cm4gMTsKICAgIH0sCiAgICBnZXRXaWR0aDogZnVuY3Rpb24gZ2V0V2lkdGgoKSB7CiAgICAgIHJldHVybiAxOwogICAgfQogIH07CgogIHZhciBBZEVycm9yID0gZnVuY3Rpb24gQWRFcnJvcigpIHt9OwoKICBBZEVycm9yLnByb3RvdHlwZSA9IHsKICAgIGdldEVycm9yQ29kZTogZnVuY3Rpb24gZ2V0RXJyb3JDb2RlKCkgewogICAgICByZXR1cm4gMDsKICAgIH0sCiAgICBnZXRJbm5lckVycm9yOiBub29wRnVuYywKICAgIGdldE1lc3NhZ2U6IGZ1bmN0aW9uIGdldE1lc3NhZ2UoKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0sCiAgICBnZXRUeXBlOiBmdW5jdGlvbiBnZXRUeXBlKCkgewogICAgICByZXR1cm4gMTsKICAgIH0sCiAgICBnZXRWYXN0RXJyb3JDb2RlOiBmdW5jdGlvbiBnZXRWYXN0RXJyb3JDb2RlKCkgewogICAgICByZXR1cm4gMDsKICAgIH0sCiAgICB0b1N0cmluZzogZnVuY3Rpb24gdG9TdHJpbmcoKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0KICB9OwogIEFkRXJyb3IuRXJyb3JDb2RlID0ge307CiAgQWRFcnJvci5UeXBlID0ge307CgogIHZhciBpc0VuZ2FkZ2V0ID0gZnVuY3Rpb24gaXNFbmdhZGdldCgpIHsKICAgIHRyeSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheAogICAgICBmb3IgKHZhciBfaTE1ID0gMCwgX09iamVjdCR2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHdpbmRvdy52aWRpYmxlLl9nZXRDb250ZXh0cygpKTsgX2kxNSA8IF9PYmplY3QkdmFsdWVzLmxlbmd0aDsgX2kxNSsrKSB7CiAgICAgICAgdmFyIF9jdHgkZ2V0UGxheWVyLCBfY3R4JGdldFBsYXllciRkaXY7CgogICAgICAgIHZhciBjdHggPSBfT2JqZWN0JHZhbHVlc1tfaTE1XTsKCiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtcHJvcGVydGllcwogICAgICAgIGlmICgoX2N0eCRnZXRQbGF5ZXIgPSBjdHguZ2V0UGxheWVyKCkpICE9PSBudWxsICYmIF9jdHgkZ2V0UGxheWVyICE9PSB2b2lkIDAgJiYgKF9jdHgkZ2V0UGxheWVyJGRpdiA9IF9jdHgkZ2V0UGxheWVyLmRpdikgIT09IG51bGwgJiYgX2N0eCRnZXRQbGF5ZXIkZGl2ICE9PSB2b2lkIDAgJiYgX2N0eCRnZXRQbGF5ZXIkZGl2LmlubmVySFRNTC5pbmNsdWRlcygnd3d3LmVuZ2FkZ2V0LmNvbScpKSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0gY2F0Y2ggKGUpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHkKCgogICAgcmV0dXJuIGZhbHNlOwogIH07CgogIHZhciBjdXJyZW50QWQgPSBpc0VuZ2FkZ2V0KCkgPyB1bmRlZmluZWQgOiBuZXcgQWQoKTsKCiAgdmFyIEFkRXZlbnQgPSBmdW5jdGlvbiBBZEV2ZW50KCkge307CgogIEFkRXZlbnQucHJvdG90eXBlID0gewogICAgY29uc3RydWN0b3I6IGZ1bmN0aW9uIGNvbnN0cnVjdG9yKHR5cGUpIHsKICAgICAgX3RoaXMudHlwZSA9IHR5cGU7CiAgICB9LAogICAgZ2V0QWQ6IGZ1bmN0aW9uIGdldEFkKCkgewogICAgICByZXR1cm4gY3VycmVudEFkOwogICAgfSwKICAgIGdldEFkRGF0YTogZnVuY3Rpb24gZ2V0QWREYXRhKCkge30KICB9OwogIEFkRXZlbnQuVHlwZSA9IHsKICAgIEFEX0JSRUFLX1JFQURZOiAnYWRCcmVha1JlYWR5JywKICAgIEFEX0JVRkZFUklORzogJ2FkQnVmZmVyaW5nJywKICAgIEFEX0NBTl9QTEFZOiAnYWRDYW5QbGF5JywKICAgIEFEX01FVEFEQVRBOiAnYWRNZXRhZGF0YScsCiAgICBBRF9QUk9HUkVTUzogJ2FkUHJvZ3Jlc3MnLAogICAgQUxMX0FEU19DT01QTEVURUQ6ICdhbGxBZHNDb21wbGV0ZWQnLAogICAgQ0xJQ0s6ICdjbGljaycsCiAgICBDT01QTEVURTogJ2NvbXBsZXRlJywKICAgIENPTlRFTlRfUEFVU0VfUkVRVUVTVEVEOiAnY29udGVudFBhdXNlUmVxdWVzdGVkJywKICAgIENPTlRFTlRfUkVTVU1FX1JFUVVFU1RFRDogJ2NvbnRlbnRSZXN1bWVSZXF1ZXN0ZWQnLAogICAgRFVSQVRJT05fQ0hBTkdFOiAnZHVyYXRpb25DaGFuZ2UnLAogICAgRVhQQU5ERURfQ0hBTkdFRDogJ2V4cGFuZGVkQ2hhbmdlZCcsCiAgICBGSVJTVF9RVUFSVElMRTogJ2ZpcnN0UXVhcnRpbGUnLAogICAgSU1QUkVTU0lPTjogJ2ltcHJlc3Npb24nLAogICAgSU5URVJBQ1RJT046ICdpbnRlcmFjdGlvbicsCiAgICBMSU5FQVJfQ0hBTkdFOiAnbGluZWFyQ2hhbmdlJywKICAgIExJTkVBUl9DSEFOR0VEOiAnbGluZWFyQ2hhbmdlZCcsCiAgICBMT0FERUQ6ICdsb2FkZWQnLAogICAgTE9HOiAnbG9nJywKICAgIE1JRFBPSU5UOiAnbWlkcG9pbnQnLAogICAgUEFVU0VEOiAncGF1c2UnLAogICAgUkVTVU1FRDogJ3Jlc3VtZScsCiAgICBTS0lQUEFCTEVfU1RBVEVfQ0hBTkdFRDogJ3NraXBwYWJsZVN0YXRlQ2hhbmdlZCcsCiAgICBTS0lQUEVEOiAnc2tpcCcsCiAgICBTVEFSVEVEOiAnc3RhcnQnLAogICAgVEhJUkRfUVVBUlRJTEU6ICd0aGlyZFF1YXJ0aWxlJywKICAgIFVTRVJfQ0xPU0U6ICd1c2VyQ2xvc2UnLAogICAgVklERU9fQ0xJQ0tFRDogJ3ZpZGVvQ2xpY2tlZCcsCiAgICBWSURFT19JQ09OX0NMSUNLRUQ6ICd2aWRlb0ljb25DbGlja2VkJywKICAgIFZJRVdBQkxFX0lNUFJFU1NJT046ICd2aWV3YWJsZV9pbXByZXNzaW9uJywKICAgIFZPTFVNRV9DSEFOR0VEOiAndm9sdW1lQ2hhbmdlJywKICAgIFZPTFVNRV9NVVRFRDogJ211dGUnCiAgfTsKCiAgdmFyIEFkRXJyb3JFdmVudCA9IGZ1bmN0aW9uIEFkRXJyb3JFdmVudCgpIHt9OwoKICBBZEVycm9yRXZlbnQucHJvdG90eXBlID0gewogICAgZ2V0RXJyb3I6IG5vb3BGdW5jLAogICAgZ2V0VXNlclJlcXVlc3RDb250ZXh0OiBmdW5jdGlvbiBnZXRVc2VyUmVxdWVzdENvbnRleHQoKSB7fQogIH07CiAgQWRFcnJvckV2ZW50LlR5cGUgPSB7CiAgICBBRF9FUlJPUjogJ2FkRXJyb3InCiAgfTsKCiAgdmFyIEN1c3RvbUNvbnRlbnRMb2FkZWRFdmVudCA9IGZ1bmN0aW9uIEN1c3RvbUNvbnRlbnRMb2FkZWRFdmVudCgpIHt9OwoKICBDdXN0b21Db250ZW50TG9hZGVkRXZlbnQuVHlwZSA9IHsKICAgIENVU1RPTV9DT05URU5UX0xPQURFRDogJ2RlcHJlY2F0ZWQtZXZlbnQnCiAgfTsKCiAgdmFyIENvbXBhbmlvbkFkU2VsZWN0aW9uU2V0dGluZ3MgPSBmdW5jdGlvbiBDb21wYW5pb25BZFNlbGVjdGlvblNldHRpbmdzKCkge307CgogIENvbXBhbmlvbkFkU2VsZWN0aW9uU2V0dGluZ3MuQ3JlYXRpdmVUeXBlID0gewogICAgQUxMOiAnQWxsJywKICAgIEZMQVNIOiAnRmxhc2gnLAogICAgSU1BR0U6ICdJbWFnZScKICB9OwogIENvbXBhbmlvbkFkU2VsZWN0aW9uU2V0dGluZ3MuUmVzb3VyY2VUeXBlID0gewogICAgQUxMOiAnQWxsJywKICAgIEhUTUw6ICdIdG1sJywKICAgIElGUkFNRTogJ0lGcmFtZScsCiAgICBTVEFUSUM6ICdTdGF0aWMnCiAgfTsKICBDb21wYW5pb25BZFNlbGVjdGlvblNldHRpbmdzLlNpemVDcml0ZXJpYSA9IHsKICAgIElHTk9SRTogJ0lnbm9yZVNpemUnLAogICAgU0VMRUNUX0VYQUNUX01BVENIOiAnU2VsZWN0RXhhY3RNYXRjaCcsCiAgICBTRUxFQ1RfTkVBUl9NQVRDSDogJ1NlbGVjdE5lYXJNYXRjaCcKICB9OwoKICB2YXIgQWRDdWVQb2ludHMgPSBmdW5jdGlvbiBBZEN1ZVBvaW50cygpIHt9OwoKICBBZEN1ZVBvaW50cy5wcm90b3R5cGUgPSB7CiAgICBnZXRDdWVQb2ludHM6IGZ1bmN0aW9uIGdldEN1ZVBvaW50cygpIHsKICAgICAgcmV0dXJuIFtdOwogICAgfSwKICAgIGdldEFkSWRSZWdpc3RyeTogZnVuY3Rpb24gZ2V0QWRJZFJlZ2lzdHJ5KCkgewogICAgICByZXR1cm4gJyc7CiAgICB9LAogICAgZ2V0QWRJc1ZhbHVlOiBmdW5jdGlvbiBnZXRBZElzVmFsdWUoKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0KICB9OwogIHZhciBBZFByb2dyZXNzRGF0YSA9IG5vb3BGdW5jOwoKICB2YXIgVW5pdmVyc2FsQWRJZEluZm8gPSBmdW5jdGlvbiBVbml2ZXJzYWxBZElkSW5mbygpIHt9OwoKICBPYmplY3QuYXNzaWduKGltYSwgewogICAgQWRDdWVQb2ludHM6IEFkQ3VlUG9pbnRzLAogICAgQWREaXNwbGF5Q29udGFpbmVyOiBBZERpc3BsYXlDb250YWluZXIsCiAgICBBZEVycm9yOiBBZEVycm9yLAogICAgQWRFcnJvckV2ZW50OiBBZEVycm9yRXZlbnQsCiAgICBBZEV2ZW50OiBBZEV2ZW50LAogICAgQWRQb2RJbmZvOiBBZFBvZEluZm8sCiAgICBBZFByb2dyZXNzRGF0YTogQWRQcm9ncmVzc0RhdGEsCiAgICBBZHNMb2FkZXI6IEFkc0xvYWRlciwKICAgIEFkc01hbmFnZXI6IG1hbmFnZXIsCiAgICBBZHNNYW5hZ2VyTG9hZGVkRXZlbnQ6IEFkc01hbmFnZXJMb2FkZWRFdmVudCwKICAgIEFkc1JlbmRlcmluZ1NldHRpbmdzOiBBZHNSZW5kZXJpbmdTZXR0aW5ncywKICAgIEFkc1JlcXVlc3Q6IEFkc1JlcXVlc3QsCiAgICBDb21wYW5pb25BZDogQ29tcGFuaW9uQWQsCiAgICBDb21wYW5pb25BZFNlbGVjdGlvblNldHRpbmdzOiBDb21wYW5pb25BZFNlbGVjdGlvblNldHRpbmdzLAogICAgQ3VzdG9tQ29udGVudExvYWRlZEV2ZW50OiBDdXN0b21Db250ZW50TG9hZGVkRXZlbnQsCiAgICBncHRQcm94eUluc3RhbmNlOiB7fSwKICAgIEltYVNka1NldHRpbmdzOiBJbWFTZGtTZXR0aW5ncywKICAgIE9taWRBY2Nlc3NNb2RlOiB7CiAgICAgIERPTUFJTjogJ2RvbWFpbicsCiAgICAgIEZVTEw6ICdmdWxsJywKICAgICAgTElNSVRFRDogJ2xpbWl0ZWQnCiAgICB9LAogICAgc2V0dGluZ3M6IG5ldyBJbWFTZGtTZXR0aW5ncygpLAogICAgVWlFbGVtZW50czogewogICAgICBBRF9BVFRSSUJVVElPTjogJ2FkQXR0cmlidXRpb24nLAogICAgICBDT1VOVERPV046ICdjb3VudGRvd24nCiAgICB9LAogICAgVW5pdmVyc2FsQWRJZEluZm86IFVuaXZlcnNhbEFkSWRJbmZvLAogICAgVkVSU0lPTjogVkVSU0lPTiwKICAgIFZpZXdNb2RlOiB7CiAgICAgIEZVTExTQ1JFRU46ICdmdWxsc2NyZWVuJywKICAgICAgTk9STUFMOiAnbm9ybWFsJwogICAgfQogIH0pOwoKICBpZiAoIXdpbmRvdy5nb29nbGUpIHsKICAgIHdpbmRvdy5nb29nbGUgPSB7fTsKICB9CgogIHdpbmRvdy5nb29nbGUuaW1hID0gaW1hOwogIGhpdChzb3VyY2UpOwp9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICB2YXIgX2xvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CgogICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbXBhdC9jb21wYXQKCiAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IC8vIGRlbGV0ZSBhbGwgZG9tYWlucyBmcm9tIHJ1bGVUZXh0IGFuZCBsZWF2ZSBqdXN0IHJ1bGUgcGFydAoKCiAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7IC8vIHByZXBhcmUgYXBwbGllZCBzY3JpcHRsZXQgcnVsZSBmb3Igc3BlY2lmaWMgZG9tYWluCgogICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICB9IC8vIFVzZWQgdG8gY2hlY2sgaWYgc2NyaXB0bGV0IHVzZXMgJ2hpdCcgZnVuY3Rpb24gZm9yIGxvZ2dpbmcKCgogICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgIGlmIChtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIF9sb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICB9CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgIGlmICh0cmFjZSkgewogICAgICB0cmFjZSgpOwogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgfSBjYXRjaCAoZSkgey8vIHRyeSBjYXRjaCBmb3IgRWRnZSAxNQogICAgLy8gSW4gYWNjb3JkaW5nIHRvIHRoaXMgaXNzdWUgaHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS9wbGF0Zm9ybS9pc3N1ZXMvMTQ0OTUyMjAvCiAgICAvLyBjb25zb2xlLmxvZyB0aHJvd3MgYW4gZXJyb3IKICB9IC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciB1bml0LXRlc3RzIG9ubHkhCgoKICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogIH0KfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIEdvb2dsZUltYTMuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Imdvb2dsZS1pbWEzIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "googlesyndication-adsbygoogle",
        "aliases": [
            "ubo-googlesyndication_adsbygoogle.js",
            "googlesyndication_adsbygoogle.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIEdvb2dsZVN5bmRpY2F0aW9uQWRzQnlHb29nbGUoc291cmNlKSB7CiAgd2luZG93LmFkc2J5Z29vZ2xlID0gewogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0FkZ3VhcmRUZWFtL1NjcmlwdGxldHMvaXNzdWVzLzExMwogICAgLy8gbGVuZ3RoOiAwLAogICAgbG9hZGVkOiB0cnVlLAogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0FkZ3VhcmRUZWFtL1NjcmlwdGxldHMvaXNzdWVzLzE4NAogICAgcHVzaDogZnVuY3Rpb24gcHVzaChhcmcpIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLmxlbmd0aCA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICB0aGlzLmxlbmd0aCA9IDA7CiAgICAgICAgdGhpcy5sZW5ndGggKz0gMTsKICAgICAgfQoKICAgICAgaWYgKGFyZyAhPT0gbnVsbCAmJiBhcmcgaW5zdGFuY2VvZiBPYmplY3QgJiYgYXJnLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdPYmplY3QnKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4CiAgICAgICAgZm9yICh2YXIgX2k5ID0gMCwgX09iamVjdCRrZXlzID0gT2JqZWN0LmtleXMoYXJnKTsgX2k5IDwgX09iamVjdCRrZXlzLmxlbmd0aDsgX2k5KyspIHsKICAgICAgICAgIHZhciBrZXkgPSBfT2JqZWN0JGtleXNbX2k5XTsKCiAgICAgICAgICBpZiAodHlwZW9mIGFyZ1trZXldID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgYXJnW2tleV0uY2FsbCgpOwogICAgICAgICAgICB9IGNhdGNoIChfdW51c2VkKSB7CiAgICAgICAgICAgICAgLyogZW1wdHkgKi8KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH07CiAgdmFyIGFkRWxlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWRzYnlnb29nbGUnKTsKICB2YXIgY3NzID0gJ2hlaWdodDoxcHghaW1wb3J0YW50O21heC1oZWlnaHQ6MXB4IWltcG9ydGFudDttYXgtd2lkdGg6MXB4IWltcG9ydGFudDt3aWR0aDoxcHghaW1wb3J0YW50Oyc7CiAgdmFyIHN0YXR1c0F0dHJOYW1lID0gJ2RhdGEtYWRzYnlnb29nbGUtc3RhdHVzJzsKICB2YXIgQVNXSUZUX0lGUkFNRV9NQVJLRVIgPSAnYXN3aWZ0Xyc7CiAgdmFyIEdPT0dMRV9BRFNfSUZSQU1FX01BUktFUiA9ICdnb29nbGVfYWRzX2lmcmFtZV8nOwogIHZhciBleGVjdXRlZCA9IGZhbHNlOwoKICBmb3IgKHZhciBfaTEwID0gMDsgX2kxMCA8IGFkRWxlbXMubGVuZ3RoOyBfaTEwICs9IDEpIHsKICAgIHZhciBhZEVsZW1DaGlsZE5vZGVzID0gYWRFbGVtc1tfaTEwXS5jaGlsZE5vZGVzOwogICAgdmFyIGNoaWxkTm9kZXNRdWFudGl0eSA9IGFkRWxlbUNoaWxkTm9kZXMubGVuZ3RoOyAvLyBjaGlsZE5vZGVzIG9mIC5hZHNieWdvb2dsZSBjYW4gYmUgZGVmaW5lZCBpZiBzY3JpcHRsZXQgd2FzIGV4ZWN1dGVkIGJlZm9yZQogICAgLy8gc28gd2Ugc2hvdWxkIGNoZWNrIHRoYXQgY2hpbGROb2RlcyBhcmUgZXhhY3RseSBkZWZpbmVkIGJ5IHVzCiAgICAvLyBUT0RPOiByZW1ha2UgYWZ0ZXIgc2NyaXB0bGV0cyBjb250ZXh0IGRldmVsb3BpbmcgaW4gMS4zCgogICAgdmFyIGFyZUlmcmFtZXNEZWZpbmVkID0gZmFsc2U7CgogICAgaWYgKGNoaWxkTm9kZXNRdWFudGl0eSA+IDApIHsKICAgICAgLy8gaXQgc2hvdWxkIGJlIG9ubHkgMiBjaGlsZCBpZnJhbWVzIGlmIHNjcmlwdGxldCB3YXMgZXhlY3V0ZWQKICAgICAgYXJlSWZyYW1lc0RlZmluZWQgPSBjaGlsZE5vZGVzUXVhbnRpdHkgPT09IDIgLy8gdGhlIGZpcnN0IG9mIGNoaWxkIG5vZGVzIHNob3VsZCBiZSBhc3dpZnQgaWZyYW1lCiAgICAgICYmIGFkRWxlbUNoaWxkTm9kZXNbMF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lmcmFtZScgJiYgYWRFbGVtQ2hpbGROb2Rlc1swXS5pZC5pbmRleE9mKEFTV0lGVF9JRlJBTUVfTUFSS0VSKSA+IC0xIC8vIHRoZSBzZWNvbmQgb2YgY2hpbGQgbm9kZXMgc2hvdWxkIGJlIGdvb2dsZV9hZHMgaWZyYW1lCiAgICAgICYmIGFkRWxlbUNoaWxkTm9kZXNbMV0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lmcmFtZScgJiYgYWRFbGVtQ2hpbGROb2Rlc1sxXS5pZC5pbmRleE9mKEdPT0dMRV9BRFNfSUZSQU1FX01BUktFUikgPiAtMTsKICAgIH0KCiAgICBpZiAoIWFyZUlmcmFtZXNEZWZpbmVkKSB7CiAgICAgIC8vIGhlcmUgd2UgZG8gdGhlIGpvYiBpZiBzY3JpcHRsZXQgaGFzIG5vdCBiZWVuIGV4ZWN1dGVkIGVhcmxpZXIKICAgICAgYWRFbGVtc1tfaTEwXS5zZXRBdHRyaWJ1dGUoc3RhdHVzQXR0ck5hbWUsICdkb25lJyk7CgogICAgICB2YXIgYXN3aWZ0SWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7CiAgICAgIGFzd2lmdElmcmFtZS5pZCA9ICIiLmNvbmNhdChBU1dJRlRfSUZSQU1FX01BUktFUikuY29uY2F0KF9pMTApOwogICAgICBhc3dpZnRJZnJhbWUuc3R5bGUgPSBjc3M7CgogICAgICBhZEVsZW1zW19pMTBdLmFwcGVuZENoaWxkKGFzd2lmdElmcmFtZSk7CgogICAgICB2YXIgaW5uZXJBc3dpZnRJZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgICAgYXN3aWZ0SWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbm5lckFzd2lmdElmcmFtZSk7CiAgICAgIHZhciBnb29nbGVhZHNJZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgICAgZ29vZ2xlYWRzSWZyYW1lLmlkID0gIiIuY29uY2F0KEdPT0dMRV9BRFNfSUZSQU1FX01BUktFUikuY29uY2F0KF9pMTApOwogICAgICBnb29nbGVhZHNJZnJhbWUuc3R5bGUgPSBjc3M7CgogICAgICBhZEVsZW1zW19pMTBdLmFwcGVuZENoaWxkKGdvb2dsZWFkc0lmcmFtZSk7CgogICAgICB2YXIgaW5uZXJHb29nbGVhZHNJZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgICAgZ29vZ2xlYWRzSWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbm5lckdvb2dsZWFkc0lmcmFtZSk7CiAgICAgIGV4ZWN1dGVkID0gdHJ1ZTsKICAgIH0KICB9CgogIGlmIChleGVjdXRlZCkgewogICAgaGl0KHNvdXJjZSk7CiAgfQp9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICB2YXIgX2xvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CgogICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbXBhdC9jb21wYXQKCiAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IC8vIGRlbGV0ZSBhbGwgZG9tYWlucyBmcm9tIHJ1bGVUZXh0IGFuZCBsZWF2ZSBqdXN0IHJ1bGUgcGFydAoKCiAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7IC8vIHByZXBhcmUgYXBwbGllZCBzY3JpcHRsZXQgcnVsZSBmb3Igc3BlY2lmaWMgZG9tYWluCgogICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICB9IC8vIFVzZWQgdG8gY2hlY2sgaWYgc2NyaXB0bGV0IHVzZXMgJ2hpdCcgZnVuY3Rpb24gZm9yIGxvZ2dpbmcKCgogICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgIGlmIChtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIF9sb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICB9CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgIGlmICh0cmFjZSkgewogICAgICB0cmFjZSgpOwogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgfSBjYXRjaCAoZSkgey8vIHRyeSBjYXRjaCBmb3IgRWRnZSAxNQogICAgLy8gSW4gYWNjb3JkaW5nIHRvIHRoaXMgaXNzdWUgaHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS9wbGF0Zm9ybS9pc3N1ZXMvMTQ0OTUyMjAvCiAgICAvLyBjb25zb2xlLmxvZyB0aHJvd3MgYW4gZXJyb3IKICB9IC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciB1bml0LXRlc3RzIG9ubHkhCgoKICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogIH0KfTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBHb29nbGVTeW5kaWNhdGlvbkFkc0J5R29vZ2xlLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJnb29nbGVzeW5kaWNhdGlvbi1hZHNieWdvb2dsZSIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "googletagservices-gpt",
        "aliases": [
            "ubo-googletagservices_gpt.js",
            "googletagservices_gpt.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": ""
    },
    {
        "title": "matomo",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIE1hdG9tbyhzb3VyY2UpIHsKICB2YXIgVHJhY2tlciA9IGZ1bmN0aW9uIFRyYWNrZXIoKSB7fTsKCiAgVHJhY2tlci5wcm90b3R5cGUuc2V0RG9Ob3RUcmFjayA9IG5vb3BGdW5jOwogIFRyYWNrZXIucHJvdG90eXBlLnNldERvbWFpbnMgPSBub29wRnVuYzsKICBUcmFja2VyLnByb3RvdHlwZS5zZXRDdXN0b21EaW1lbnNpb24gPSBub29wRnVuYzsKICBUcmFja2VyLnByb3RvdHlwZS50cmFja1BhZ2VWaWV3ID0gbm9vcEZ1bmM7CgogIHZhciBBc3luY1RyYWNrZXIgPSBmdW5jdGlvbiBBc3luY1RyYWNrZXIoKSB7fTsKCiAgQXN5bmNUcmFja2VyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IG5vb3BGdW5jOwogIHZhciBtYXRvbW9XcmFwcGVyID0gewogICAgZ2V0VHJhY2tlcjogZnVuY3Rpb24gZ2V0VHJhY2tlcigpIHsKICAgICAgcmV0dXJuIG5ldyBUcmFja2VyKCk7CiAgICB9LAogICAgZ2V0QXN5bmNUcmFja2VyOiBmdW5jdGlvbiBnZXRBc3luY1RyYWNrZXIoKSB7CiAgICAgIHJldHVybiBuZXcgQXN5bmNUcmFja2VyKCk7CiAgICB9CiAgfTsKICB3aW5kb3cuUGl3aWsgPSBtYXRvbW9XcmFwcGVyOwogIGhpdChzb3VyY2UpOwp9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICB2YXIgX2xvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CgogICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbXBhdC9jb21wYXQKCiAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IC8vIGRlbGV0ZSBhbGwgZG9tYWlucyBmcm9tIHJ1bGVUZXh0IGFuZCBsZWF2ZSBqdXN0IHJ1bGUgcGFydAoKCiAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7IC8vIHByZXBhcmUgYXBwbGllZCBzY3JpcHRsZXQgcnVsZSBmb3Igc3BlY2lmaWMgZG9tYWluCgogICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICB9IC8vIFVzZWQgdG8gY2hlY2sgaWYgc2NyaXB0bGV0IHVzZXMgJ2hpdCcgZnVuY3Rpb24gZm9yIGxvZ2dpbmcKCgogICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgIGlmIChtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIF9sb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICB9CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgIGlmICh0cmFjZSkgewogICAgICB0cmFjZSgpOwogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgfSBjYXRjaCAoZSkgey8vIHRyeSBjYXRjaCBmb3IgRWRnZSAxNQogICAgLy8gSW4gYWNjb3JkaW5nIHRvIHRoaXMgaXNzdWUgaHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS9wbGF0Zm9ybS9pc3N1ZXMvMTQ0OTUyMjAvCiAgICAvLyBjb25zb2xlLmxvZyB0aHJvd3MgYW4gZXJyb3IKICB9IC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciB1bml0LXRlc3RzIG9ubHkhCgoKICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogIH0KfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIE1hdG9tby5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoibWF0b21vIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "metrika-yandex-tag",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG1ldHJpa2FZYW5kZXhUYWcoc291cmNlKSB7CiAgdmFyIGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9ucyA9IGZ1bmN0aW9uIGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9ucyhpZCwgcGFyYW0pIHsKICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTsKICAgIHZhciBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2s7CiAgICB2YXIgY3R4ID0gb3B0aW9ucy5jdHg7CgogICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgewogICAgICBjYWxsYmFjayA9IGN0eCAhPT0gdW5kZWZpbmVkID8gY2FsbGJhY2suYmluZChjdHgpIDogY2FsbGJhY2s7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBjYWxsYmFjaygpOwogICAgICB9KTsKICAgIH0KICB9OwogIC8qKgogICAqIGh0dHBzOi8veWFuZGV4LnJ1L3N1cHBvcnQvbWV0cmljYS9vYmplY3RzL2FkZGZpbGVleHRlbnNpb24uaHRtbAogICAqLwoKCiAgdmFyIGFkZEZpbGVFeHRlbnNpb24gPSBub29wRnVuYzsKICAvKioKICAgKiBodHRwczovL3lhbmRleC5ydS9zdXBwb3J0L21ldHJpY2Evb2JqZWN0cy9leHRsaW5rLmh0bWwKICAgKi8KCiAgdmFyIGV4dExpbmsgPSBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnM7CiAgLyoqCiAgICogaHR0cHM6Ly95YW5kZXgucnUvc3VwcG9ydC9tZXRyaWNhL29iamVjdHMvZmlsZS5odG1sCiAgICovCgogIHZhciBmaWxlID0gYXN5bmNDYWxsYmFja0Zyb21PcHRpb25zOwogIC8qKgogICAqIGh0dHBzOi8veWFuZGV4LnJ1L3N1cHBvcnQvbWV0cmljYS9vYmplY3RzL2dldC1jbGllbnQtaWQuaHRtbAogICAqIEBwYXJhbSB7RnVuY3Rpb259IGNiCiAgICovCgogIHZhciBnZXRDbGllbnRJRCA9IGZ1bmN0aW9uIGdldENsaWVudElEKGlkLCBjYikgewogICAgaWYgKCFjYikgewogICAgICByZXR1cm47CiAgICB9CgogICAgc2V0VGltZW91dChjYihudWxsKSk7CiAgfTsKICAvKioKICAgKiBodHRwczovL3lhbmRleC5ydS9zdXBwb3J0L21ldHJpY2Evb2JqZWN0cy9oaXQuaHRtbAogICAqLwoKCiAgdmFyIGhpdEZ1bmMgPSBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnM7CiAgLyoqCiAgICogaHR0cHM6Ly95YW5kZXgucnUvc3VwcG9ydC9tZXRyaWNhL29iamVjdHMvbm90Ym91bmNlLmh0bWwKICAgKi8KCiAgdmFyIG5vdEJvdW5jZSA9IGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9uczsKICAvKioKICAgKiBodHRwczovL3lhbmRleC5ydS9zdXBwb3J0L21ldHJpY2Evb2JqZWN0cy9wYXJhbXMtbWV0aG9kLmh0bWwKICAgKi8KCiAgdmFyIHBhcmFtcyA9IG5vb3BGdW5jOwogIC8qKgogICAqIGh0dHBzOi8veWFuZGV4LnJ1L3N1cHBvcnQvbWV0cmljYS9vYmplY3RzL3JlYWNoZ29hbC5odG1sCiAgICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldAogICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMKICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjawogICAqIEBwYXJhbSB7YW55fSBjdHgKICAgKi8KCiAgdmFyIHJlYWNoR29hbCA9IGZ1bmN0aW9uIHJlYWNoR29hbChpZCwgdGFyZ2V0LCBwYXJhbXMsIGNhbGxiYWNrLCBjdHgpIHsKICAgIGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9ucyhudWxsLCBudWxsLCB7CiAgICAgIGNhbGxiYWNrOiBjYWxsYmFjaywKICAgICAgY3R4OiBjdHgKICAgIH0pOwogIH07CiAgLyoqCiAgICogaHR0cHM6Ly95YW5kZXgucnUvc3VwcG9ydC9tZXRyaWNhL29iamVjdHMvc2V0LXVzZXItaWQuaHRtbAogICAqLwoKCiAgdmFyIHNldFVzZXJJRCA9IG5vb3BGdW5jOwogIC8qKgogICAqIGh0dHBzOi8veWFuZGV4LnJ1L3N1cHBvcnQvbWV0cmljYS9vYmplY3RzL3VzZXItcGFyYW1zLmh0bWwKICAgKi8KCiAgdmFyIHVzZXJQYXJhbXMgPSBub29wRnVuYzsgLy8gaHR0cHM6Ly9naXRodWIuY29tL0FkZ3VhcmRUZWFtL1NjcmlwdGxldHMvaXNzdWVzLzE5OAoKICB2YXIgZGVzdHJ1Y3QgPSBub29wRnVuYzsKICB2YXIgYXBpID0gewogICAgYWRkRmlsZUV4dGVuc2lvbjogYWRkRmlsZUV4dGVuc2lvbiwKICAgIGV4dExpbms6IGV4dExpbmssCiAgICBmaWxlOiBmaWxlLAogICAgZ2V0Q2xpZW50SUQ6IGdldENsaWVudElELAogICAgaGl0OiBoaXRGdW5jLAogICAgbm90Qm91bmNlOiBub3RCb3VuY2UsCiAgICBwYXJhbXM6IHBhcmFtcywKICAgIHJlYWNoR29hbDogcmVhY2hHb2FsLAogICAgc2V0VXNlcklEOiBzZXRVc2VySUQsCiAgICB1c2VyUGFyYW1zOiB1c2VyUGFyYW1zLAogICAgZGVzdHJ1Y3Q6IGRlc3RydWN0CiAgfTsKCiAgZnVuY3Rpb24geW0oaWQsIGZ1bmNOYW1lKSB7CiAgICBmb3IgKHZhciBfbGVuMTYgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4xNiA+IDIgPyBfbGVuMTYgLSAyIDogMCksIF9rZXkxNiA9IDI7IF9rZXkxNiA8IF9sZW4xNjsgX2tleTE2KyspIHsKICAgICAgYXJnc1tfa2V5MTYgLSAyXSA9IGFyZ3VtZW50c1tfa2V5MTZdOwogICAgfQoKICAgIHJldHVybiBhcGlbZnVuY05hbWVdICYmIGFwaVtmdW5jTmFtZV0uYXBwbHkoYXBpLCBbaWRdLmNvbmNhdChhcmdzKSk7CiAgfQoKICB5bS5hID0gW107CgogIGZ1bmN0aW9uIGluaXQoaWQpIHsKICAgIC8vIHlhQ291bnRlciBvYmplY3Qgc2hvdWxkIHByb3ZpZGUgYXBpCiAgICB3aW5kb3dbInlhQ291bnRlciIuY29uY2F0KGlkKV0gPSBhcGk7CiAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgieWFjb3VudGVyIi5jb25jYXQoaWQsICJpbml0ZWQiKSkpOwogIH0KCiAgaWYgKHR5cGVvZiB3aW5kb3cueW0gPT09ICd1bmRlZmluZWQnKSB7CiAgICB3aW5kb3cueW0gPSB5bTsKICB9IGVsc2UgaWYgKHdpbmRvdy55bSAmJiB3aW5kb3cueW0uYSkgewogICAgLy8gR2V0IGlkIGZvciB5YUNvdW50ZXIgb2JqZWN0CiAgICB2YXIgY291bnRlcnMgPSB3aW5kb3cueW0uYTsKICAgIHdpbmRvdy55bSA9IHltOwogICAgY291bnRlcnMuZm9yRWFjaChmdW5jdGlvbiAocGFyYW1zKSB7CiAgICAgIHZhciBpZCA9IHBhcmFtc1swXTsKICAgICAgaW5pdChpZCk7CiAgICB9KTsKICB9CgogIGhpdChzb3VyY2UpOwp9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICB2YXIgX2xvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CgogICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbXBhdC9jb21wYXQKCiAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IC8vIGRlbGV0ZSBhbGwgZG9tYWlucyBmcm9tIHJ1bGVUZXh0IGFuZCBsZWF2ZSBqdXN0IHJ1bGUgcGFydAoKCiAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7IC8vIHByZXBhcmUgYXBwbGllZCBzY3JpcHRsZXQgcnVsZSBmb3Igc3BlY2lmaWMgZG9tYWluCgogICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICB9IC8vIFVzZWQgdG8gY2hlY2sgaWYgc2NyaXB0bGV0IHVzZXMgJ2hpdCcgZnVuY3Rpb24gZm9yIGxvZ2dpbmcKCgogICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgIGlmIChtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIF9sb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICB9CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgIGlmICh0cmFjZSkgewogICAgICB0cmFjZSgpOwogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgfSBjYXRjaCAoZSkgey8vIHRyeSBjYXRjaCBmb3IgRWRnZSAxNQogICAgLy8gSW4gYWNjb3JkaW5nIHRvIHRoaXMgaXNzdWUgaHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS9wbGF0Zm9ybS9pc3N1ZXMvMTQ0OTUyMjAvCiAgICAvLyBjb25zb2xlLmxvZyB0aHJvd3MgYW4gZXJyb3IKICB9IC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciB1bml0LXRlc3RzIG9ubHkhCgoKICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogIH0KfQpmdW5jdGlvbiBub29wRnVuYygpIHt9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIG1ldHJpa2FZYW5kZXhUYWcuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6Im1ldHJpa2EteWFuZGV4LXRhZyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "metrika-yandex-watch",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG1ldHJpa2FZYW5kZXhXYXRjaChzb3VyY2UpIHsKICB2YXIgY2JOYW1lID0gJ3lhbmRleF9tZXRyaWthX2NhbGxiYWNrcyc7CiAgLyoqCiAgICogR2V0cyBjYWxsYmFjayBhbmQgaXRzIGNvbnRleHQgZnJvbSBvcHRpb25zIGFuZCBjYWxsIGl0IGluIGFzeW5jIHdheQogICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIFlhbmRleCBNZXRyaWthIEFQSSBvcHRpb25zCiAgICovCgogIHZhciBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMgPSBmdW5jdGlvbiBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMoKSB7CiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICB2YXIgY2FsbGJhY2sgPSBvcHRpb25zLmNhbGxiYWNrOwogICAgdmFyIGN0eCA9IG9wdGlvbnMuY3R4OwoKICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgY2FsbGJhY2sgPSBjdHggIT09IHVuZGVmaW5lZCA/IGNhbGxiYWNrLmJpbmQoY3R4KSA6IGNhbGxiYWNrOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgfSk7CiAgICB9CiAgfTsKCiAgZnVuY3Rpb24gTWV0cmlrYSgpIHt9IC8vIGNvbnN0cnVjdG9yCgoKICBNZXRyaWthLmNvdW50ZXJzID0gbm9vcEFycmF5OyAvLyBNZXRob2RzIHdpdGhvdXQgb3B0aW9ucwoKICBNZXRyaWthLnByb3RvdHlwZS5hZGRGaWxlRXh0ZW5zaW9uID0gbm9vcEZ1bmM7CiAgTWV0cmlrYS5wcm90b3R5cGUuZ2V0Q2xpZW50SUQgPSBub29wRnVuYzsKICBNZXRyaWthLnByb3RvdHlwZS5zZXRVc2VySUQgPSBub29wRnVuYzsKICBNZXRyaWthLnByb3RvdHlwZS51c2VyUGFyYW1zID0gbm9vcEZ1bmM7CiAgTWV0cmlrYS5wcm90b3R5cGUucGFyYW1zID0gbm9vcEZ1bmM7CiAgTWV0cmlrYS5wcm90b3R5cGUuY291bnRlcnMgPSBub29wQXJyYXk7IC8vIE1ldGhvZHMgd2l0aCBvcHRpb25zCiAgLy8gVGhlIG9yZGVyIG9mIGFyZ3VtZW50cyBzaG91bGQgYmUga2VwdCBpbiBhY2NvcmRpbmcgdG8gQVBJCgogIE1ldHJpa2EucHJvdG90eXBlLmV4dExpbmsgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7CiAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMob3B0aW9ucyk7CiAgfTsKCiAgTWV0cmlrYS5wcm90b3R5cGUuZmlsZSA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHsKICAgIGFzeW5jQ2FsbGJhY2tGcm9tT3B0aW9ucyhvcHRpb25zKTsKICB9OwoKICBNZXRyaWthLnByb3RvdHlwZS5oaXQgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7CiAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMob3B0aW9ucyk7CiAgfTsKCiAgTWV0cmlrYS5wcm90b3R5cGUucmVhY2hHb2FsID0gZnVuY3Rpb24gKHRhcmdldCwgcGFyYW1zLCBjYiwgY3R4KSB7CiAgICBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnMoewogICAgICBjYWxsYmFjazogY2IsCiAgICAgIGN0eDogY3R4CiAgICB9KTsKICB9OwoKICBNZXRyaWthLnByb3RvdHlwZS5ub3RCb3VuY2UgPSBhc3luY0NhbGxiYWNrRnJvbU9wdGlvbnM7CgogIGlmICh3aW5kb3cuWWEpIHsKICAgIHdpbmRvdy5ZYS5NZXRyaWthID0gTWV0cmlrYTsKICB9IGVsc2UgewogICAgd2luZG93LllhID0gewogICAgICBNZXRyaWthOiBNZXRyaWthCiAgICB9OwogIH0KCiAgaWYgKHdpbmRvd1tjYk5hbWVdICYmIEFycmF5LmlzQXJyYXkod2luZG93W2NiTmFtZV0pKSB7CiAgICB3aW5kb3dbY2JOYW1lXS5mb3JFYWNoKGZ1bmN0aW9uIChmdW5jKSB7CiAgICAgIGlmICh0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIGZ1bmMoKTsKICAgICAgfQogICAgfSk7CiAgfQoKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fQpmdW5jdGlvbiBub29wQXJyYXkoKSB7CiAgcmV0dXJuIFtdOwp9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIG1ldHJpa2FZYW5kZXhXYXRjaC5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoibWV0cmlrYS15YW5kZXgtd2F0Y2giLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "naver-wcslog",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIE5hdmVyV2NzbG9nKHNvdXJjZSkgewogIHdpbmRvdy53Y3NfYWRkID0ge307CiAgd2luZG93Lndjc19kbyA9IG5vb3BGdW5jOwogIHdpbmRvdy53Y3MgPSB7CiAgICBpbmZsb3c6IG5vb3BGdW5jCiAgfTsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fTsKICAgICAgICBjb25zdCB1cGRhdGVkQXJncyA9IGFyZ3MgPyBbXS5jb25jYXQoc291cmNlKS5jb25jYXQoYXJncykgOiBbc291cmNlXTsKICAgICAgICB0cnkgewogICAgICAgICAgICBOYXZlcldjc2xvZy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoibmF2ZXItd2NzbG9nIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "noeval",
        "aliases": [
            "noeval.js",
            "silent-noeval.js",
            "ubo-noeval.js",
            "ubo-silent-noeval.js",
            "ubo-noeval",
            "ubo-silent-noeval"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIG5vZXZhbChzb3VyY2UpIHsKICB3aW5kb3cuZXZhbCA9IGZ1bmN0aW9uIGV2YWxXcmFwcGVyKHMpIHsKICAgIGhpdChzb3VyY2UsICJBZEd1YXJkIGhhcyBwcmV2ZW50ZWQgZXZhbDpcbiIuY29uY2F0KHMpKTsKICB9LmJpbmQoKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbm9ldmFsLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJub2V2YWwiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "prebid-ads",
        "aliases": [
            "ubo-prebid-ads.js",
            "prebid-ads.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZWJpZEFkcyhzb3VyY2UpIHsKICB3aW5kb3cuY2FuUnVuQWRzID0gdHJ1ZTsKICB3aW5kb3cuaXNBZEJsb2NrQWN0aXZlID0gZmFsc2U7CiAgaGl0KHNvdXJjZSk7Cn0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgcmV0dXJuOwogIH0KCiAgdHJ5IHsKICAgIHZhciBfbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKCiAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY29tcGF0L2NvbXBhdAoKICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gLy8gZGVsZXRlIGFsbCBkb21haW5zIGZyb20gcnVsZVRleHQgYW5kIGxlYXZlIGp1c3QgcnVsZSBwYXJ0CgoKICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsgLy8gcHJlcGFyZSBhcHBsaWVkIHNjcmlwdGxldCBydWxlIGZvciBzcGVjaWZpYyBkb21haW4KCiAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgIH0gLy8gVXNlZCB0byBjaGVjayBpZiBzY3JpcHRsZXQgdXNlcyAnaGl0JyBmdW5jdGlvbiBmb3IgbG9nZ2luZwoKCiAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX2xvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgIH0KICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgaWYgKHRyYWNlKSB7CiAgICAgIHRyYWNlKCk7CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICB9IGNhdGNoIChlKSB7Ly8gdHJ5IGNhdGNoIGZvciBFZGdlIDE1CiAgICAvLyBJbiBhY2NvcmRpbmcgdG8gdGhpcyBpc3N1ZSBodHRwczovL2RldmVsb3Blci5taWNyb3NvZnQuY29tL2VuLXVzL21pY3Jvc29mdC1lZGdlL3BsYXRmb3JtL2lzc3Vlcy8xNDQ5NTIyMC8KICAgIC8vIGNvbnNvbGUubG9nIHRocm93cyBhbiBlcnJvcgogIH0gLy8gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIHVuaXQtdGVzdHMgb25seSEKCgogIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgfQp9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZWJpZEFkcy5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoicHJlYmlkLWFkcyIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "prebid",
        "aliases": [],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIFByZWJpZChzb3VyY2UpIHsKICB2YXIgcHVzaEZ1bmN0aW9uID0gZnVuY3Rpb24gcHVzaEZ1bmN0aW9uKGFyZykgewogICAgaWYgKHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgdHJ5IHsKICAgICAgICBhcmcuY2FsbCgpOwogICAgICB9IGNhdGNoIChleCkgewogICAgICAgIC8qIGVtcHR5ICovCiAgICAgIH0KICAgIH0KICB9OwoKICB2YXIgcGJqc1dyYXBwZXIgPSB7CiAgICBhZGRBZFVuaXRzOiBmdW5jdGlvbiBhZGRBZFVuaXRzKCkge30sCiAgICBhZFNlcnZlcnM6IHsKICAgICAgZGZwOiB7CiAgICAgICAgLy8gaHR0cHM6Ly9kb2NzLnByZWJpZC5vcmcvZGV2LWRvY3MvcHVibGlzaGVyLWFwaS1yZWZlcmVuY2UvYWRTZXJ2ZXJzLmRmcC5idWlsZFZpZGVvVXJsLmh0bWwKICAgICAgICAvLyByZXR1cm5zIGFkIFVSTAogICAgICAgIGJ1aWxkVmlkZW9Vcmw6IG5vb3BTdHIKICAgICAgfQogICAgfSwKICAgIGFkVW5pdHM6IFtdLAogICAgYWxpYXNCaWRkZXI6IGZ1bmN0aW9uIGFsaWFzQmlkZGVyKCkge30sCiAgICBjbWQ6IFtdLAogICAgZW5hYmxlQW5hbHl0aWNzOiBmdW5jdGlvbiBlbmFibGVBbmFseXRpY3MoKSB7fSwKICAgIGdldEhpZ2hlc3RDcG1CaWRzOiBub29wQXJyYXksCiAgICBsaWJMb2FkZWQ6IHRydWUsCiAgICBxdWU6IFtdLAogICAgcmVxdWVzdEJpZHM6IGZ1bmN0aW9uIHJlcXVlc3RCaWRzKGFyZykgewogICAgICBpZiAoYXJnIGluc3RhbmNlb2YgT2JqZWN0ICYmIGFyZy5iaWRzQmFja0hhbmRsZXIpIHsKICAgICAgICB0cnkgewogICAgICAgICAgYXJnLmJpZHNCYWNrSGFuZGxlci5jYWxsKCk7IC8vIGh0dHBzOi8vZG9jcy5wcmViaWQub3JnL2Rldi1kb2NzL3B1Ymxpc2hlci1hcGktcmVmZXJlbmNlL3JlcXVlc3RCaWRzLmh0bWwKICAgICAgICB9IGNhdGNoIChleCkgewogICAgICAgICAgLyogZW1wdHkgKi8KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVBZFVuaXQ6IGZ1bmN0aW9uIHJlbW92ZUFkVW5pdCgpIHt9LAogICAgc2V0QmlkZGVyQ29uZmlnOiBmdW5jdGlvbiBzZXRCaWRkZXJDb25maWcoKSB7fSwKICAgIHNldENvbmZpZzogZnVuY3Rpb24gc2V0Q29uZmlnKCkge30sCiAgICBzZXRUYXJnZXRpbmdGb3JHUFRBc3luYzogZnVuY3Rpb24gc2V0VGFyZ2V0aW5nRm9yR1BUQXN5bmMoKSB7fQogIH07CiAgcGJqc1dyYXBwZXIuY21kLnB1c2ggPSBwdXNoRnVuY3Rpb247CiAgcGJqc1dyYXBwZXIucXVlLnB1c2ggPSBwdXNoRnVuY3Rpb247CiAgd2luZG93LnBianMgPSBwYmpzV3JhcHBlcjsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn0KZnVuY3Rpb24gbm9vcEZ1bmMoKSB7fQpmdW5jdGlvbiBub29wU3RyKCkgewogIHJldHVybiAnJzsKfQpmdW5jdGlvbiBub29wQXJyYXkoKSB7CiAgcmV0dXJuIFtdOwp9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIFByZWJpZC5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoicHJlYmlkIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "prevent-bab",
        "aliases": [
            "nobab.js",
            "ubo-nobab.js",
            "bab-defuser.js",
            "ubo-bab-defuser.js",
            "ubo-nobab",
            "ubo-bab-defuser"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRCYWIoc291cmNlKSB7CiAgdmFyIG5hdGl2ZVNldFRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dDsKICB2YXIgYmFiUmVnZXggPSAvXC5iYWJfZWxlbWVudGlkLiQvOwoKICB2YXIgdGltZW91dFdyYXBwZXIgPSBmdW5jdGlvbiB0aW1lb3V0V3JhcHBlcihjYWxsYmFjaykgewogICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gJ3N0cmluZycgfHwgIWJhYlJlZ2V4LnRlc3QoY2FsbGJhY2spKSB7CiAgICAgIGZvciAodmFyIF9sZW44ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuOCA+IDEgPyBfbGVuOCAtIDEgOiAwKSwgX2tleTggPSAxOyBfa2V5OCA8IF9sZW44OyBfa2V5OCsrKSB7CiAgICAgICAgYXJnc1tfa2V5OCAtIDFdID0gYXJndW1lbnRzW19rZXk4XTsKICAgICAgfQoKICAgICAgcmV0dXJuIG5hdGl2ZVNldFRpbWVvdXQuYXBwbHkod2luZG93LCBbY2FsbGJhY2tdLmNvbmNhdChhcmdzKSk7CiAgICB9CgogICAgaGl0KHNvdXJjZSk7CiAgfTsKCiAgd2luZG93LnNldFRpbWVvdXQgPSB0aW1lb3V0V3JhcHBlcjsKICB2YXIgc2lnbmF0dXJlcyA9IFtbJ2Jsb2NrYWRibG9jayddLCBbJ2JhYmFzYm0nXSwgWy9nZXRJdGVtXCgnYmFibidcKS9dLCBbJ2dldEVsZW1lbnRCeUlkJywgJ1N0cmluZy5mcm9tQ2hhckNvZGUnLCAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknLCAnY2hhckF0JywgJ0RPTUNvbnRlbnRMb2FkZWQnLCAnQWRCbG9jaycsICdhZGRFdmVudExpc3RlbmVyJywgJ2RvU2Nyb2xsJywgJ2Zyb21DaGFyQ29kZScsICc8PDJ8cj4+NCcsICdzZXNzaW9uU3RvcmFnZScsICdjbGllbnRXaWR0aCcsICdsb2NhbFN0b3JhZ2UnLCAnTWF0aCcsICdyYW5kb20nXV07CgogIHZhciBjaGVjayA9IGZ1bmN0aW9uIGNoZWNrKHN0cikgewogICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBzaWduYXR1cmVzLmxlbmd0aDsgX2kyICs9IDEpIHsKICAgICAgdmFyIHRva2VucyA9IHNpZ25hdHVyZXNbX2kyXTsKICAgICAgdmFyIG1hdGNoID0gMDsKCiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdG9rZW5zLmxlbmd0aDsgaiArPSAxKSB7CiAgICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2pdOwogICAgICAgIHZhciBmb3VuZCA9IHRva2VuIGluc3RhbmNlb2YgUmVnRXhwID8gdG9rZW4udGVzdChzdHIpIDogc3RyLmluZGV4T2YodG9rZW4pID4gLTE7CgogICAgICAgIGlmIChmb3VuZCkgewogICAgICAgICAgbWF0Y2ggKz0gMTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChtYXRjaCAvIHRva2Vucy5sZW5ndGggPj0gMC44KSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZmFsc2U7CiAgfTsKCiAgdmFyIG5hdGl2ZUV2YWwgPSB3aW5kb3cuZXZhbDsKCiAgdmFyIGV2YWxXcmFwcGVyID0gZnVuY3Rpb24gZXZhbFdyYXBwZXIoc3RyKSB7CiAgICBpZiAoIWNoZWNrKHN0cikpIHsKICAgICAgcmV0dXJuIG5hdGl2ZUV2YWwoc3RyKTsKICAgIH0KCiAgICBoaXQoc291cmNlKTsKICAgIHZhciBib2R5RWwgPSBkb2N1bWVudC5ib2R5OwoKICAgIGlmIChib2R5RWwpIHsKICAgICAgYm9keUVsLnN0eWxlLnJlbW92ZVByb3BlcnR5KCd2aXNpYmlsaXR5Jyk7CiAgICB9CgogICAgdmFyIGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JhYmFzYm1zZ3gnKTsKCiAgICBpZiAoZWwpIHsKICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7CiAgICB9CiAgfTsKCiAgd2luZG93LmV2YWwgPSBldmFsV3JhcHBlci5iaW5kKHdpbmRvdyk7Cn0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgcmV0dXJuOwogIH0KCiAgdHJ5IHsKICAgIHZhciBfbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKCiAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY29tcGF0L2NvbXBhdAoKICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gLy8gZGVsZXRlIGFsbCBkb21haW5zIGZyb20gcnVsZVRleHQgYW5kIGxlYXZlIGp1c3QgcnVsZSBwYXJ0CgoKICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsgLy8gcHJlcGFyZSBhcHBsaWVkIHNjcmlwdGxldCBydWxlIGZvciBzcGVjaWZpYyBkb21haW4KCiAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgIH0gLy8gVXNlZCB0byBjaGVjayBpZiBzY3JpcHRsZXQgdXNlcyAnaGl0JyBmdW5jdGlvbiBmb3IgbG9nZ2luZwoKCiAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX2xvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgIH0KICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgaWYgKHRyYWNlKSB7CiAgICAgIHRyYWNlKCk7CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICB9IGNhdGNoIChlKSB7Ly8gdHJ5IGNhdGNoIGZvciBFZGdlIDE1CiAgICAvLyBJbiBhY2NvcmRpbmcgdG8gdGhpcyBpc3N1ZSBodHRwczovL2RldmVsb3Blci5taWNyb3NvZnQuY29tL2VuLXVzL21pY3Jvc29mdC1lZGdlL3BsYXRmb3JtL2lzc3Vlcy8xNDQ5NTIyMC8KICAgIC8vIGNvbnNvbGUubG9nIHRocm93cyBhbiBlcnJvcgogIH0gLy8gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIHVuaXQtdGVzdHMgb25seSEKCgogIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgfQp9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRCYWIuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InByZXZlbnQtYmFiIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "prevent-bab2",
        "aliases": [
            "nobab2.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRCYWIyKHNvdXJjZSkgewogIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wYXQvY29tcGF0CiAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQ7CgogIGlmIChzY3JpcHQgPT09IG51bGwpIHsKICAgIHJldHVybjsKICB9CgogIHZhciB1cmwgPSBzY3JpcHQuc3JjOwoKICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHsKICAgIHJldHVybjsKICB9CgogIHZhciBkb21haW5zU3RyID0gWydhZGNsaXh4XFwubmV0JywgJ2FkbmV0YXNpYVxcLmNvbScsICdhZHRyYWNrZXJzXFwubmV0JywgJ2Jhbm5lcnRyYWNrXFwubmV0J10uam9pbignfCcpOwogIHZhciBtYXRjaFN0ciA9ICJeaHR0cHM/Oi8vW1xcdy1dK1xcLigiLmNvbmNhdChkb21haW5zU3RyLCAiKS8uIik7CiAgdmFyIGRvbWFpbnNSZWdleCA9IG5ldyBSZWdFeHAobWF0Y2hTdHIpOwoKICBpZiAoZG9tYWluc1JlZ2V4LnRlc3QodXJsKSA9PT0gZmFsc2UpIHsKICAgIHJldHVybjsKICB9CgogIHdpbmRvdy5uSDdlWHpPc0cgPSA4NTg7CiAgaGl0KHNvdXJjZSk7Cn0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgcmV0dXJuOwogIH0KCiAgdHJ5IHsKICAgIHZhciBfbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKCiAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY29tcGF0L2NvbXBhdAoKICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gLy8gZGVsZXRlIGFsbCBkb21haW5zIGZyb20gcnVsZVRleHQgYW5kIGxlYXZlIGp1c3QgcnVsZSBwYXJ0CgoKICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsgLy8gcHJlcGFyZSBhcHBsaWVkIHNjcmlwdGxldCBydWxlIGZvciBzcGVjaWZpYyBkb21haW4KCiAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgIH0gLy8gVXNlZCB0byBjaGVjayBpZiBzY3JpcHRsZXQgdXNlcyAnaGl0JyBmdW5jdGlvbiBmb3IgbG9nZ2luZwoKCiAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX2xvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgIH0KICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgaWYgKHRyYWNlKSB7CiAgICAgIHRyYWNlKCk7CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICB9IGNhdGNoIChlKSB7Ly8gdHJ5IGNhdGNoIGZvciBFZGdlIDE1CiAgICAvLyBJbiBhY2NvcmRpbmcgdG8gdGhpcyBpc3N1ZSBodHRwczovL2RldmVsb3Blci5taWNyb3NvZnQuY29tL2VuLXVzL21pY3Jvc29mdC1lZGdlL3BsYXRmb3JtL2lzc3Vlcy8xNDQ5NTIyMC8KICAgIC8vIGNvbnNvbGUubG9nIHRocm93cyBhbiBlcnJvcgogIH0gLy8gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIHVuaXQtdGVzdHMgb25seSEKCgogIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgfQp9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRCYWIyLmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJwcmV2ZW50LWJhYjIiLCJhcmdzIjpbXX0sIFtdKTs="
    },
    {
        "title": "prevent-fab-3.2.0",
        "aliases": [
            "nofab.js",
            "ubo-nofab.js",
            "fuckadblock.js-3.2.0",
            "ubo-fuckadblock.js-3.2.0",
            "ubo-nofab"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRGYWIoc291cmNlKSB7CiAgaGl0KHNvdXJjZSk7IC8vIHJlZGVmaW5lcyBGYWIgZnVuY3Rpb24gZm9yIGFkYmxvY2sgZGV0ZWN0aW9uCgogIHZhciBGYWIgPSBmdW5jdGlvbiBGYWIoKSB7fTsKCiAgRmFiLnByb3RvdHlwZS5jaGVjayA9IG5vb3BGdW5jOwogIEZhYi5wcm90b3R5cGUuY2xlYXJFdmVudCA9IG5vb3BGdW5jOwogIEZhYi5wcm90b3R5cGUuZW1pdEV2ZW50ID0gbm9vcEZ1bmM7CgogIEZhYi5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAoYSwgYikgewogICAgaWYgKCFhKSB7CiAgICAgIGIoKTsKICAgIH0KCiAgICByZXR1cm4gdGhpczsKICB9OwoKICBGYWIucHJvdG90eXBlLm9uRGV0ZWN0ZWQgPSBub29wVGhpczsKCiAgRmFiLnByb3RvdHlwZS5vbk5vdERldGVjdGVkID0gZnVuY3Rpb24gKGEpIHsKICAgIGEoKTsKICAgIHJldHVybiB0aGlzOwogIH07CgogIEZhYi5wcm90b3R5cGUuc2V0T3B0aW9uID0gbm9vcEZ1bmM7CiAgRmFiLnByb3RvdHlwZS5vcHRpb25zID0gewogICAgc2V0OiBub29wRnVuYywKICAgIGdldDogbm9vcEZ1bmMKICB9OwogIHZhciBmYWIgPSBuZXcgRmFiKCk7CiAgdmFyIGdldFNldEZhYiA9IHsKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gRmFiOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KCkge30KICB9OwogIHZhciBnZXRzZXRmYWIgPSB7CiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIGZhYjsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldCgpIHt9CiAgfTsgLy8gcmVkZWZpbmVkIEZhYiBkYXRhIHByb3BlcnRpZXMgd2hpY2ggaWYgJ0Z1Y2tBZEJsb2NrJyB2YXJpYWJsZSBleGlzdHMKCiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh3aW5kb3csICdGdWNrQWRCbG9jaycpKSB7CiAgICB3aW5kb3cuRnVja0FkQmxvY2sgPSBGYWI7CiAgfSBlbHNlIHsKICAgIC8vIG9yIHJlZGVmaW5lZCBGYWIgYWNjZXNzb3IgcHJvcGVydGllcwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdywgJ0Z1Y2tBZEJsb2NrJywgZ2V0U2V0RmFiKTsKICB9CgogIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnQmxvY2tBZEJsb2NrJykpIHsKICAgIHdpbmRvdy5CbG9ja0FkQmxvY2sgPSBGYWI7CiAgfSBlbHNlIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdCbG9ja0FkQmxvY2snLCBnZXRTZXRGYWIpOwogIH0KCiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh3aW5kb3csICdTbmlmZkFkQmxvY2snKSkgewogICAgd2luZG93LlNuaWZmQWRCbG9jayA9IEZhYjsKICB9IGVsc2UgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdywgJ1NuaWZmQWRCbG9jaycsIGdldFNldEZhYik7CiAgfQoKICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHdpbmRvdywgJ2Z1Y2tBZEJsb2NrJykpIHsKICAgIHdpbmRvdy5mdWNrQWRCbG9jayA9IGZhYjsKICB9IGVsc2UgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdywgJ2Z1Y2tBZEJsb2NrJywgZ2V0c2V0ZmFiKTsKICB9CgogIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwod2luZG93LCAnYmxvY2tBZEJsb2NrJykpIHsKICAgIHdpbmRvdy5ibG9ja0FkQmxvY2sgPSBmYWI7CiAgfSBlbHNlIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdibG9ja0FkQmxvY2snLCBnZXRzZXRmYWIpOwogIH0KCiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh3aW5kb3csICdzbmlmZkFkQmxvY2snKSkgewogICAgd2luZG93LnNuaWZmQWRCbG9jayA9IGZhYjsKICB9IGVsc2UgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdywgJ3NuaWZmQWRCbG9jaycsIGdldHNldGZhYik7CiAgfQp9CmZ1bmN0aW9uIGhpdChzb3VyY2UsIG1lc3NhZ2UpIHsKICBpZiAoc291cmNlLnZlcmJvc2UgIT09IHRydWUpIHsKICAgIHJldHVybjsKICB9CgogIHRyeSB7CiAgICB2YXIgX2xvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CgogICAgdmFyIHRyYWNlID0gY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbXBhdC9jb21wYXQKCiAgICB2YXIgcHJlZml4ID0gc291cmNlLnJ1bGVUZXh0IHx8ICcnOwoKICAgIGlmIChzb3VyY2UuZG9tYWluTmFtZSkgewogICAgICB2YXIgQUdfU0NSSVBUTEVUX01BUktFUiA9ICcjJSMvLyc7CiAgICAgIHZhciBVQk9fU0NSSVBUTEVUX01BUktFUiA9ICcjIytqcyc7CiAgICAgIHZhciBydWxlU3RhcnRJbmRleDsKCiAgICAgIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihBR19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IC8vIGRlbGV0ZSBhbGwgZG9tYWlucyBmcm9tIHJ1bGVUZXh0IGFuZCBsZWF2ZSBqdXN0IHJ1bGUgcGFydAoKCiAgICAgIHZhciBydWxlUGFydCA9IHNvdXJjZS5ydWxlVGV4dC5zbGljZShydWxlU3RhcnRJbmRleCk7IC8vIHByZXBhcmUgYXBwbGllZCBzY3JpcHRsZXQgcnVsZSBmb3Igc3BlY2lmaWMgZG9tYWluCgogICAgICBwcmVmaXggPSAiIi5jb25jYXQoc291cmNlLmRvbWFpbk5hbWUpLmNvbmNhdChydWxlUGFydCk7CiAgICB9IC8vIFVzZWQgdG8gY2hlY2sgaWYgc2NyaXB0bGV0IHVzZXMgJ2hpdCcgZnVuY3Rpb24gZm9yIGxvZ2dpbmcKCgogICAgdmFyIExPR19NQVJLRVIgPSAnbG9nOiAnOwoKICAgIGlmIChtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlLmluZGV4T2YoTE9HX01BUktFUikgPT09IC0xKSB7CiAgICAgICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIG1lc3NhZ2U6XG4iKS5jb25jYXQobWVzc2FnZSkpOwogICAgICB9IGVsc2UgewogICAgICAgIF9sb2cobWVzc2FnZS5zbGljZShMT0dfTUFSS0VSLmxlbmd0aCkpOwogICAgICB9CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIHN0YXJ0IikpOwoKICAgIGlmICh0cmFjZSkgewogICAgICB0cmFjZSgpOwogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBlbmQiKSk7CiAgfSBjYXRjaCAoZSkgey8vIHRyeSBjYXRjaCBmb3IgRWRnZSAxNQogICAgLy8gSW4gYWNjb3JkaW5nIHRvIHRoaXMgaXNzdWUgaHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS9wbGF0Zm9ybS9pc3N1ZXMvMTQ0OTUyMjAvCiAgICAvLyBjb25zb2xlLmxvZyB0aHJvd3MgYW4gZXJyb3IKICB9IC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciB1bml0LXRlc3RzIG9ubHkhCgoKICBpZiAodHlwZW9mIHdpbmRvdy5fX2RlYnVnID09PSAnZnVuY3Rpb24nKSB7CiAgICB3aW5kb3cuX19kZWJ1Zyhzb3VyY2UpOwogIH0KfQpmdW5jdGlvbiBub29wRnVuYygpIHt9CmZ1bmN0aW9uIG5vb3BUaGlzKCkgewogIHJldHVybiB0aGlzOwp9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHByZXZlbnRGYWIuYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InByZXZlbnQtZmFiLTMuMi4wIiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "prevent-popads-net",
        "aliases": [
            "popads.net.js",
            "ubo-popads.net.js",
            "ubo-popads.net"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHByZXZlbnRQb3BhZHNOZXQoc291cmNlKSB7CiAgdmFyIHJpZCA9IHJhbmRvbUlkKCk7CgogIHZhciB0aHJvd0Vycm9yID0gZnVuY3Rpb24gdGhyb3dFcnJvcigpIHsKICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihyaWQpOwogIH07CgogIGRlbGV0ZSB3aW5kb3cuUG9wQWRzOwogIGRlbGV0ZSB3aW5kb3cucG9wbnM7CiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMod2luZG93LCB7CiAgICBQb3BBZHM6IHsKICAgICAgc2V0OiB0aHJvd0Vycm9yCiAgICB9LAogICAgcG9wbnM6IHsKICAgICAgc2V0OiB0aHJvd0Vycm9yCiAgICB9CiAgfSk7CiAgd2luZG93Lm9uZXJyb3IgPSBjcmVhdGVPbkVycm9ySGFuZGxlcihyaWQpLmJpbmQoKTsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBjcmVhdGVPbkVycm9ySGFuZGxlcihyaWQpIHsKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm4KICB2YXIgbmF0aXZlT25FcnJvciA9IHdpbmRvdy5vbmVycm9yOwogIHJldHVybiBmdW5jdGlvbiBvbkVycm9yKGVycm9yKSB7CiAgICBpZiAodHlwZW9mIGVycm9yID09PSAnc3RyaW5nJyAmJiBlcnJvci5pbmRleE9mKHJpZCkgIT09IC0xKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGlmIChuYXRpdmVPbkVycm9yIGluc3RhbmNlb2YgRnVuY3Rpb24pIHsKICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICByZXR1cm4gbmF0aXZlT25FcnJvci5hcHBseSh0aGlzLCBbZXJyb3JdLmNvbmNhdChhcmdzKSk7CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH07Cn0KZnVuY3Rpb24gcmFuZG9tSWQoKSB7CiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgcHJldmVudFBvcGFkc05ldC5hcHBseSh0aGlzLCB1cGRhdGVkQXJncyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAKfSkoeyJuYW1lIjoicHJldmVudC1wb3BhZHMtbmV0IiwiYXJncyI6W119LCBbXSk7"
    },
    {
        "title": "scorecardresearch-beacon",
        "aliases": [
            "ubo-scorecardresearch_beacon.js",
            "scorecardresearch_beacon.js"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIFNjb3JlQ2FyZFJlc2VhcmNoQmVhY29uKHNvdXJjZSkgewogIHdpbmRvdy5DT01TQ09SRSA9IHsKICAgIHB1cmdlOiBmdW5jdGlvbiBwdXJnZSgpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlCiAgICAgIHdpbmRvdy5fY29tc2NvcmUgPSBbXTsKICAgIH0sCiAgICBiZWFjb246IGZ1bmN0aW9uIGJlYWNvbigpIHt9CiAgfTsKICBoaXQoc291cmNlKTsKfQpmdW5jdGlvbiBoaXQoc291cmNlLCBtZXNzYWdlKSB7CiAgaWYgKHNvdXJjZS52ZXJib3NlICE9PSB0cnVlKSB7CiAgICByZXR1cm47CiAgfQoKICB0cnkgewogICAgdmFyIF9sb2cgPSBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpOwoKICAgIHZhciB0cmFjZSA9IGNvbnNvbGUudHJhY2UuYmluZChjb25zb2xlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb21wYXQvY29tcGF0CgogICAgdmFyIHByZWZpeCA9IHNvdXJjZS5ydWxlVGV4dCB8fCAnJzsKCiAgICBpZiAoc291cmNlLmRvbWFpbk5hbWUpIHsKICAgICAgdmFyIEFHX1NDUklQVExFVF9NQVJLRVIgPSAnIyUjLy8nOwogICAgICB2YXIgVUJPX1NDUklQVExFVF9NQVJLRVIgPSAnIyMranMnOwogICAgICB2YXIgcnVsZVN0YXJ0SW5kZXg7CgogICAgICBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUikgPiAtMSkgewogICAgICAgIHJ1bGVTdGFydEluZGV4ID0gc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoQUdfU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnJ1bGVUZXh0LmluZGV4T2YoVUJPX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKTsKICAgICAgfSAvLyBkZWxldGUgYWxsIGRvbWFpbnMgZnJvbSBydWxlVGV4dCBhbmQgbGVhdmUganVzdCBydWxlIHBhcnQKCgogICAgICB2YXIgcnVsZVBhcnQgPSBzb3VyY2UucnVsZVRleHQuc2xpY2UocnVsZVN0YXJ0SW5kZXgpOyAvLyBwcmVwYXJlIGFwcGxpZWQgc2NyaXB0bGV0IHJ1bGUgZm9yIHNwZWNpZmljIGRvbWFpbgoKICAgICAgcHJlZml4ID0gIiIuY29uY2F0KHNvdXJjZS5kb21haW5OYW1lKS5jb25jYXQocnVsZVBhcnQpOwogICAgfSAvLyBVc2VkIHRvIGNoZWNrIGlmIHNjcmlwdGxldCB1c2VzICdoaXQnIGZ1bmN0aW9uIGZvciBsb2dnaW5nCgoKICAgIHZhciBMT0dfTUFSS0VSID0gJ2xvZzogJzsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBpZiAobWVzc2FnZS5pbmRleE9mKExPR19NQVJLRVIpID09PSAtMSkgewogICAgICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiBtZXNzYWdlOlxuIikuY29uY2F0KG1lc3NhZ2UpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfbG9nKG1lc3NhZ2Uuc2xpY2UoTE9HX01BUktFUi5sZW5ndGgpKTsKICAgICAgfQogICAgfQoKICAgIF9sb2coIiIuY29uY2F0KHByZWZpeCwgIiB0cmFjZSBzdGFydCIpKTsKCiAgICBpZiAodHJhY2UpIHsKICAgICAgdHJhY2UoKTsKICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2UgZW5kIikpOwogIH0gY2F0Y2ggKGUpIHsvLyB0cnkgY2F0Y2ggZm9yIEVkZ2UgMTUKICAgIC8vIEluIGFjY29yZGluZyB0byB0aGlzIGlzc3VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzE0NDk1MjIwLwogICAgLy8gY29uc29sZS5sb2cgdGhyb3dzIGFuIGVycm9yCiAgfSAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdW5pdC10ZXN0cyBvbmx5IQoKCiAgaWYgKHR5cGVvZiB3aW5kb3cuX19kZWJ1ZyA9PT0gJ2Z1bmN0aW9uJykgewogICAgd2luZG93Ll9fZGVidWcoc291cmNlKTsKICB9Cn07CiAgICAgICAgY29uc3QgdXBkYXRlZEFyZ3MgPSBhcmdzID8gW10uY29uY2F0KHNvdXJjZSkuY29uY2F0KGFyZ3MpIDogW3NvdXJjZV07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgU2NvcmVDYXJkUmVzZWFyY2hCZWFjb24uYXBwbHkodGhpcywgdXBkYXRlZEFyZ3MpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfQogICAgCn0pKHsibmFtZSI6InNjb3JlY2FyZHJlc2VhcmNoLWJlYWNvbiIsImFyZ3MiOltdfSwgW10pOw=="
    },
    {
        "title": "set-popads-dummy",
        "aliases": [
            "popads-dummy.js",
            "ubo-popads-dummy.js",
            "ubo-popads-dummy"
        ],
        "isBlocking": false,
        "contentType": "application/javascript;base64",
        "content": "KGZ1bmN0aW9uKHNvdXJjZSwgYXJncyl7CmZ1bmN0aW9uIHNldFBvcGFkc0R1bW15KHNvdXJjZSkgewogIGRlbGV0ZSB3aW5kb3cuUG9wQWRzOwogIGRlbGV0ZSB3aW5kb3cucG9wbnM7CiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMod2luZG93LCB7CiAgICBQb3BBZHM6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgaGl0KHNvdXJjZSk7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgcG9wbnM6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgaGl0KHNvdXJjZSk7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSk7Cn0KZnVuY3Rpb24gaGl0KHNvdXJjZSwgbWVzc2FnZSkgewogIGlmIChzb3VyY2UudmVyYm9zZSAhPT0gdHJ1ZSkgewogICAgcmV0dXJuOwogIH0KCiAgdHJ5IHsKICAgIHZhciBfbG9nID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTsKCiAgICB2YXIgdHJhY2UgPSBjb25zb2xlLnRyYWNlLmJpbmQoY29uc29sZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY29tcGF0L2NvbXBhdAoKICAgIHZhciBwcmVmaXggPSBzb3VyY2UucnVsZVRleHQgfHwgJyc7CgogICAgaWYgKHNvdXJjZS5kb21haW5OYW1lKSB7CiAgICAgIHZhciBBR19TQ1JJUFRMRVRfTUFSS0VSID0gJyMlIy8vJzsKICAgICAgdmFyIFVCT19TQ1JJUFRMRVRfTUFSS0VSID0gJyMjK2pzJzsKICAgICAgdmFyIHJ1bGVTdGFydEluZGV4OwoKICAgICAgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpID4gLTEpIHsKICAgICAgICBydWxlU3RhcnRJbmRleCA9IHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKEFHX1NDUklQVExFVF9NQVJLRVIpOwogICAgICB9IGVsc2UgaWYgKHNvdXJjZS5ydWxlVGV4dC5pbmRleE9mKFVCT19TQ1JJUFRMRVRfTUFSS0VSKSA+IC0xKSB7CiAgICAgICAgcnVsZVN0YXJ0SW5kZXggPSBzb3VyY2UucnVsZVRleHQuaW5kZXhPZihVQk9fU0NSSVBUTEVUX01BUktFUik7CiAgICAgIH0gLy8gZGVsZXRlIGFsbCBkb21haW5zIGZyb20gcnVsZVRleHQgYW5kIGxlYXZlIGp1c3QgcnVsZSBwYXJ0CgoKICAgICAgdmFyIHJ1bGVQYXJ0ID0gc291cmNlLnJ1bGVUZXh0LnNsaWNlKHJ1bGVTdGFydEluZGV4KTsgLy8gcHJlcGFyZSBhcHBsaWVkIHNjcmlwdGxldCBydWxlIGZvciBzcGVjaWZpYyBkb21haW4KCiAgICAgIHByZWZpeCA9ICIiLmNvbmNhdChzb3VyY2UuZG9tYWluTmFtZSkuY29uY2F0KHJ1bGVQYXJ0KTsKICAgIH0gLy8gVXNlZCB0byBjaGVjayBpZiBzY3JpcHRsZXQgdXNlcyAnaGl0JyBmdW5jdGlvbiBmb3IgbG9nZ2luZwoKCiAgICB2YXIgTE9HX01BUktFUiA9ICdsb2c6ICc7CgogICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgaWYgKG1lc3NhZ2UuaW5kZXhPZihMT0dfTUFSS0VSKSA9PT0gLTEpIHsKICAgICAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgbWVzc2FnZTpcbiIpLmNvbmNhdChtZXNzYWdlKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX2xvZyhtZXNzYWdlLnNsaWNlKExPR19NQVJLRVIubGVuZ3RoKSk7CiAgICAgIH0KICAgIH0KCiAgICBfbG9nKCIiLmNvbmNhdChwcmVmaXgsICIgdHJhY2Ugc3RhcnQiKSk7CgogICAgaWYgKHRyYWNlKSB7CiAgICAgIHRyYWNlKCk7CiAgICB9CgogICAgX2xvZygiIi5jb25jYXQocHJlZml4LCAiIHRyYWNlIGVuZCIpKTsKICB9IGNhdGNoIChlKSB7Ly8gdHJ5IGNhdGNoIGZvciBFZGdlIDE1CiAgICAvLyBJbiBhY2NvcmRpbmcgdG8gdGhpcyBpc3N1ZSBodHRwczovL2RldmVsb3Blci5taWNyb3NvZnQuY29tL2VuLXVzL21pY3Jvc29mdC1lZGdlL3BsYXRmb3JtL2lzc3Vlcy8xNDQ5NTIyMC8KICAgIC8vIGNvbnNvbGUubG9nIHRocm93cyBhbiBlcnJvcgogIH0gLy8gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIHVuaXQtdGVzdHMgb25seSEKCgogIGlmICh0eXBlb2Ygd2luZG93Ll9fZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgIHdpbmRvdy5fX2RlYnVnKHNvdXJjZSk7CiAgfQp9OwogICAgICAgIGNvbnN0IHVwZGF0ZWRBcmdzID0gYXJncyA/IFtdLmNvbmNhdChzb3VyY2UpLmNvbmNhdChhcmdzKSA6IFtzb3VyY2VdOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHNldFBvcGFkc0R1bW15LmFwcGx5KHRoaXMsIHVwZGF0ZWRBcmdzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgIAp9KSh7Im5hbWUiOiJzZXQtcG9wYWRzLWR1bW15IiwiYXJncyI6W119LCBbXSk7"
    }
]