/**
 * This file must export all scriptlets that should be accessible
 */
export { trustedClickElement } from './trusted-click-element';
export { abortOnPropertyRead } from './abort-on-property-read';
export { abortOnPropertyWrite } from './abort-on-property-write';
export { preventSetTimeout } from './prevent-setTimeout';
export { preventSetInterval } from './prevent-setInterval';
export { preventWindowOpen } from './prevent-window-open';
export { abortCurrentInlineScript } from './abort-current-inline-script';
export { setConstant } from './set-constant';
export { removeCookie } from './remove-cookie';
export { preventAddEventListener } from './prevent-addEventListener';
export { preventBab } from './prevent-bab';
export { nowebrtc } from './nowebrtc';
export { logAddEventListener } from './log-addEventListener';
export { logEval } from './log-eval';
export { log } from './log';
export { noeval } from './noeval';
export { preventEvalIf } from './prevent-eval-if';
export { preventFab } from './prevent-fab-3.2.0';
export { setPopadsDummy } from './set-popads-dummy';
export { preventPopadsNet } from './prevent-popads-net';
export { preventAdfly } from './prevent-adfly';
export { debugOnPropertyRead } from './debug-on-property-read';
export { debugOnPropertyWrite } from './debug-on-property-write';
export { debugCurrentInlineScript } from './debug-current-inline-script';
export { removeAttr } from './remove-attr';
export { setAttr } from './set-attr';
export { removeClass } from './remove-class';
export { disableNewtabLinks } from './disable-newtab-links';
export { adjustSetInterval } from './adjust-setInterval';
export { adjustSetTimeout } from './adjust-setTimeout';
export { dirString } from './dir-string';
export { jsonPrune } from './json-prune';
export { preventRequestAnimationFrame } from './prevent-requestAnimationFrame';
export { setCookie } from './set-cookie';
export { setCookieReload } from './set-cookie-reload';
export { hideInShadowDom } from './hide-in-shadow-dom';
export { removeInShadowDom } from './remove-in-shadow-dom';
export { preventFetch } from './prevent-fetch';
export { setLocalStorageItem } from './set-local-storage-item';
export { setSessionStorageItem } from './set-session-storage-item';
export { abortOnStackTrace } from './abort-on-stack-trace';
export { logOnStackTrace } from './log-on-stack-trace';
export { preventXHR } from './prevent-xhr';
export { forceWindowClose } from './close-window';
export { preventRefresh } from './prevent-refresh';
export { preventElementSrcLoading } from './prevent-element-src-loading';
export { noTopics } from './no-topics';
export { trustedReplaceXhrResponse } from './trusted-replace-xhr-response';
export { xmlPrune } from './xml-prune';
export { m3uPrune } from './m3u-prune';
export { trustedSetCookie } from './trusted-set-cookie';
export { trustedSetCookieReload } from './trusted-set-cookie-reload';
export { trustedReplaceFetchResponse } from './trusted-replace-fetch-response';
export { trustedSetLocalStorageItem } from './trusted-set-local-storage-item';
export { trustedSetSessionStorageItem } from './trusted-set-session-storage-item';
export { trustedSetConstant } from './trusted-set-constant';
export { injectCssInShadowDom } from './inject-css-in-shadow-dom';
export { removeNodeText } from './remove-node-text';
export { trustedReplaceNodeText } from './trusted-replace-node-text';
export { evalDataPrune } from './evaldata-prune';
export { trustedPruneInboundObject } from './trusted-prune-inbound-object';
export { trustedSetAttr } from './trusted-set-attr';
export { spoofCSS } from './spoof-css';
export { callNoThrow } from './call-nothrow';
export { trustedCreateElement } from './trusted-create-element';
export { hrefSanitizer } from './href-sanitizer';
export { jsonPruneFetchResponse } from './json-prune-fetch-response';
export { noProtectedAudience } from './no-protected-audience';
export { trustedSuppressNativeMethod } from './trusted-suppress-native-method';
export { jsonPruneXhrResponse } from './json-prune-xhr-response';
export { trustedDispatchEvent } from './trusted-dispatch-event';
export { trustedReplaceOutboundText } from './trusted-replace-outbound-text';
export { preventCanvas } from './prevent-canvas';
export { trustedReplaceArgument } from './trusted-replace-argument';
// redirects as scriptlets
// https://github.com/AdguardTeam/Scriptlets/issues/300
export { AmazonApstag } from './amazon-apstag';
export { DidomiLoader } from './didomi-loader';
export { Fingerprintjs2 } from './fingerprintjs2';
export { Fingerprintjs3 } from './fingerprintjs3';
export { Gemius } from './gemius';
export { GoogleAnalytics } from './google-analytics';
export { GoogleAnalyticsGa } from './google-analytics-ga';
export { GoogleIma3 } from './google-ima3';
export { GoogleSyndicationAdsByGoogle } from './googlesyndication-adsbygoogle';
export { GoogleTagServicesGpt } from './googletagservices-gpt';
export { Matomo } from './matomo';
export { metrikaYandexTag } from './metrika-yandex-tag';
export { metrikaYandexWatch } from './metrika-yandex-watch';
export { NaverWcslog } from './naver-wcslog';
export { Pardot } from './pardot-1.0';
export { Prebid } from './prebid';
export { ScoreCardResearchBeacon } from './scorecardresearch-beacon';
