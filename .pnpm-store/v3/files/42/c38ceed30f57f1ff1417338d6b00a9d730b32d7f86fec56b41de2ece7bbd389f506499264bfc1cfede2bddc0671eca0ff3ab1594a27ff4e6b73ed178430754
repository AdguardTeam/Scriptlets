/*
 * AGTree v3.0.0-alpha.1 (build date: Tue, 12 Nov 2024 16:11:58 GMT)
 * (c) 2024 Adguard Software Ltd.
 * Released under the MIT license
 * https://github.com/AdguardTeam/tsurlfilter/tree/master/packages/agtree#readme
 */
'use strict';

var baseSerializer = require('../base-serializer.js');
var typeGuards = require('../../utils/type-guards.js');
var constants = require('../../utils/constants.js');
var valueSerializer = require('../misc/value-serializer.js');
var hostnameListCommon = require('../../marshalling-utils/misc/hostname-list-common.js');
var binaryTypeCommon = require('../../marshalling-utils/misc/binary-type-common.js');

class HostnameListSerializer extends baseSerializer.BaseSerializer {
    /**
     * Serializes a hostname list node to binary format.
     *
     * @param node Node to serialize.
     * @param buffer ByteBuffer for writing binary data.
     */
    static serialize(node, buffer) {
        buffer.writeUint8(binaryTypeCommon.BinaryTypeMarshallingMap.HostnameListNode);
        if (!typeGuards.isUndefined(node.start)) {
            buffer.writeUint8(hostnameListCommon.HostnameListNodeMarshallingMap.Start);
            buffer.writeUint32(node.start);
        }
        if (!typeGuards.isUndefined(node.end)) {
            buffer.writeUint8(hostnameListCommon.HostnameListNodeMarshallingMap.End);
            buffer.writeUint32(node.end);
        }
        const count = node.children.length;
        if (count) {
            // note: we store the count, because re-construction of the array is faster if we know the length
            if (count > constants.UINT16_MAX) {
                throw new Error(`Too many children: ${count}, the limit is ${constants.UINT16_MAX}`);
            }
            buffer.writeUint8(hostnameListCommon.HostnameListNodeMarshallingMap.Children);
            buffer.writeUint16(count);
            for (let i = 0; i < count; i += 1) {
                valueSerializer.ValueSerializer.serialize(node.children[i], buffer);
            }
        }
        buffer.writeUint8(constants.NULL);
    }
}

exports.HostnameListSerializer = HostnameListSerializer;
