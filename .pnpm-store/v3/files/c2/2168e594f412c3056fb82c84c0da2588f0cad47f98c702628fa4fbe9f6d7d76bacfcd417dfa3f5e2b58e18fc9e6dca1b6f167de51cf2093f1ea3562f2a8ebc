{"version":3,"names":["_nodeFlagsWithValue","require","nodeFlagsWithValue","exports","Set","nodeFlagsWithNoFile","splitArgs","argv","extraOptionsWithValue","programArgs","explicitSeparator","ignoreFileName","i","length","arg","_ignoreFileName","push","has","fileName","userArgs","slice"],"sources":["../src/split-args.ts"],"sourcesContent":["import _nodeFlagsWithValue from \"../data/node-flags-with-value.json\" with { type: \"json\" };\nexport const nodeFlagsWithValue = new Set(_nodeFlagsWithValue);\n\nconst nodeFlagsWithNoFile = new Set([\"-p\", \"--print\", \"-e\", \"--eval\"]);\n\nexport function splitArgs(argv: string[], extraOptionsWithValue?: Set<string>) {\n  const programArgs: string[] = [];\n\n  let explicitSeparator = false;\n  let ignoreFileName = null;\n  let i = 0;\n  for (; i < argv.length; i++) {\n    const arg = argv[i];\n\n    if (arg === \"-\") break;\n\n    if (arg === \"--\") {\n      explicitSeparator = true;\n      i++;\n      break;\n    }\n\n    if (arg[0] === \"-\") {\n      programArgs.push(arg);\n      if (\n        (nodeFlagsWithValue.has(arg) || extraOptionsWithValue?.has(arg)) &&\n        i < argv.length - 1 &&\n        argv[i + 1][0] !== \"-\"\n      ) {\n        i++;\n        programArgs.push(argv[i]);\n      }\n\n      if (nodeFlagsWithNoFile.has(arg)) ignoreFileName ??= true;\n    } else if (i === 0 && arg === \"inspect\") {\n      programArgs.push(arg);\n      ignoreFileName = false;\n    } else {\n      break;\n    }\n  }\n\n  const fileName = !ignoreFileName && i < argv.length ? argv[i++] : null;\n  const userArgs = argv.slice(i);\n\n  return { programArgs, fileName, userArgs, explicitSeparator };\n}\n"],"mappings":";;;;;;;MAAOA,mBAAmB,GAAAC,OAAA,CAAM,oCAAoC;AAC7D,MAAMC,kBAAkB,GAAAC,OAAA,CAAAD,kBAAA,GAAG,IAAIE,GAAG,CAACJ,mBAAmB,CAAC;AAE9D,MAAMK,mBAAmB,GAAG,IAAID,GAAG,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAE/D,SAASE,SAASA,CAACC,IAAc,EAAEC,qBAAmC,EAAE;EAC7E,MAAMC,WAAqB,GAAG,EAAE;EAEhC,IAAIC,iBAAiB,GAAG,KAAK;EAC7B,IAAIC,cAAc,GAAG,IAAI;EACzB,IAAIC,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGL,IAAI,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3B,MAAME,GAAG,GAAGP,IAAI,CAACK,CAAC,CAAC;IAEnB,IAAIE,GAAG,KAAK,GAAG,EAAE;IAEjB,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChBJ,iBAAiB,GAAG,IAAI;MACxBE,CAAC,EAAE;MACH;IACF;IAEA,IAAIE,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAAA,IAAAC,eAAA;MAClBN,WAAW,CAACO,IAAI,CAACF,GAAG,CAAC;MACrB,IACE,CAACZ,kBAAkB,CAACe,GAAG,CAACH,GAAG,CAAC,IAAIN,qBAAqB,YAArBA,qBAAqB,CAAES,GAAG,CAACH,GAAG,CAAC,KAC/DF,CAAC,GAAGL,IAAI,CAACM,MAAM,GAAG,CAAC,IACnBN,IAAI,CAACK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EACtB;QACAA,CAAC,EAAE;QACHH,WAAW,CAACO,IAAI,CAACT,IAAI,CAACK,CAAC,CAAC,CAAC;MAC3B;MAEA,IAAIP,mBAAmB,CAACY,GAAG,CAACH,GAAG,CAAC,EAAE,CAAAC,eAAA,GAAAJ,cAAc,YAAAI,eAAA,GAAdJ,cAAc,GAAK,IAAI;IAC3D,CAAC,MAAM,IAAIC,CAAC,KAAK,CAAC,IAAIE,GAAG,KAAK,SAAS,EAAE;MACvCL,WAAW,CAACO,IAAI,CAACF,GAAG,CAAC;MACrBH,cAAc,GAAG,KAAK;IACxB,CAAC,MAAM;MACL;IACF;EACF;EAEA,MAAMO,QAAQ,GAAG,CAACP,cAAc,IAAIC,CAAC,GAAGL,IAAI,CAACM,MAAM,GAAGN,IAAI,CAACK,CAAC,EAAE,CAAC,GAAG,IAAI;EACtE,MAAMO,QAAQ,GAAGZ,IAAI,CAACa,KAAK,CAACR,CAAC,CAAC;EAE9B,OAAO;IAAEH,WAAW;IAAES,QAAQ;IAAEC,QAAQ;IAAET;EAAkB,CAAC;AAC/D","ignoreList":[]}