/*
 * AGTree v3.0.0-alpha.1 (build date: Tue, 12 Nov 2024 16:11:58 GMT)
 * (c) 2024 Adguard Software Ltd.
 * Released under the MIT license
 * https://github.com/AdguardTeam/tsurlfilter/tree/master/packages/agtree#readme
 */
'use strict';

var constants = require('../../utils/constants.js');
var baseGenerator = require('../base-generator.js');
var valueGenerator = require('./value-generator.js');

class ParameterListGenerator extends baseGenerator.BaseGenerator {
    /**
     * Converts a parameter list AST to a string.
     *
     * @param params Parameter list AST
     * @param separator Separator character (default: comma)
     * @returns String representation of the parameter list
     */
    static generate(params, separator = constants.COMMA) {
        const collection = [];
        // add parameters
        let i = 0;
        for (; i < params.children.length; i += 1) {
            const param = params.children[i];
            if (param === null) {
                collection.push(constants.EMPTY);
            }
            else {
                collection.push(valueGenerator.ValueGenerator.generate(param));
            }
        }
        // join parameters with separator
        // if the separator is a space, join with a single space
        const result = collection.join(separator === constants.SPACE ? separator : `${separator}${constants.SPACE}`);
        return result;
    }
}

exports.ParameterListGenerator = ParameterListGenerator;
