import { OperatorValue } from '../../nodes';
/**
 * Property map for binary serialization.
 *
 * ! IMPORTANT: If you change values here, please update the {@link BINARY_SCHEMA_VERSION} !
 */
export declare const enum VariableNodeBinaryPropMarshallingMap {
    Name = 1,
    FrequentName = 2,
    Start = 3,
    End = 4
}
/**
 * Property map for binary serialization.
 *
 * ! IMPORTANT: If you change values here, please update the {@link BINARY_SCHEMA_VERSION} !
 */
export declare const enum OperatorNodeBinaryPropMarshallingMap {
    Operator = 1,
    Left = 2,
    Right = 3,
    Start = 4,
    End = 5
}
/**
 * Property map for binary serialization.
 *
 * ! IMPORTANT: If you change values here, please update the {@link BINARY_SCHEMA_VERSION} !
 */
export declare const enum ParenthesisNodeBinaryPropMarshallingMap {
    Expression = 1,
    Start = 2,
    End = 3
}
/**
 * Property map for binary serialization.
 *
 * ! IMPORTANT: If you change values here, please update the {@link BINARY_SCHEMA_VERSION} !
 */
export declare const LOGICAL_EXPRESSION_OPERATOR_SERIALISATION_MAP: Map<OperatorValue, number>;
/**
 * Serialization map for known variables.
 */
export declare const KNOWN_VARIABLES_SERIALIZATION_MAP: Map<string, number>;
