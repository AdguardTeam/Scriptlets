{"version":3,"names":["_path","require","_child_process","_url","_v8flags","_splitArgs","_programSetup","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","asyncGeneratorStep","o","c","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","getV8Flags","getNormalizedV8Flag","arg","matches","exec","replace","reject","getV8FlagsRaw","err","flags","flagsSet","Set","map","test","process","allowedNodeEnvironmentFlags","babelNodePath","path","join","dirname","__filename","args","babelArgs","argv","slice","userArgs","argSeparator","indexOf","isV8flag","length","flag","split","unshift","push","spawn","catch","console","error","exitCode","_x","_spawn","kexec","code","shouldPassthroughIPC","send","undefined","proc","child_process","stdio","on","signal","kill","pid","message"],"sources":["../src/babel-node.ts"],"sourcesContent":["/**\n * This tiny wrapper file checks for known node flags and appends them\n * when found, before invoking the \"real\" _babel-node(1) executable.\n */\n\nimport path from \"path\";\nimport child_process from \"child_process\";\nimport { fileURLToPath } from \"url\";\nimport getV8FlagsRaw from \"v8flags\";\n\nimport { splitArgs, nodeFlagsWithValue } from \"./split-args.ts\";\nimport { program } from \"./program-setup.ts\";\n\nfunction getV8Flags(): Promise<(str: string) => boolean> {\n  /**\n   * Replace underscores with dashes in the v8Flag name\n   * Also ensure that if the arg contains a value (e.g. --arg=true)\n   * that only the flag is returned.\n   */\n  function getNormalizedV8Flag(arg: string) {\n    // v8 uses the \"no\" prefix to negate boolean flags (e.g. --nolazy),\n    // but they are not listed by v8flags\n    const matches = /--(?:no)?(.+)/.exec(arg);\n\n    if (matches) {\n      return `--${matches[1].replace(/_/g, \"-\")}`;\n    }\n\n    return arg;\n  }\n\n  return new Promise((resolve, reject) => {\n    getV8FlagsRaw((err: Error, flags: string[]) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      const flagsSet = new Set(flags.map(getNormalizedV8Flag));\n      resolve(\n        test =>\n          flagsSet.has(getNormalizedV8Flag(test)) ||\n          process.allowedNodeEnvironmentFlags.has(test),\n      );\n    });\n  });\n}\n\nconst babelNodePath = path.join(\n  path.dirname(fileURLToPath(import.meta.url)),\n  \"_babel-node\",\n);\n\n(async () => {\n  if (process.env.BABEL_8_BREAKING) {\n    const babelOptions = new Set([]);\n    const babelOptionsWithValue = new Set([]);\n    for (const option of program.options) {\n      const hasValue = option.flags.includes(\"[\");\n      if (option.short) {\n        babelOptions.add(option.short);\n        if (hasValue) babelOptionsWithValue.add(option.short);\n      }\n      if (option.long) {\n        babelOptions.add(option.long);\n        if (hasValue) babelOptionsWithValue.add(option.long);\n      }\n    }\n\n    const { programArgs, fileName, userArgs, explicitSeparator } = splitArgs(\n      process.argv.slice(2),\n      babelOptionsWithValue,\n    );\n\n    const babelArgs: string[] = [];\n    const nodeArgs: string[] = [];\n\n    for (let i = 0; i < programArgs.length; i++) {\n      const arg = programArgs[i];\n      const list = babelOptions.has(arg.split(\"=\")[0]) ? babelArgs : nodeArgs;\n      list.push(arg);\n      if (i + 1 < programArgs.length && programArgs[i + 1][0] !== \"-\") {\n        list.push(programArgs[++i]);\n      }\n    }\n\n    if (!explicitSeparator) {\n      const isV8flag = await getV8Flags();\n\n      const ambiguousArgsNames: string[] = [];\n      const ambiguousArgs: string[] = [];\n      let unambiguousArgs: string[] | null = null;\n      for (let i = 0; i < userArgs.length; i++) {\n        const [arg, value] = userArgs[i].split(\"=\");\n        if (babelOptions.has(arg) || isV8flag(arg)) {\n          unambiguousArgs ??= userArgs.slice(0, i);\n          ambiguousArgsNames.push(arg);\n          ambiguousArgs.push(userArgs[i]);\n          if (\n            value === undefined &&\n            (babelOptionsWithValue.has(arg) || nodeFlagsWithValue.has(arg)) &&\n            i + 1 < userArgs.length\n          ) {\n            ambiguousArgs.push(userArgs[++i]);\n          }\n        } else {\n          unambiguousArgs?.push(userArgs[i]);\n        }\n      }\n      if (ambiguousArgsNames.length > 0) {\n        const them = ambiguousArgsNames.length === 1 ? \"it\" : \"them\";\n        const they = ambiguousArgsNames.length === 1 ? \"it\" : \"they\";\n        const are = ambiguousArgsNames.length === 1 ? \"is\" : \"are\";\n        console.warn(\n          `Warning: ${ambiguousArgsNames.join(\", \")} ${are} a valid option for Babel or Node.js, ` +\n            `but ${they} ${are} defined after the script name. Up to Babel 7 ${they} would have ` +\n            `been passed to Babel, while now ${they} ${are} passed to the script itself.\\n` +\n            `  If the intention is to pass ${them} to Babel, move ${them} before the filename:\\n` +\n            `    babel-node ${programArgs.join(\" \")} ${ambiguousArgs.join(\" \")} ${fileName} ${unambiguousArgs.join(\" \")}\\n` +\n            `  If passing ${them} to the script is intended, you can silence this warning by explicitly ` +\n            `using the -- separator before the script name:\\n` +\n            `    babel-node ${programArgs.join(\" \")} -- ${fileName} ${userArgs.join(\" \")}`,\n        );\n      }\n    }\n\n    await spawn([\n      ...nodeArgs,\n      \"--\",\n      babelNodePath,\n      ...babelArgs,\n      \"--\",\n      fileName,\n      ...userArgs,\n    ]);\n  } else {\n    const args = [babelNodePath];\n\n    let babelArgs = process.argv.slice(2);\n    let userArgs: string[];\n\n    // separate node arguments from script arguments\n    const argSeparator = babelArgs.indexOf(\"--\");\n    if (argSeparator > -1) {\n      userArgs = babelArgs.slice(argSeparator); // including the  --\n      babelArgs = babelArgs.slice(0, argSeparator);\n    }\n\n    const isV8flag = await getV8Flags();\n\n    for (let i = 0; i < babelArgs.length; i++) {\n      const arg = babelArgs[i];\n      const flag = arg.split(\"=\")[0];\n\n      if (flag === \"-d\") {\n        args.unshift(\"--debug\");\n        continue;\n      } else if (flag === \"-gc\") {\n        args.unshift(\"--expose-gc\");\n        continue;\n      } else if (flag === \"-r\" || flag === \"--require\") {\n        args.push(flag);\n        args.push(babelArgs[++i]);\n      } else if (\n        flag === \"debug\" || // node debug foo.js\n        flag === \"inspect\" ||\n        isV8flag(flag)\n      ) {\n        args.unshift(arg);\n      } else {\n        args.push(arg);\n      }\n    }\n\n    // append arguments passed after --\n    if (argSeparator > -1) {\n      args.push(...userArgs);\n    }\n\n    await spawn(args);\n  }\n})().catch(err => {\n  console.error(err);\n  process.exitCode = 1;\n});\n\nasync function spawn(args: string[]) {\n  try {\n    // eslint-disable-next-line import/no-unresolved\n    const { default: kexec } = await import(\"kexec\");\n    kexec(process.argv[0], args);\n  } catch (err) {\n    if (\n      err.code !== \"ERR_MODULE_NOT_FOUND\" &&\n      err.code !== \"MODULE_NOT_FOUND\" &&\n      err.code !== \"UNDECLARED_DEPENDENCY\"\n    ) {\n      throw err;\n    }\n\n    // passthrough IPC only if babel-node itself has an IPC channel\n    const shouldPassthroughIPC = process.send !== undefined;\n    const proc = child_process.spawn(process.argv[0], args, {\n      stdio: shouldPassthroughIPC\n        ? [\"inherit\", \"inherit\", \"inherit\", \"ipc\"]\n        : \"inherit\",\n    });\n    proc.on(\"exit\", function (code, signal) {\n      process.on(\"exit\", function () {\n        if (signal) {\n          process.kill(process.pid, signal);\n        } else {\n          process.exitCode = code ?? undefined;\n        }\n      });\n    });\n    if (shouldPassthroughIPC) {\n      proc.on(\"message\", message => process.send(message));\n    }\n    process.on(\"SIGINT\", () => proc.kill(\"SIGINT\"));\n    process.on(\"SIGTERM\", () => proc.kill(\"SIGTERM\"));\n  }\n}\n"],"mappings":"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","ignoreList":[]}