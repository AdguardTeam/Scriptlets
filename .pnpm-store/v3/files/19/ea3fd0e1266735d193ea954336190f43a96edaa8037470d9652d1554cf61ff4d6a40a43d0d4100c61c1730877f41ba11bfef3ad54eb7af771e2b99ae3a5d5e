/**
 * Property map for binary serialization. This helps to reduce the size of the serialized data,
 * as it allows us to use a single byte to represent a property.
 *
 * ! IMPORTANT: If you change values here, please update the {@link BINARY_SCHEMA_VERSION}!
 *
 * @note Only 256 values can be represented this way.
 */
export declare const enum ModifierNodeMarshallingMap {
    Name = 1,
    Value = 2,
    Exception = 3,
    Start = 4,
    End = 5
}
/**
 * Value map for binary serialization. This helps to reduce the size of the serialized data,
 * as it allows us to use a single byte to represent frequently used values.
 *
 * ! IMPORTANT: If you change values here, please update the {@link BINARY_SCHEMA_VERSION}!
 *
 * @note Only 256 values can be represented this way.
 */
export declare const FREQUENT_MODIFIERS_SERIALIZATION_MAP: Map<string, number>;
/**
 * Value map for binary serialization. This helps to reduce the size of the serialized data,
 * as it allows us to use a single byte to represent frequently used values.
 *
 * ! IMPORTANT: If you change values here, please update the binary schema version
 *
 * @note Only 256 values can be represented this way.
 */
export declare const FREQUENT_REDIRECT_VALUES_SERIALIZATION_MAP: Map<string, number>;
/**
 * Value map for binary serialization. This helps to reduce the size of the serialized data,
 * as it allows us to use a single byte to represent frequently used values.
 *
 * @note This is a special map which allows us to use different value maps for different modifiers.
 */
export declare const FREQUENT_REDIRECT_MODIFIERS_SERIALIZATION_MAP: Map<string, Map<string, number>>;
