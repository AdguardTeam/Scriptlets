/*
 * AGTree v3.0.0-alpha.1 (build date: Tue, 12 Nov 2024 16:11:58 GMT)
 * (c) 2024 Adguard Software Ltd.
 * Released under the MIT license
 * https://github.com/AdguardTeam/tsurlfilter/tree/master/packages/agtree#readme
 */
'use strict';

var cosmeticRuleParser = require('../parser/cosmetic/cosmetic-rule-parser.js');
var typeGuards = require('./type-guards.js');
var options = require('../parser/options.js');

/**
 * Utility functions for categorizing rules.
 */
// TODO: Optimize functions to avoid produce unnecessary data (currently, most of node data is not used).
// TODO: Add support for other rule categories, like network rules (when needed).
class RuleCategorizer {
    /**
     * Determines the type of a given raw cosmetic rule.
     *
     * @param rawRule Raw rule to check.
     *
     * @returns Type of the cosmetic rule or `null` if the rule is cannot be parsed as a cosmetic rule.
     */
    static getCosmeticRuleType(rawRule) {
        try {
            const node = cosmeticRuleParser.CosmeticRuleParser.parse(rawRule, {
                ...options.defaultParserOptions,
                isLocIncluded: false,
                includeRaws: false,
            });
            // If rule cannot be recognized as a cosmetic rule, return null.
            if (typeGuards.isNull(node)) {
                return null;
            }
            return node.type;
        }
        catch {
            // Be tolerant to parsing errors and simply return null.
            return null;
        }
    }
}

exports.RuleCategorizer = RuleCategorizer;
