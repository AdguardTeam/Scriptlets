import { type AnyCosmeticRule } from '../../nodes';
import { BaseGenerator } from '../base-generator';
/**
 * Possible error messages for uBO selectors. Formatted with {@link sprintf}.
 */
export declare const ERROR_MESSAGES: {
    EMPTY_RULE_BODY: string;
    INVALID_BODY_FOR_SEPARATOR: string;
    MISSING_ADGUARD_MODIFIER_LIST_END: string;
    MISSING_ADGUARD_MODIFIER_LIST_MARKER: string;
    SYNTAXES_CANNOT_BE_MIXED: string;
    SYNTAX_DISABLED: string;
};
/**
 * `CosmeticRuleParser` is responsible for parsing cosmetic rules.
 *
 * Where possible, it automatically detects the difference between supported syntaxes:
 *  - AdGuard
 *  - uBlock Origin
 *  - Adblock Plus
 *
 * If the syntax is common / cannot be determined, the parser gives `Common` syntax.
 *
 * Please note that syntactically correct rules are parsed even if they are not actually
 * compatible with the given adblocker. This is a completely natural behavior, meaningful
 * checking of compatibility is not done at the parser level.
 */
export declare class CosmeticRuleGenerator extends BaseGenerator {
    /**
     * Converts a cosmetic rule AST into a string.
     *
     * @param node Cosmetic rule AST
     * @returns Raw string
     */
    static generate(node: AnyCosmeticRule): string;
}
